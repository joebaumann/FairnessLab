{"version":3,"sources":["Components/Navbar/logo.ico","Components/Navbar/index.js","Components/Header/index.js","Components/Home/Home.js","Components/DatasetSelector/index.js","Components/SelectedPointsTable/index.js","Components/ScoreDistribution/index.js","Components/SubjectsUtility/index.js","Components/Audit/index.js","Components/OtherPages/COMPAS.js","Components/OtherPages/FAQ.js","Components/OtherPages/Contact.js","Components/OtherPages/ErrorPages.js","App.js","reportWebVitals.js","index.js","Components/ParetoPlot/index.js","config.js"],"names":["Navbar","className","to","alt","src","logo","exact","activeClassName","Header","title","dangerouslySetInnerHTML","__html","Home","href","target","rel","DatasetSelector","datasetSelection","setDatasetSelection","setFilteredData","setUnfilteredData","justifier","datasetSelectionCounter","setDatasetSelectionCounter","datasets","compas_file","german_file","ACSEmploymentCA_file","useState","uploadedData","setUploadedData","fileError","setFileError","handleFileJson","e","text","result","jsonFile","JSON","parse","handleFileCSV","csv","newLineCharacter","indexOf","lines","split","headers","i","length","obj","currentline","j","value","parseInt","parseFloat","push","csvToJSON","selectFile","a","files","preventDefault","reader","FileReader","type","onload","readAsText","processData","file","processedData","filteredData","unfilteredData","forEach","row","index","attribute","hasOwnProperty","applyJustifierToRow","splitFileBySensitiveAttributeAndJustifier","isValid","checkDataValidity","error","useEffect","console","log","onChange","name","defaultChecked","SelectedPointsTable","selectedPoints","idOfSelectedPoints","decisionMakerCurrency","labels","subjectsUtility","tableDate","Object","values","sort","b","id","map","tableRow","thresholdGroup0","thresholdGroup1","decisionMakerUtility","fairnessScore","toFixed","ScoreDistribution","thresholdTuples","colors","indices_of_Y0_for_group1","indices_of_Y1_for_group1","group1_Y1","group1_Y0","dataGroup1","y","marker","color","indices_of_Y0_for_group2","indices_of_Y1_for_group2","group2_Y1","group2_Y0","dataGroup2","threshold_lines1","threshold_lines2","linelength","s","selectedPoint","threshold1","xref","y0","x0","y1","x1","line","width","dash","threshold2","layoutGroup1","height","margin","l","r","t","pad","barmode","shapes","xaxis","autorange","yaxis","range","showlegend","legend","x","layoutGroup2","data","layout","SubjectsUtility","fairnessScores","group1","group2","evaluationOfD","tracesUtilities","tracesFairnessScores","traceUtilities","traceFairnessScores","automargin","Audit","props","match","params","demo","setJustifier","setGroup1","setGroup2","d0description","setd0description","d1description","setd1description","y0description","sety0description","y1description","sety1description","setDecisionMakerCurrency","subjectsCurrency","setSubjectsCurrency","setSelectedPoints","setIdOfSelectedPoints","incrementalSelectionId","setIncrementalSelectionId","numThresholds","setNumThresholds","setSubjectsUtility","setFairnessScores","setEvaluationOfD","setThresholdTuples","Array","fill","setColors","ParetoPlot","isDemo","COMPAS","Button","component","Link","FAQ","Contact","Error404","location","useLocation","pathname","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","UtilityQuantifier","setSliderValue","label","unit","disabled","Number","currentSliderValue","setCurrentSliderValue","min","max","step","onMouseUp","list","Math","round","ThresholdInput","currentNumThresholds","setCurrentNumThresholds","onBlur","React","open","setOpen","handleClose","event","reason","dmuTP","setDmuTP","dmuFP","setDmuFP","dmuFN","setDmuFN","dmuTN","setDmuTN","suTP1","setSuTP1","suFP1","setSuFP1","suFN1","setSuFN1","suTN1","setSuTN1","suTP2","setSuTP2","suFP2","setSuFP2","suFN2","setSuFN2","suTN2","setSuTN2","setDecisionMakerUtility","paretoOptimalPointsX","setParetoOptimalPointsX","paretoOptimalPointsY","setParetoOptimalPointsY","undefined","correspondingFairnessMetric","setCorrespondingFairnessMetric","correspondingWeightedFairnessMetric","setCorrespondingWeightedFairnessMetric","colorOfD","setColorOfD","pattern","setPattern","xAxisLabel","setXAxisLabel","sufficientarianismThreshold","setSufficientarianismThreshold","prioritarianismWeight","setPrioritarianismWeight","deselectAllPoints","patternMapper","combination","absoluteDifference","prioritarianSum","aboveThreshold","countConfusion","decisions_array","decisions_value","y_array","y_value","count","utility","scores","threshold","parameter_calculation","decisions","calculateUtilityFromDecisions","tp","fp","fn","tn","averageUtility","sum","value_A","value_B","abs","groups_above_threshold","tuple","calculateValues","calculate_group_value","toThreshold","combineThresholds","scores_A","scores_B","y_A","y_B","combine_group_values","parameter_calculation_1","parameter_calculation_2","values_A","values_B","r_A","r_B","EPSILON","updateThresholdCalculations","combineFunction","maxUnfairness","updateEvaluationOfD","fairnessValue_A","fairnessValue_B","updateParetoFront","points","f","paretoOptimalPoints","pf","getParetoFrontier","paretoX","p","paretoY","global","config","xaxislabel","replace","updateXAxisLabel","updateCorrespondsToExistingMetric","htmlFor","style","anchorOrigin","horizontal","vertical","autoHideDuration","message","onClose","action","Fragment","size","onClick","fontSize","mode","visible","hovertemplate","symbol","hovermode","newColors","pointIndex","indexOfSelectedPoint","splice","hue","random","getRandomColor","module","exports"],"mappings":"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","file":"static/js/main.18d5a049.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.672e0f8f.ico\";","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './Navbar.css';\nimport logo from \"./logo.ico\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"Navbar\">\n      <Link to=\"/\">\n        <img alt=\"Logo\" className=\"Navbar-logo\" src={logo}/>\n      </Link>\n      <NavLink key=\"audit\" className=\"Navbar-link\" exact to=\"/audit\" activeClassName=\"active\">Audit</NavLink>\n      <NavLink key=\"compas\" className=\"Navbar-link\" exact to=\"/compas\" activeClassName=\"active\">COMPAS Case Study</NavLink>\n      <NavLink key=\"faq\" className=\"Navbar-link\" exact to=\"/faq\" activeClassName=\"active\">FAQ</NavLink>\n      <NavLink key=\"contact\" className=\"Navbar-link\" exact to=\"/contact\" activeClassName=\"active\">Contact</NavLink>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from 'react';\nimport './Header.css';\n\nconst Header = ({title}) => {\n    return (\n        <header className=\"Header\">\n          <h1 dangerouslySetInnerHTML={{__html: title}} />\n        </header>\n      );\n}\n\nexport default Header;","import React from \"react\";\nimport Header from '../Header';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <Header title=\"FairnessLab\"/>\n      <div className=\"Content\">\n        <h1>Don't just audit your decisions but their consequences</h1>\n        <p>\n          Welcome to the FairnessLab! This tool is intended to help you audit machine learning models.\n          It takes a group fairness approach, meaning it audits a tool across socio-demographic groups.\n          However, it is built to avoid some of the shortcomings of standard group fairness metrics.\n          Specifically, it aims to help domain experts translate their knowledge into fairness metrics that uniquely fit the context in which the machine learning model is deployed.\n          This sets it apart from existing tools for group fairness audits such as AIF360 or FairLearn.\n          The FairnessLab is fit for both internal audits as well as external audits, but it is currently limited to auditing binary classifiers, so to models that are used to make binary decisions (e.g, whether an applicant will receive a loan or not).\n          If your model is not a binary classifier, you might still be able to use this model if converting your data to a binary setting makes sense for your application or at least for its audit. <a href=\"/FairnessLab/#/faq\">You can read more about that in the FAQ.</a>\n        </p>\n        <h3>Who is this for?</h3>\n        <p>\n          The tool is meant to be accessible to people with limited technical knowledge. We highly encourage everyone to use this tool to audit publically accessible models.\n          What you will for your own audit is mainly domain knowledge:\n          You have to have a good understanding of the context in which the machine learning model is deployed to be able to define an appropriate way of measuring fairness in this context.\n          The FairnessLab will guide you through this process of defining an appropriate fairness metric.\n        </p>\n        <h3>Want to see the FairnessLab in action?</h3>\n        <p>\n          You can find an audit of the well-known COMPAS dataset in the section <a href=\"/FairnessLab/#/compas\">COMPAS Case Study</a>.\n          The dataset was published along with the ProPublica story <a href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\" target=\"_blank\" rel=\"noreferrer\">\"Machine Bias\"</a> that started a debate about how to evaluate the fairness of machine learning models.\n          When you follow our audit of COMPAS in the FairnessLab, you will see that there are more ways to evaluate the fairness of the predictions than discussed by ProPublica (which audited COMPAS) and Northpointe (the company that developed COMPAS).\n          Importantly, instutional racism might imply that the consequences of the predictions should be evaluated differently than standard group fairness metrics do.\n          Going through this case study should thus both give you new insights into the COMPAS case and a better understanding of what the FairnessLab is capable of.\n        </p>\n        <h3>Ready to get started?</h3>\n        <p>\n          In the navigation bar you can find the section <a href=\"/FairnessLab/#/audit\">audit</a>. Choose a dataset to explore or upload your own dataset and then follow the instructions to derive a fairness metric that fits the context of the dataset.\n          You can then evaluate the model based on this metric.\n        </p>\n        <h3>Curious to learn more?</h3>\n        <p>\n          This tool has been built by a team of researchers at the Zurich University of Applied Sciences, the University of Zurich and the University of St. Gallen.\n          You can learn more about us and our work <a href=\"https://fair-ai.ch\" target=\"_blank\" rel=\"noreferrer\">on our website</a>.\n          The FairnessLab builds on our theoretical work on group fairness metrics: \"Distributive Justice as the Foundational Premise of Fair ML: Unification, Extension, and Interpretation of Group Fairness Metrics\"<a href=\"https://arxiv.org/abs/2206.02897\" target=\"_blank\" rel=\"noreferrer\">(available on arXiv)</a> and \"A Justice-Based Framework for the Analysis of Algorithmic Fairness-Utility Trade-Offs\" <a href=\"https://arxiv.org/abs/2206.02891\" target=\"_blank\" rel=\"noreferrer\">(available on arXiv)</a>.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import './DatasetSelector.css';\nimport React, {useState, useEffect} from 'react';\nimport compas_file from '../../data_static/compas/compas.json';\nimport german_file from '../../data_static/credit_lending/german.json';\nimport ACSEmploymentCA_file from '../../data_static/ACS/ACSEmployment_CA.json';\n\nfunction DatasetSelector({datasetSelection, setDatasetSelection, setFilteredData, setUnfilteredData, justifier, datasetSelectionCounter, setDatasetSelectionCounter}) {\n    const datasets = {\n        'COMPAS': {\n            'file': compas_file\n        },\n        'German': {\n            'file': german_file\n        },\n        'ACSEmploymentCA': {\n            'file': ACSEmploymentCA_file\n        },\n        'Own': {\n            'file': []\n        }\n    }\n\n    const [uploadedData, setUploadedData] = useState([]);\n    const [fileError, setFileError] = useState(false);\n\n    function handleFileJson(e) {\n        const text = (e.target.result)\n        const jsonFile = JSON.parse(text)\n        setUploadedData(jsonFile)\n    }\n\n    function handleFileCSV(e) {\n        const text = (e.target.result)\n        const jsonFile = csvToJSON(text)\n        setUploadedData(jsonFile)\n    }\n\n    // http://techslides.com/convert-csv-to-json-in-javascript\n    function csvToJSON(csv){\n\n        let newLineCharacter = '\\n'\n        if (csv.indexOf('\\r\\n') !== -1) {\n            newLineCharacter = '\\r\\n'\n        } else if (csv.indexOf('\\r') !== -1) {\n            newLineCharacter = '\\r'\n        }\n        let lines = csv.split(newLineCharacter);\n    \n        let result = [];\n    \n        let headers = lines[0].split(\",\");\n    \n        for(var i=1;i<lines.length-1;i++){\n    \n            let obj = {};\n            let currentline=lines[i].split(\",\");\n    \n            for (let j=0;j<headers.length;j++){\n                let value = currentline[j];\n                if (headers[j] === 'Y' || headers[j] === 'D' || headers[j] === 'sensitive-attribute') {\n                    value = parseInt(value)\n                } else if (headers[j] === 'scores') {\n                    value = parseFloat(value)\n                }\n                obj[headers[j]] = value\n            }\n    \n            result.push(obj);\n    \n        }\n    \n        return result;\n    }\n\n    // https://medium.com/@miniceo/front-end-shorts-how-to-read-content-from-the-file-input-in-react-17f49b293909\n    const selectFile = async (e) => {\n        try {\n            if (e?.target?.files.length > 0) {\n                e.preventDefault()\n                const reader = new FileReader()\n                if (e.target.files[0].type === \"application/json\") {\n                    reader.onload = handleFileJson\n                } else if (e.target.files[0].type === \"text/csv\") {\n                    reader.onload = handleFileCSV\n                } else {\n                    throw 'Wrong file type'\n                }\n                reader.readAsText(e.target.files[0])\n            }\n            setFileError(false)\n        } catch (error) {\n            setFilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setUnfilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setFileError(true)\n        }\n    }\n\n    function processData() {\n        let file\n        if (datasetSelection === 'Own') {\n            file = uploadedData\n        } else {\n            file = datasets[datasetSelection]['file']\n        }\n        try {\n            let processedData = splitFileBySensitiveAttributeAndJustifier(file, justifier)\n            let filteredData = processedData['filteredData']\n            let unfilteredData = processedData['unfilteredData']\n            checkDataValidity(filteredData, unfilteredData)\n            setFilteredData(filteredData)\n            setUnfilteredData(unfilteredData)\n            setFileError(false)\n        } catch (error) {\n            setFilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setUnfilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setFileError(true)\n        }\n        setDatasetSelectionCounter(datasetSelectionCounter + 1)\n    }\n\n    function applyJustifierToRow(row, justifier) {\n        switch(justifier) {\n            case 'no_justifier':\n                return true;\n            case 'y_0':\n                return row['Y'] === 0;\n            case 'y_1':\n                return row['Y'] === 1;\n            case 'd_0':\n                return row['D'] === 0;\n            case 'd_1':\n                return row['D'] === 1;\n        }\n    }\n\n    function splitFileBySensitiveAttributeAndJustifier(file, justifier) {\n        let filteredData = {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]}\n        let unfilteredData = {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]}\n        file.forEach(function (row, index) {\n            let attribute = row['sensitive-attribute']\n            unfilteredData['y'][attribute].push(row['Y'])\n            if (row.hasOwnProperty('scores')) {\n                unfilteredData['scores'][attribute].push(row['scores'])\n            }\n            if (row.hasOwnProperty('D')) {\n                unfilteredData['d'][attribute].push(row['D'])\n            }\n            if (applyJustifierToRow(row, justifier)) {\n                filteredData['y'][attribute].push(row['Y'])\n                if (row.hasOwnProperty('scores')) {\n                    filteredData['scores'][attribute].push(row['scores'])\n                }\n                if (row.hasOwnProperty('D')) {\n                    filteredData['d'][attribute].push(row['D'])\n                }\n            }\n        })\n        return {'filteredData': filteredData, 'unfilteredData': unfilteredData}\n    }\n\n    function checkDataValidity(filteredData, unfilteredData) {\n        let isValid = false;\n        if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['scores'][0].length && filteredData['y'][0].length === filteredData['d'][0].length\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['scores'][1].length && filteredData['y'][1].length === filteredData['d'][1].length\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['scores'][0].length && unfilteredData['y'][0].length === unfilteredData['d'][0].length\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['scores'][1].length && unfilteredData['y'][1].length === unfilteredData['d'][1].length) {\n            isValid = true;\n        } else if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['scores'][0].length && filteredData['d'][0].length === 0\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['scores'][1].length && filteredData['d'][1].length === 0\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['scores'][0].length && unfilteredData['d'][0].length === 0\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['scores'][1].length && unfilteredData['d'][1].length === 0) {\n            isValid = true;\n        } else if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['d'][0].length && filteredData['scores'][0].length === 0\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['d'][1].length && filteredData['scores'][1].length === 0\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['d'][0].length && unfilteredData['scores'][0].length === 0\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['d'][1].length && unfilteredData['scores'][1].length === 0) {\n            isValid = true;\n        }\n        if (!isValid) {\n            throw 'Incorrect format!';\n        }\n    }\n\n    useEffect(() => {\n        console.log('execute once')\n        processData()\n    }, []);\n    \n    useEffect(() => {\n        processData()\n    }, [datasetSelection, justifier]);\n    \n    useEffect(() => {\n            processData()\n    }, [uploadedData, datasetSelection]);\n\n    // TODO: Not  working atm, fix this\n    // useEffect(() => {\n    //     if (uploadedData.length !== 0) {\n    //         setDatasetSelection('Own')\n    //     }\n    // }, [uploadedData]);\n\n    return(\n        <div className=\"DatasetSelector\">\n        <h1>Dataset</h1>\n        <div>Choose a dataset that you want to audit.</div>\n        <br/>\n        <span value={datasetSelection} onChange={(e) => setDatasetSelection(e.target.value)}>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"COMPAS\" defaultChecked={datasetSelection === \"COMPAS\"} /> <b>COMPAS</b>\n            <div className=\"datasetExplanation\">\n                The COMPAS dataset was collected by ProPublica for their article \"Machine Bias.\" We preprocessed the dataset to make it usable for this demo. The predicted scores are the original (decimal) scores from COMPAS.\n                <ul>\n                    <li>Y=0: Was arrested within two years</li>\n                    <li>Y=1: Was not arrested within two years</li>\n                    <li>D=0: Predicted to be rearrested</li>\n                    <li>D=1: Predicted not to be rearrested</li>\n                    <li>Group 1: Black</li>\n                    <li>Group 2: white</li>\n                </ul>\n                <a href=\"https://drive.google.com/file/d/1kd93hv1t7MyIu8f09QWQQobN0jbQHOGk/view?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"German\" defaultChecked={datasetSelection === \"German\"} /> <b>Credit lending (UCI German Credit)</b>\n            <div className=\"datasetExplanation\">\n                The German Credit dataset is available in the UCI repository. It is a small dataset of German credit loans from the 1970s. The scores have been predicted with a vanilla logistic regression.\n                <ul>\n                    <li>Y=0: Defaulted on the loan</li>\n                    <li>Y=1: Repaid the loan</li>\n                    <li>D=0: Predicted to default</li>\n                    <li>D=1: Predicted to repay</li>\n                    <li>Group 1: female</li>\n                    <li>Group 2: male</li>\n                </ul>\n                <a href=\"https://drive.google.com/file/d/1sKlZRV6pYxgED9JEulzJJLZ5HHldZ5fj/view?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"ACSEmploymentCA\" defaultChecked={datasetSelection === \"ACSEmploymentCA\"} /> <b>ACSEmployment (California)</b>\n            <div className=\"datasetExplanation\">\n                The ACSEmployment dataset is derived from US Census data and is available through the Folktables GitHub repository. It is a large dataset of US adults from California. The task is to predict whether an individual is employed. The scores have been predicted with a vanilla logistic regression.\n                <ul>\n                    <li>Y=0: Is not employed</li>\n                    <li>Y=1: Is employed</li>\n                    <li>D=0: Predicted to be unemployed</li>\n                    <li>D=1: Predicted to be employed</li>\n                    <li>Group 1: Black</li>\n                    <li>Group 2: white</li>\n                </ul>\n                <a href=\"https://colab.research.google.com/drive/1R_UgSktEOFPccktXDis8VakEFJwuEvmd?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"Own\" defaultChecked={datasetSelection === \"Own\"} /> <b>Choose your own dataset:</b>\n        </span>\n        <input type=\"file\" name=\"file\" onChange={selectFile} />\n        <div className=\"datasetExplanation\">\n            If you want to upload your own dataset as a CSV file, please make sure that it has <ul>\n            <li>a column named 'Y' (only 0 and 1 allowed)</li>\n            <li>a column named 'sensitive-attribute' (only 0 and 1 allowed)</li>\n            <li>a column named 'scores' (values have to be between 0 and 1) and/or a column named 'D' (only 0 and 1 allowed)</li>\n            </ul>\n            You can also upload a JSON file with an array of objects that contain the previously mentioned attributes\n        </div>\n        <br/>\n        {datasetSelection === 'Own' && uploadedData.length === 0 && fileError &&\n            <div className=\"datasetExplanation\">Error: Please upload a dataset to audit or choose one of the predefined datasets.</div>\n        }\n        {datasetSelection === 'Own' && uploadedData.length !== 0 && fileError &&\n            <div className=\"datasetExplanation\">Error: The feature labels of the selected file don't match the template. Please upload a dataset with the right feature labels.</div>\n        }\n        </div>\n    )\n}\n  \nexport default DatasetSelector;","import React from 'react';\nimport './SelectedPointsTable.css';\n\n\nfunction SelectedPointsTable({selectedPoints, idOfSelectedPoints, decisionMakerCurrency, subjectsUtility, labels}) {\n\n  const tableDate = Object.values(idOfSelectedPoints).sort(function(a, b){\n    return a.id-b.id\n  })\n    \n  function renderTableData() {\n    \n    return tableDate.map((tableRow, index) => {\n      const { id, thresholdGroup0, thresholdGroup1, decisionMakerUtility, fairnessScore } = tableRow //destructuring\n      return (\n          <tr key={id}>\n            <td>{id}</td>\n            {thresholdGroup0 ?\n              <td>{labels[0]}: {thresholdGroup0.toFixed(2)}; {labels[1]}: {thresholdGroup1.toFixed(2)}</td>\n              : <td>Decision rule from dataset</td>\n            }\n            <td>{decisionMakerUtility} {decisionMakerCurrency}</td>\n            <td>{fairnessScore.toFixed(4)}</td>\n          </tr>\n      )\n    })\n  }\n\n  function renderTable() {\n    if (selectedPoints.length === 0) {\n      return (<h4 id=\"nothingSelected\">Nothing selected yet.</h4>)\n    }\n    else {\n      return (\n        <table id='selectedPoints'>\n        <tbody>\n          <tr>\n            <th>Selection</th>\n            <th>Thresholds</th>\n            <th>Decision maker's utility</th>\n            <th>Fairness score</th>\n          </tr>\n          {renderTableData()}\n        </tbody>\n        </table>\n        )\n      }\n  }\n\n  return (\n    <div>\n        <h2 id='title'>Selected Decision Rules</h2>\n        {renderTable()}\n    </div>\n  )\n}\n\n\n\nexport default SelectedPointsTable;","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport './ScoreDistribution.css';\n\nconst ScoreDistribution = ({unfilteredData, selectedPoints, thresholdTuples, labels, colors}) => {\n    var indices_of_Y0_for_group1 = [];\n    var indices_of_Y1_for_group1 = [];\n    for(let i = 0; i < unfilteredData['y'][0].length; i++)\n        if (unfilteredData['y'][0][i] === 0)\n          indices_of_Y0_for_group1.push(i);\n        else\n          indices_of_Y1_for_group1.push(i);\n    const group1_Y1 = [];\n    indices_of_Y1_for_group1.forEach(i => group1_Y1.push(unfilteredData['scores'][0][i]));\n    const group1_Y0 = [];\n    indices_of_Y0_for_group1.forEach(i => group1_Y0.push(unfilteredData['scores'][0][i]));\n    const trace_group1_Y1 = {\n      y: group1_Y1,\n      type: \"histogram\",\n      name: 'Y=1',\n      marker: {\n        color: \"rgba(30, 132, 201, 0.4)\",\n      },\n    };\n    const trace_group1_Y0 = {\n      y: group1_Y0,\n      type: \"histogram\",\n      name: 'Y=0',\n      marker: {\n          color: \"rgba(98, 182, 239, 0.4)\",\n      },\n    };\n    const dataGroup1 = [trace_group1_Y1, trace_group1_Y0]\n    \n\n    var indices_of_Y0_for_group2 = [];\n    var indices_of_Y1_for_group2 = [];\n    for(let i = 0; i < unfilteredData['y'][1].length; i++)\n        if (unfilteredData['y'][1][i] === 0)\n          indices_of_Y0_for_group2.push(i);\n        else\n          indices_of_Y1_for_group2.push(i);\n    const group2_Y1 = [];\n    indices_of_Y1_for_group2.forEach(i => group2_Y1.push(unfilteredData['scores'][1][i]));\n    const group2_Y0 = [];\n    indices_of_Y0_for_group2.forEach(i => group2_Y0.push(unfilteredData['scores'][1][i]));\n    const trace_group2_Y1 = {\n        y: group2_Y1,\n        type: \"histogram\",\n        name: 'Y=1',\n        marker: {\n           color: \"rgba(207, 122, 37, 0.4)\",\n        },\n    };\n    const trace_group2_Y0 = {\n      y: group2_Y0,\n      type: \"histogram\",\n      name: 'Y=0',\n      marker: {\n         color: \"rgba(255, 177, 101, 0.4)\",\n      },\n    };\n    const dataGroup2 = [trace_group2_Y1, trace_group2_Y0]\n\n    let threshold_lines1 = []\n    let threshold_lines2 = []\n\n    function getRandomInt(min, max) {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n    }\n    \n    var linelength = 2\n    for (let s=0; s < selectedPoints.length; s++) {\n      var selectedPoint = selectedPoints[s]\n      if (selectedPoint !== -1) {\n        var color = colors[selectedPoint]\n        var threshold1 = {\n          type: 'line',\n          xref: 'paper',\n          y0: thresholdTuples[selectedPoint][0],\n          x0: 0.05,\n          y1: thresholdTuples[selectedPoint][0],\n          x1: 1,\n          line: {\n            color: color,\n            width: 3,\n            dash: linelength + \"px,20px\"\n          }\n        }\n        threshold_lines1.push(threshold1)\n        \n        var threshold2 = {\n          type: 'line',\n          xref: 'paper',\n          y0: thresholdTuples[selectedPoint][1],\n          x0: 0,\n          y1: thresholdTuples[selectedPoint][1],\n          x1: 0.95,\n          line: {\n            color: color,\n            width: 3,\n            dash: linelength + \"px,20px\"\n          }\n        }\n        threshold_lines2.push(threshold2)\n        linelength += 2\n      }\n\n    }\n\n    const layoutGroup1 = {\n      width: 400,\n      height: 400,\n      margin: {\n        l: 50,\n        r: 0,\n        b: 50,\n        t: 80,\n        pad: 4\n      },\n      title: labels[0],\n      barmode: \"overlay\",\n      shapes: threshold_lines1,\n      xaxis: {\n          type: 'histogram',\n          title: 'Frequency',\n          autorange: 'reversed',\n      },\n      yaxis: {\n        title: 'Probability score',\n        range: [-0.05, 1.05]\n      },\n      showlegend: true,\n      legend: {\n        x: 0,\n        y: 1\n      }\n    };\n\n    const layoutGroup2 = {\n      width: 400,\n      height: 400,\n      margin: {\n        l: 0,\n        r: 50,\n        b: 50,\n        t: 80,\n        pad: 4\n      },\n      title: labels[1],\n      barmode: \"overlay\",\n      shapes: threshold_lines2,\n      xaxis: {\n          type: 'histogram',\n          title: 'Frequency'\n      },\n      yaxis: {\n        range: [-0.05, 1.05]\n      },\n      showlegend: true,\n      legend: {\n        x: 1,\n        y: 1\n      }\n    };\n\n    return (\n      <div className='ScoreDistribution'>\n        <h2>Score distribution</h2>\n        {unfilteredData['scores'][0].length === 0 && unfilteredData['scores'][1].length === 0 ?\n          <>This plot is only available if the audited dataset contains predicted scores. The current dataset does not have a column named 'scores.'</>\n          :\n          <>\n            Individuals with probability scores above or equal to their group-specific threshold receive D=1. The others receive D=0.\n            <br/>\n            <Plot className='LeftPlot'\n                data={dataGroup1}\n                layout={layoutGroup1}\n            />\n            <Plot className='RightPlot'\n                data={dataGroup2}\n                layout={layoutGroup2}\n            />\n          </>\n        \n        }\n      </div>\n      );\n}\n\nexport default ScoreDistribution;","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport './SubjectsUtility.css';\n\nconst SubjectsUtility = ({subjectsUtility, fairnessScores, group1, group2, selectedPoints, colors, idOfSelectedPoints, evaluationOfD}) => {\n    let tracesUtilities = []\n    let tracesFairnessScores = []\n    selectedPoints.forEach(i => {\n        let traceUtilities = {\n            x: [`${group1} (${idOfSelectedPoints[i].id})`, `${group2} (${idOfSelectedPoints[i].id})`],\n            y: i===-1? evaluationOfD[2] : subjectsUtility[i],\n            marker:{\n              color: i===-1? ['orange', 'orange'] : [colors[i], colors[i]]\n            },\n            type: 'bar',\n            name: 'Selection ' + idOfSelectedPoints[i].id\n        };\n        tracesUtilities.push(traceUtilities)\n        let traceFairnessScores = {\n            x: [`Fairness score (${idOfSelectedPoints[i].id})`],\n            y: i===-1? [evaluationOfD[0]] : [fairnessScores[i]],\n            marker:{\n              color: i===-1? ['orange'] : [colors[i]]\n            },\n            type: 'bar',\n            name: 'Selection ' + idOfSelectedPoints[i].id\n        };\n        tracesFairnessScores.push(traceFairnessScores)\n    })\n    \n    \n    return (\n        <div className='SubjectsUtility'>\n            <h2>Decision subjects' utility for fairness score calculation</h2>\n            {selectedPoints.length === 0 && \n            <b>Select at least one point in the pareto plot to see something.<br/><br/></b>\n            }\n            <span>Here you can see a direct comparison of the decision subjects' average utilities for the selected points.</span>\n            <br/>\n            <Plot\n                data={tracesUtilities}\n\n                layout = {\n                    {\n                        title: 'Decision subjects\\' utilities',\n                        xaxis: {\n                            automargin: true,\n                        }\n                    }\n\n                }\n            />\n            <br/>\n            <span>Here you can see a direct comparison of the fairness scores for the selected points. The higher the score, the less fair the decision rule is considered to be.</span>\n            <br/>\n            <Plot\n                data={tracesFairnessScores}\n\n                layout = {\n                    {\n                        title: 'Calculated fairness score',\n                        xaxis: {\n                            automargin: true,\n                        }\n                    }\n\n                }\n            />\n        </div>\n      );\n}\n\nexport default SubjectsUtility;","import './Audit.css';\nimport React, {useState} from 'react';\nimport Header from '../Header';\nimport DatasetSelector from '../DatasetSelector';\nimport ParetoPlot from '../ParetoPlot';\nimport SelectedPointsTable from '../SelectedPointsTable';\nimport ScoreDistribution from '../ScoreDistribution';\nimport SubjectsUtility from '../SubjectsUtility';\n\nfunction Audit(props) {\n  // loads the state for a specific demo if the audit page was accessed from the compas case study\n  \n  const [datasetSelection, setDatasetSelection] = useState('COMPAS');\n  const [justifier, setJustifier] = useState(() => {\n    if (props.match.params.demo === \"compasaudit1\") {\n      return 'y_0'\n    }\n    else if (props.match.params.demo === \"compasaudit2\") {\n      return 'y_0'\n    }\n    else {\n      return 'no_justifier';\n    }\n  });\n  // the datasetSelectionCounter is incremented every time the datasetSelection or the justifier changes\n  // this makes sure that the decision subject utilities are recalculated after the justifier has been applied to the dataset\n  const [datasetSelectionCounter, setDatasetSelectionCounter] = useState(0);\n  const [group1, setGroup1] = useState('male');\n  const [group2, setGroup2] = useState('female');\n  const [d0description, setd0description] = useState('negative decision (D=0)');\n  const [d1description, setd1description] = useState('positive decision (D=1)');\n  const [y0description, sety0description] = useState('of type Y=0');\n  const [y1description, sety1description] = useState('of type Y=1');\n  const [decisionMakerCurrency, setDecisionMakerCurrency] = useState('CHF');\n  const [subjectsCurrency, setSubjectsCurrency] = useState('CHF');\n  const [selectedPoints, setSelectedPoints] = useState([]);\n  const [idOfSelectedPoints, setIdOfSelectedPoints] = useState({});\n  const [incrementalSelectionId, setIncrementalSelectionId] = useState(1);\n  const [numThresholds, setNumThresholds] = useState(11)\n  const [subjectsUtility, setSubjectsUtility] = useState([])\n  const [fairnessScores, setFairnessScores] = useState([])\n  const [evaluationOfD, setEvaluationOfD] = useState([0, 0]);\n  const [thresholdTuples, setThresholdTuples] = useState([]);\n  const [colors, setColors] = useState(Array(numThresholds * numThresholds).fill('#4e87ad'));\n  const [filteredData, setFilteredData] = useState({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]});\n  const [unfilteredData, setUnfilteredData] = useState({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n\n  return(\n    <div className=\"Audit\">\n      { props.match.params.demo === 'compasaudit1' ?\n        <Header title=\"Audit: COMPAS Case Study Audit 1 (replication of <a href='https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing'  target='_blank'>ProPublica</a>)\"/>\n        :\n        <>\n        { props.match.params.demo === 'compasaudit2' ?\n          <Header title=\"Audit: COMPAS Case Study Audit 2 (new insights)\"/>\n          :\n          <Header title=\"Audit\"/>\n        }\n        </>\n      }\n      <div className=\"Content\">\n        <DatasetSelector datasetSelection={datasetSelection} setDatasetSelection={setDatasetSelection} setFilteredData={setFilteredData} setUnfilteredData={setUnfilteredData} justifier={justifier} datasetSelectionCounter={datasetSelectionCounter} setDatasetSelectionCounter={setDatasetSelectionCounter} />\n        <ParetoPlot isDemo={props.match.params.demo} datasetSelection={datasetSelection} filteredData={filteredData} unfilteredData={unfilteredData} group1={group1} setGroup1={setGroup1} group2={group2} setGroup2={setGroup2} d0description={d0description} setd0description={setd0description} d1description={d1description} setd1description={setd1description} y0description={y0description} sety0description={sety0description} y1description={y1description} sety1description={sety1description} numThresholds={numThresholds} setNumThresholds={setNumThresholds} selectedPoints={selectedPoints} setSelectedPoints={setSelectedPoints} idOfSelectedPoints={idOfSelectedPoints} setIdOfSelectedPoints={setIdOfSelectedPoints} incrementalSelectionId={incrementalSelectionId} setIncrementalSelectionId={setIncrementalSelectionId} colors={colors} setColors={setColors} setSubjectsUtility={setSubjectsUtility} fairnessScores={fairnessScores} setFairnessScores={setFairnessScores} thresholdTuples={thresholdTuples} setThresholdTuples={setThresholdTuples} decisionMakerCurrency={decisionMakerCurrency} setDecisionMakerCurrency={setDecisionMakerCurrency} subjectsCurrency={subjectsCurrency} setSubjectsCurrency={setSubjectsCurrency} justifier={justifier} setJustifier={setJustifier} datasetSelectionCounter={datasetSelectionCounter} evaluationOfD={evaluationOfD} setEvaluationOfD={setEvaluationOfD} />\n        <SelectedPointsTable selectedPoints={selectedPoints} idOfSelectedPoints={idOfSelectedPoints} decisionMakerCurrency={decisionMakerCurrency} subjectsCurrency={subjectsCurrency} labels={[group1, group2]} />\n        <ScoreDistribution unfilteredData={unfilteredData} selectedPoints={selectedPoints} labels={[group1, group2]} colors={colors} thresholdTuples={thresholdTuples} />\n        <SubjectsUtility subjectsUtility={subjectsUtility} fairnessScores={fairnessScores} group1={group1} group2={group2} selectedPoints={selectedPoints} colors={colors} idOfSelectedPoints={idOfSelectedPoints} evaluationOfD={evaluationOfD} />\n      </div>\n    </div>\n  )\n}\n  \nexport default Audit;","import React from \"react\";\nimport Header from '../Header';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport './Pages.css';\n\nfunction COMPAS() {\n  return (\n    <div>\n      <Header title=\"COMPAS case study\"/>\n      <div className=\"Content\">\n        <p>\n          Space for our blog post? Our link to it?\n        </p>\n        <Button component={Link} to=\"/audit/compasaudit1\">\n          COMPAS Audit 1\n        </Button>\n        <Button component={Link} to=\"/audit/compasaudit2\">\n          COMPAS Audit 2\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default COMPAS;","import React from \"react\";\nimport Header from '../Header';\nimport './Pages.css'\n\nfunction FAQ() {\n    return (\n        <div>\n        <Header title=\"FAQ\"/>\n\n        <div className=\"Content\">\n            <h3>What format should the uploaded dataset be in?</h3>\n            <p>\n            You can upload your dataset as either a CSV or a JSON file.\n            You will need the following attributes:\n            </p>\n            <ul>\n                <li><b>sensitive-attribute</b>: <i>binary (0 or 1)</i>, defines the salient groups that you want to compare. These could be groups based on gender, race, age, disability status, sexual orientation etc.</li>\n                <li><b>Y</b>: <i>binary (0 or 1)</i>, the target variable, what the model tries to predict</li>\n                <li><b>scores</b>: <i>continuous variable (between 0 and 1)</i>, what the model predicts as the probability of the individual having Y=1</li>\n                <li><b>D</b>: <i>binary (0 or 1)</i>, the decision of the model</li>\n            </ul>\n            <p>\n            Whether you upload a CSV or JSON file, you can always add more attributes to your file, but only the ones listed above will be considered.\n            </p>\n            <p>\n            If you want to upload your dataset as a <b>CSV</b> file, make sure to use a comma as the separator. The structure should look as follows:\n            </p>\n            <table>\n                <thead>\n                    <tr>\n                        <th>sensitive-attribute</th>\n                        <th>Y</th>\n                        <th>scores</th>\n                        <th>D</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>0.7</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>0</td>\n                        <td>1</td>\n                        <td>0.8</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>0</td>\n                        <td>0.6</td>\n                        <td>1</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>\n                If you want to upload a <b>JSON</b> file, make sure it looks like the following with one object per individual:\n            </p>\n            <p className=\"JSON\">\n                [&#123;'sensitive-attribute': 1, 'Y': 1, 'scores': 0.7, 'D': 1&#125;, &#123;'sensitive-attribute': 0, 'Y': 1, 'scores': 0.8, 'D': 1&#125;, &#123;'sensitive-attribute': 1, 'Y': 0, 'scores': 0.6, 'D': 1&#125;]\n            </p>\n\n            <h3 id=\"binary-classifier\">My data is not from a binary classifier. Can I still use this auditing tool?</h3>\n            <p>\n                Yes, if you convert it to a binary dataset. Only do this if this makes sense in the context of your application.\n            </p>\n\n            <h3>I don't have the scores that the model outputs ('scores'), only the final decisions ('D'). How does this affect the audit?</h3>\n            <p>\n                The Pareto plot only shows the utility of the decision-maker and the fairness score for the decisions in the dataset (the column 'D').\n            </p>\n\n            <h3>What does the Pareto plot show?</h3>\n            <p>\n                If 'scores' are available:\n            </p>\n            <p>\n                If 'D' is available:\n            </p>\n\n            <h3>What makes the FairnessLab different from tools like Aequitas, AIF360 or FairLearn?</h3>\n            <p>\n                Extension of standard group fairness metrics. Highlights assumptions of standard metrics.\n            </p>\n        </div>\n    </div>\n  );\n}\n\nexport default FAQ;","import React from \"react\";\nimport Header from '../Header';\nimport './Pages.css'\n\nexport function Contact() {\n  return (\n    <div>\n      <Header title=\"Contact\"/>\n        <div className=\"Content\">\n        <p>\n          For questions, comments or feedback on this tool, please contact the developers: Corinna Hertweck [<a href=\"mailto:corinna.hertweck@uzh.ch\">corinna.hertweck@uzh.ch</a>] and Joachim Baumann [<a href=\"mailto:baumann@ifi.uzh.ch\">baumann@ifi.uzh.ch</a>].\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;","import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport './Pages.css'\n\nexport function Error404() {\n  let location = useLocation();\n  return (\n    <div>\n      <h1>Resource not found at {location.pathname}</h1>\n      <p>\n        <Link to=\"/\">Go home</Link>\n      </p>\n    </div>\n  );\n}\n","import './App.css';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home/Home\";\nimport Audit from \"./Components/Audit\";\nimport COMPAS from \"./Components/OtherPages/COMPAS\";\nimport FAQ from \"./Components/OtherPages/FAQ\";\nimport Contact from \"./Components/OtherPages/Contact\";\nimport { Error404 } from \"./Components/OtherPages/ErrorPages\";\n\nfunction App() {\n\n  return (\n    <div>\n      <HashRouter>\n\n        <Navbar/>\n\n        <div className=\"Page\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/audit/:demo?\" component={Audit}/> {/* 'demo' is an optional parameter to load one of the compas audits described in the compas case study */}\n            <Route path=\"/compas\" component={COMPAS}/>\n            <Route path=\"/faq\" component={FAQ}/>\n            <Route path=\"/contact\" component={Contact}/>\n            <Route path=\"*\" component={Error404}/>\n          </Switch>\n        </div>\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, {useState, useEffect} from 'react';\nimport pf from 'pareto-frontier';\nimport Plot from 'react-plotly.js';\nimport './ParetoPlot.css';\nimport '../../config';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\n\nfunction ParetoPlot({isDemo, filteredData, unfilteredData, group1, setGroup1, group2, d0description, setd0description, d1description, setd1description, y0description, sety0description, y1description, sety1description, setGroup2, datasetSelection, numThresholds, setNumThresholds, selectedPoints, setSelectedPoints, idOfSelectedPoints, setIdOfSelectedPoints, incrementalSelectionId, setIncrementalSelectionId, colors, setColors, setSubjectsUtility, fairnessScores, setFairnessScores, thresholdTuples, setThresholdTuples, decisionMakerCurrency, setDecisionMakerCurrency, subjectsCurrency, setSubjectsCurrency, justifier, setJustifier, datasetSelectionCounter, evaluationOfD, setEvaluationOfD}) {\n    \n    const [open, setOpen] = React.useState(false);\n    \n    const handleClose = (event, reason) => {\n        if (\"clickaway\" === reason) return;\n        setOpen(false);\n    };\n    \n    const handleSnackbar = () => {\n        setOpen(true);\n    };\n  \n    const [dmuTP, setDmuTP] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return 0\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return 0\n        }\n        else {\n          return 1;\n        }\n      });\n    const [dmuFP, setDmuFP] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return -1\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return -1\n        }\n        else {\n          return 0;\n        }\n      });\n    const [dmuFN, setDmuFN] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return -1\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return -1\n        }\n        else {\n          return 0;\n        }\n      });\n    const [dmuTN, setDmuTN] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return 0\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return 0\n        }\n        else {\n          return 1;\n        }\n      });\n    const [suTP1, setSuTP1] = useState(1);\n    const [suFP1, setSuFP1] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return -1\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return -2\n        }\n        else {\n          return 1;\n        }\n      });\n    const [suFN1, setSuFN1] = useState(0);\n    const [suTN1, setSuTN1] = useState(0);\n    const [suTP2, setSuTP2] = useState(1);\n    const [suFP2, setSuFP2] = useState(() => {\n        if (isDemo === \"compasaudit1\") {\n          return -1\n        }\n        else if (isDemo === \"compasaudit2\") {\n          return -1\n        }\n        else {\n          return 1;\n        }\n      });\n    const [suFN2, setSuFN2] = useState(0);\n    const [suTN2, setSuTN2] = useState(0);\n    const [decisionMakerUtility, setDecisionMakerUtility] = useState([]);\n    const [paretoOptimalPointsX, setParetoOptimalPointsX] = useState([]);\n    const [paretoOptimalPointsY, setParetoOptimalPointsY] = useState([]);\n    const [correspondingFairnessMetric, setCorrespondingFairnessMetric] = useState(undefined);\n    const [correspondingWeightedFairnessMetric, setCorrespondingWeightedFairnessMetric] = useState(undefined);\n    const [colorOfD, setColorOfD] = useState('#fff')\n    const [pattern, setPattern] = useState('egalitarianism');\n    const [xAxisLabel, setXAxisLabel] = useState(null);\n    const [sufficientarianismThreshold, setSufficientarianismThreshold] = useState(0.5);\n    const [prioritarianismWeight, setPrioritarianismWeight] = useState(2);\n\n    function getRandomColor() {\n        // get a random color while avoiding yellow and colors that are too light\n        let hue = ~~(360 * Math.random())\n        while (hue >= 51 && hue <= 60) {\n            hue = ~~(360 * Math.random())\n        }\n        return `hsla(${hue},80%,50%,0.8)`\n    }\n\n    function deselectAllPoints() {\n        setSelectedPoints([])\n        setIdOfSelectedPoints({})\n        setIncrementalSelectionId(1)\n        setColors(Array(numThresholds * numThresholds).fill('#ffffff'))\n        setColorOfD('#fff')\n        console.log('deselected all points')\n    }\n\n    function patternMapper(pattern) {\n        let combination = null\n        if (pattern === 'egalitarianism') {\n            combination = absoluteDifference\n        }\n        if (pattern === 'maximin') {\n            combination = Math.min\n        } \n        if (pattern === 'prioritarianism') {\n            combination = prioritarianSum\n        }\n        if (pattern === 'sufficientarianism') {\n            combination = aboveThreshold\n        }\n        return combination\n    }\n\n    function countConfusion(decisions_array, decisions_value, y_array, y_value) {\n        let count = 0;\n        for(let i = 0; i < decisions_array.length; i++){\n            if(decisions_array[i] === decisions_value && y_array[i] === y_value)\n                count++;\n        }\n        return count\n    }\n\n    function utility(scores, threshold, y, parameter_calculation) {\n        let decisions = []\n        for(let i = 0; i < scores.length; i++){\n            if(scores[i] >= threshold)\n                decisions.push(1)\n            else\n                decisions.push(0)\n        }\n        return calculateUtilityFromDecisions(decisions, y, parameter_calculation);\n    }\n\n    function calculateUtilityFromDecisions(decisions, y, parameter_calculation) {\n        let tp = countConfusion(decisions, 1, y, 1);\n        let fp = countConfusion(decisions, 1, y, 0);\n        let fn = countConfusion(decisions, 0, y, 1);\n        let tn = countConfusion(decisions, 0, y, 0);\n    \n        let [w_tp, w_fp, w_fn, w_tn] = parameter_calculation;\n        let value = w_tp * tp + w_fp * fp + w_fn * fn + w_tn * tn;\n    \n        return value;\n    }\n\n    function averageUtility(scores, threshold, y, parameter_calculation) {\n        let value = utility(scores, threshold, y, parameter_calculation)\n        value = value / scores.length\n        return value\n    }\n\n    function threshold(scores, threshold, y, parameter_calculation) {\n        return threshold\n    }\n\n    function sum(value_A, value_B) {\n        let sum = value_A + value_B\n        return sum\n    }\n\n    function absoluteDifference(value_A, value_B) {\n        let diff = Math.abs(value_A - value_B)\n        return diff\n    }\n\n    function prioritarianSum(value_A, value_B) {\n        if (value_A <= value_B) {\n            return value_A * prioritarianismWeight + value_B\n        }\n        return value_A + value_B * prioritarianismWeight\n    }\n\n    function aboveThreshold(value_A, value_B) {\n        let groups_above_threshold = 0\n        if (value_A >= sufficientarianismThreshold)\n            groups_above_threshold++\n        if (value_B >= sufficientarianismThreshold)\n            groups_above_threshold++\n        return groups_above_threshold\n    }\n\n    function tuple(value_A, value_B) {\n        return [value_A, value_B]\n    }\n\n    function calculateValues(numThresholds, scores, y, calculate_group_value, parameter_calculation) {\n        let values = []\n        for (let r = 0; r < numThresholds; r++) {\n            let t = toThreshold(r, numThresholds)\n            let value = calculate_group_value(scores, t, y, parameter_calculation)\n            values.push(value)\n        }\n        return values\n    }\n\n    function combineThresholds(numThresholds, scores_A, scores_B, y_A, y_B, calculate_group_value, combine_group_values, parameter_calculation_1, parameter_calculation_2) {\n        let values_A = calculateValues(numThresholds, scores_A, y_A, calculate_group_value, parameter_calculation_1)\n        let values_B = calculateValues(numThresholds, scores_B, y_B, calculate_group_value, parameter_calculation_2)\n        let values = []\n        for (let r_A = 0; r_A < numThresholds; r_A++) {\n            for (let r_B = 0; r_B < numThresholds; r_B++) {\n                let value = combine_group_values(values_A[r_A], values_B[r_B])\n                values.push(value)\n            }\n        }\n        return values\n    }\n\n    function toThreshold(r, numThresholds) {\n        let threshold = (1/(numThresholds-1)) * r\n        return Math.round((threshold + Number.EPSILON) * 100) / 100\n    }\n\n    function updateThresholdCalculations() {\n        if (filteredData['scores'][0].length === 0 && filteredData['scores'][1].length === 0) {\n            setThresholdTuples([])\n            setDecisionMakerUtility([])\n            setFairnessScores([])\n            setSubjectsUtility([])\n            return 0\n        } else {\n            setThresholdTuples(combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], threshold, tuple))\n            setDecisionMakerUtility(combineThresholds(numThresholds, unfilteredData['scores'][0], unfilteredData['scores'][1], unfilteredData['y'][0], unfilteredData['y'][1], utility, sum, [dmuTP, dmuFP, dmuFN, dmuTN], [dmuTP, dmuFP, dmuFN, dmuTN]))\n            let combineFunction = patternMapper(pattern)\n            let fairnessScores = combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], averageUtility, combineFunction, [suTP1, suFP1, suFN1, suTN1], [suTP2, suFP2, suFN2, suTN2])\n            // TODO: Add evaluation of D here\n            let maxUnfairness = undefined\n            if (pattern === \"egalitarianism\") {\n                maxUnfairness = Math.max(...fairnessScores)\n                fairnessScores = fairnessScores.map(function(s, i) {\n                    return maxUnfairness - s;\n                });\n            }\n            setFairnessScores(fairnessScores)\n            setSubjectsUtility(combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], averageUtility, tuple, [suTP1, suFP1, suFN1, suTN1], [suTP2, suFP2, suFN2, suTN2]))\n            return maxUnfairness\n        }\n    }\n\n    function updateEvaluationOfD(maxUnfairness) {\n        if (filteredData['d'][0].length !== 0 || filteredData['d'][1].length !== 0) {\n            let decisionMakerUtility_A = calculateUtilityFromDecisions(unfilteredData['d'][0], unfilteredData['y'][0], [dmuTP, dmuFP, dmuFN, dmuTN])\n            let decisionMakerUtility_B = calculateUtilityFromDecisions(unfilteredData['d'][1], unfilteredData['y'][1], [dmuTP, dmuFP, dmuFN, dmuTN])\n            let decisionMakerUtility = sum(decisionMakerUtility_A, decisionMakerUtility_B)\n            let fairnessValue_A = calculateUtilityFromDecisions(filteredData['d'][0], filteredData['y'][0], [suTP1, suFP1, suFN1, suTN1]) / filteredData['d'][0].length\n            let fairnessValue_B = calculateUtilityFromDecisions(filteredData['d'][1], filteredData['y'][1], [suTP2, suFP2, suFN2, suTN2]) / filteredData['d'][1].length\n            let combineFunction = patternMapper(pattern)\n            let fairnessScore = combineFunction(fairnessValue_A, fairnessValue_B)\n            if (pattern === \"egalitarianism\") {\n                fairnessScore = maxUnfairness - fairnessScore\n            }\n            setEvaluationOfD([fairnessScore, decisionMakerUtility, [fairnessValue_A, fairnessValue_B]])\n        } else {\n            setEvaluationOfD([])\n        }\n    }\n   \n    function updateParetoFront() {\n        let points = fairnessScores.map(function(f, i) {\n            return [f, decisionMakerUtility[i]];\n        });\n        let paretoOptimalPoints = pf.getParetoFrontier(points)\n        let paretoX = paretoOptimalPoints.map(function(p, i) {\n            return p[0];\n        })\n        setParetoOptimalPointsX(paretoX)\n        let paretoY = paretoOptimalPoints.map(function(p, i) {\n            return p[1];\n        })\n        setParetoOptimalPointsY(paretoY)\n    }\n\n    function updateXAxisLabel() {\n        let xaxislabel = 'Fairness score<br>'\n        if (pattern === 'egalitarianism') {\n            xaxislabel += `Maximum difference in average utility - absolute difference in average utility of ${group1} and ${group2} (in ${subjectsCurrency.replace('*', '')})`\n        }\n        if (pattern === 'maximin') {\n            xaxislabel += `Minimum average utility of ${group1} and ${group2} (in ${subjectsCurrency.replace('*', '')})`\n        }\n        if (pattern === 'sufficientarianism') {\n            xaxislabel += `Number of groups with average utility above threshold (min: 0 groups, max: 2 groups)`\n        }\n        if (pattern === 'prioritarianism') {\n            xaxislabel += `Weighted sum of average utilities of ${group1} and ${group2} (in ${subjectsCurrency.replace('*', '')})`\n        }\n        setXAxisLabel(xaxislabel)\n    }\n\n    function updateCorrespondsToExistingMetric() {\n        if (pattern === 'egalitarianism') {\n            if (justifier === 'no_justifier' && suTP1 === suFP1 && Math.abs(suFP1 - suFN1) === 1 && suFN1 === suTN1 && suTP1 === suTP2 && suTN1 === suTN2 && suFP1 === suFP2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('statistical parity')\n                return\n            }\n            if (justifier === 'y_0' && Math.abs(suFP1 - suTN1) === 1 && suFP1 === suFP2 && suTN1 === suTN2) {\n                setCorrespondingFairnessMetric('false positive rate parity')\n                return\n            }\n            if (justifier === 'y_1' && Math.abs(suTP1 - suFN1) === 1 && suTP1 === suTP2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('true positive rate parity AKA equality of opportunity')\n                return\n            }\n            if (justifier === 'd_0' && Math.abs(suFN1 - suTN1) === 1 && suTN1 === suTN2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('negative predictive value parity')\n                return\n            }\n            if (justifier === 'd_1' && Math.abs(suTP1 - suFP1) === 1 && suTP1 === suTP2 && suFP1 === suFP2) {\n                setCorrespondingFairnessMetric('positive predictive value parity AKA predictive parity')\n                return\n            }\n            // config is not equivalent to any existing metric\n            // check if it is a weighted version of an existing metric\n            if (justifier === 'no_justifier' && suTP1 === suFP1 && suFP1 !== suFN1 && suFN1 === suTN1 && suTP1 === suTP2 && suTN1 === suTN2 && suFP1 === suFP2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('statistical parity multiplied by ' + Math.abs(suFP1 - suFN1));\n                return\n            }\n            if (justifier === 'y_0' && suFP1 !== suTN1 && suFP1 === suFP2 && suTN1 === suTN2) {\n                setCorrespondingWeightedFairnessMetric('false positive rate parity multiplied by ' + Math.abs(suFP1 - suTN1));\n                return\n            }\n            if (justifier === 'y_1' && suTP1 !== suFN1 && suTP1 === suTP2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('true positive rate parity AKA equality of opportunity multiplied by ' + Math.abs(suTP1 - suFN1));\n                return\n            }\n            if (justifier === 'd_0' && suFN1 !== suTN1 && suTN1 === suTN2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('negative predictive value parity multiplied by ' + Math.abs(suFN1 - suTN1));\n                return\n            }\n            if (justifier === 'd_1' && suTP1 !== suFP1 && suTP1 === suTP2 && suFP1 === suFP2) {\n                setCorrespondingWeightedFairnessMetric('positive predictive value parity AKA predictive parity multiplied by ' + Math.abs(suTP1 - suFP1));\n                return\n            }\n        }\n        setCorrespondingFairnessMetric(undefined)\n        setCorrespondingWeightedFairnessMetric(undefined)\n    }\n\n    function getSnackbarMessage() {\n        return (\n            <>\n            {correspondingFairnessMetric !== undefined ?\n                <div>The fairness metric you selected corresponds to <b><i>{correspondingFairnessMetric}</i></b>.</div>\n                :\n                <>\n                {correspondingWeightedFairnessMetric !== undefined &&\n                    <div>The fairness metric you selected corresponds to a weighted version of <b><i>{correspondingWeightedFairnessMetric}</i></b>.</div>\n                }\n                </>\n            }\n            </>\n        )\n\n    }\n\n    useEffect(() => {\n        console.log('selection changed to ' + datasetSelection + ' with justifier: ' + justifier)\n        deselectAllPoints()\n        setNumThresholds(11)\n        const maxUnfairness = updateThresholdCalculations()\n        updateEvaluationOfD(maxUnfairness)\n    }, [datasetSelection, datasetSelectionCounter]);\n\n    useEffect(() => {\n        setGroup1(global.config.datasets[datasetSelection]['group1'])\n        setGroup2(global.config.datasets[datasetSelection]['group2'])\n        setd0description(global.config.datasets[datasetSelection]['d0']);\n        setd1description(global.config.datasets[datasetSelection]['d1']);\n        sety0description(global.config.datasets[datasetSelection]['y0']);\n        sety1description(global.config.datasets[datasetSelection]['y1']);\n    }, [datasetSelection]);\n    \n    useEffect(() => {\n        const maxUnfairness = updateThresholdCalculations()\n        updateEvaluationOfD(maxUnfairness)\n    }, [suTP1, suFP1, suFN1, suTN1, suTP2, suFP2, suFN2, suTN2, dmuTP, dmuFP, dmuFN, dmuTN, pattern, sufficientarianismThreshold, prioritarianismWeight, numThresholds]);\n\n    useEffect(() => {\n        updateParetoFront()\n    }, [fairnessScores, decisionMakerUtility]);\n\n    useEffect(() => {\n        updateXAxisLabel()\n    }, [pattern, group1, group2]);\n\n    useEffect(() => {\n        updateCorrespondsToExistingMetric()\n    }, [suTP1, suFP1, suFN1, suTN1, suTP2, suFP2, suFN2, suTN2, pattern, justifier])\n\n    useEffect(() => {\n        deselectAllPoints()\n    }, [numThresholds]);\n\n    useEffect(() => {\n        updateParetoFront()\n    }, []);\n\n    useEffect(() => {\n        if (correspondingFairnessMetric !== undefined | correspondingWeightedFairnessMetric !== undefined) {\n            handleSnackbar()\n        }\n        else {\n            handleClose()\n        }\n    }, [correspondingFairnessMetric, correspondingWeightedFairnessMetric]);\n\n    return (\n        <div className='ParetoPlot'>\n            <div className='ParetoConfiguration'>\n                <h1>Terminology</h1>\n                <b>Y</b>: The \"ground truth\"; not known at prediction time.\n                <br/><br/>\n                <b>Label the two ground truth cases:</b>\n                <br/>\n                <label htmlFor=\"y1description\">Y=1</label>\n                <input type=\"text\" id=\"y1description\" value={y1description} onChange={(e) => sety1description(e.target.value)} style={{width: \"500px\"}}/>\n                <br/>\n                <label htmlFor=\"y0description\">Y=0</label>\n                <input type=\"text\" id=\"y0description\" value={y0description} onChange={(e) => sety0description(e.target.value)} style={{width: \"500px\"}}/>\n                <br/><br/>\n                <b>D</b>: The decision in question; relies on Y to make this decision.\n                <br/><br/>\n                <b>Label the two possible decisions:</b>\n                <br/>\n                <label htmlFor=\"d1description\">D=1</label>\n                <input type=\"text\" id=\"d1description\" value={d1description} onChange={(e) => setd1description(e.target.value)} style={{width: \"500px\"}}/>\n                <br/>\n                <label htmlFor=\"d0description\">D=0</label>\n                <input type=\"text\" id=\"d0description\" value={d0description} onChange={(e) => setd0description(e.target.value)} style={{width: \"500px\"}}/>\n                <br/><br/>\n                \n                <b>Decision maker</b>: The people or organization designing the algorithm, deciding on its design and thereby ultimately taking the decisions in question.\n                <br/>\n                <b>Decision subjects</b>: The people subjected to the decisions of the algorithm. They may or may not be aware that this algorithm is being deployed and used to make decisions about them.\n                \n\n                <h1>Configuration</h1>\n\n                <h2>Decision maker's utility</h2>\n                <b>How much utility does the decision maker derive from the decisions?</b>\n\n                <h3>Currency of the decision maker</h3>\n                <span>In what unit do you want to measure the utility of the decision maker?</span>\n                <input type=\"text\" value={decisionMakerCurrency} onChange={(e) => setDecisionMakerCurrency(e.target.value)}/>\n\n                <h3>Quantification of the decision maker's utility</h3>\n\n                <UtilityQuantifier value={dmuTP} setSliderValue={setDmuTP} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y1description + \" that is getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={dmuFP} setSliderValue={setDmuFP} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y0description + \" that is getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={dmuFN} setSliderValue={setDmuFN} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y1description + \" that is getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={dmuTN} setSliderValue={setDmuTN} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y0description + \" that is getting \" + d0description + \"?\"}/>\n\n\n                <h2>Fairness score</h2>\n                <b>How should the utility of the decision subjects be distributed?</b>\n                \n                <h3>Socio-demographic groups</h3>\n                <div>Which socio-demographic groups do you want to compare?</div>\n\n                <label htmlFor=\"group1\">Group 1</label>\n                <input type=\"text\" id=\"group1\" value={group1} onChange={(e) => setGroup1(e.target.value)}/>\n                <br/>\n                <label htmlFor=\"group2\">Group 2</label>\n                <input type=\"text\" id=\"group2\" value={group2} onChange={(e) => setGroup2(e.target.value)}/>\n\n                <h3>Justifier</h3>\n                <div>Do the socio-demographic groups have the same moral claims to utility or is it only a subgroup of them? If it is a subgroup of them, define this subgroup here:</div>\n\n                <div onChange={(e) => setJustifier(e.target.value)}>\n                    <input type=\"radio\" value=\"no_justifier\" name=\"justifier\" defaultChecked={justifier === 'no_justifier'} /> None\n                    <input type=\"radio\" value=\"y_0\" name=\"justifier\" defaultChecked={justifier === 'y_0'} /> Y=0\n                    <input type=\"radio\" value=\"y_1\" name=\"justifier\" defaultChecked={justifier === 'y_1'} /> Y=1\n                    <input type=\"radio\" value=\"d_0\" name=\"justifier\" defaultChecked={justifier === 'd_0'} /> D=0\n                    <input type=\"radio\" value=\"d_1\" name=\"justifier\" defaultChecked={justifier === 'd_1'} /> D=1\n                </div>\n\n                <h3>Decision subjects' utility</h3>\n                <div>How much utility do the decision subjects derive from the decisions?</div>\n\n                <h4>Currency of decision subjects</h4>\n                <span>In what unit do you want to measure the utility of the decision subject?</span>\n                <input type=\"text\" value={subjectsCurrency} onChange={(e) => setSubjectsCurrency(e.target.value)}/>\n\n                <h4>Quantification of the decision subjects' utility</h4>\n\n                {justifier !== 'no_justifier' &&\n                    <div>Having a justifier means that the utility of some individuals is not considered when evaluating the fairness of the model. Sliders are disabled if their value is not considered for the evaluation.</div>\n                }\n\n                <h5>For the group: {group1}</h5>\n\n                <UtilityQuantifier value={suTP1} setSliderValue={setSuTP1} disabled={justifier===\"y_0\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFP1} setSliderValue={setSuFP1} disabled={justifier===\"y_1\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFN1} setSliderValue={setSuFN1} disabled={justifier===\"y_0\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={suTN1} setSliderValue={setSuTN1} disabled={justifier===\"y_1\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d0description + \"?\"}/>\n\n                <h5>For the group: {group2}</h5>\n\n                <UtilityQuantifier value={suTP2} setSliderValue={setSuTP2} disabled={justifier===\"y_0\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFP2} setSliderValue={setSuFP2} disabled={justifier===\"y_1\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFN2} setSliderValue={setSuFN2} disabled={justifier===\"y_0\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={suTN2} setSliderValue={setSuTN2} disabled={justifier===\"y_1\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d0description + \"?\"}/>\n                \n                <h3>Pattern of Justice</h3>\n                <div>How should the utility be distributed between the socio-demographic groups?</div><br/>\n                <div><b>Egalitarianism</b>: Fairness is if individuals in both groups are expected to derive the same utility from the decision rule. Equality in itself is valued.</div>\n                <div>→ Measured as: <b>How close are the average utilities to being equal?</b></div>\n                <div><b>Maximin</b>: Fairness is if the average utility of the worst-off group is maximized by the decision rule. Inequalities are okay if they benefit the worst-off group.</div>\n                <div>→ Measured as: <b>What’s the lowest average utility?</b></div>\n                <div><b>Prioritarianism</b>: Fairness is if the aggregated utility of the groups is maximized by the decision rule, with the utility of the worst-off group being weighted higher than the other groups' utilities.</div>\n                <div>→ Measured as: <b>What’s the aggregated utility with the worst-off group having a higher weight?</b></div>\n                <div><b>Sufficientarianism</b>: Fairness is if all groups' have an average utility that is above the defined threshold. Inequalities are okay if every group is above the defined threshold.</div>\n                <div>→ Measured as: <b>How many groups are above the defined threshold?</b></div>\n                <br/>\n\n                <label htmlFor=\"pattern\">Choose a pattern:</label>\n                <select name=\"pattern\" id=\"pattern\" onChange={(e) => setPattern(e.target.value)}>\n                <option value=\"egalitarianism\">egalitarianism</option>\n                <option value=\"maximin\">maximin</option>\n                <option value=\"prioritarianism\">prioritarianism</option>\n                <option value=\"sufficientarianism\">sufficientarianism</option>\n                </select>\n\n                {pattern === 'sufficientarianism' &&\n                    <div>\n                        <label htmlFor=\"sufficientarianismThreshold\">Minimum average group utility</label>\n                        <input type=\"number\" id=\"sufficientarianismThreshold\" value={sufficientarianismThreshold} onChange={(e) => setSufficientarianismThreshold(e.target.value)}/>\n                    </div>\n                }\n\n                {pattern === 'prioritarianism' &&\n                    <div>\n                        <label htmlFor=\"prioritarianismWeight\">Weight for worst-off group</label>\n                        <input type=\"number\" id=\"prioritarianismWeight\" value={prioritarianismWeight} onChange={(e) => setPrioritarianismWeight(e.target.value)}/>\n                    </div>\n                }\n            </div>\n            <div className=\"ParetoPlots\">\n                <h1>Audit</h1>\n                <h2>Pareto plot</h2>\n                With the decision maker utility and a fairness metric specified, we can take a simple approach to show the trade-offs between these metrics: We go through different decision rules and calculate the metrics associated with each of them, i.e., the decision maker's utility and the fairness score. For each decision rule, we then plot the associated decision maker’s utility and fairness score in a 2D plot. We use group-specific thresholds as decision rules.\n                <br/><br/>\n                <b>Decision maker's utility</b>: Higher is better (total utility for the {unfilteredData['y'][0].length + unfilteredData['y'][1].length} individuals in the dataset)\n                <br/>\n                <b>Fairness score</b>: Higher is better\n\n                <div>\n\n                    <Snackbar\n                        anchorOrigin={{\n                        horizontal: \"left\",\n                        vertical: \"bottom\",\n                        }}\n                        open={open}\n                        autoHideDuration={10000}\n                        message={getSnackbarMessage()}\n                        onClose={handleClose}\n                        action={\n                        <React.Fragment>\n                            <IconButton\n                            size=\"small\"\n                            aria-label=\"close\"\n                            color=\"inherit\"\n                            onClick={handleClose}\n                            >\n                            <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                        }\n                    />\n                </div>\n                \n                <br/><br/>\n                {filteredData['scores'][0].length !== 0 && filteredData['scores'][1].length !== 0 &&\n                    <ThresholdInput numThresholds={numThresholds} setNumThresholds={setNumThresholds}/>\n                }\n                <br/><br/>\n                <div>\n                    <button onClick={deselectAllPoints}>\n                        Deselect all points\n                    </button>\n                </div>\n\n\n                <Plot\n                    data={[\n                    {\n                        x: paretoOptimalPointsX,\n                        y: paretoOptimalPointsY,\n                        mode: 'lines',\n                        name: 'Pareto front',\n                        marker: {color: '#a61b62'}\n                    },\n                    {\n                        x: fairnessScores,\n                        y: decisionMakerUtility,\n                        mode: 'markers',\n                        visible: filteredData['scores'][0].length !== 0 && filteredData['scores'][1].length !== 0,\n                        marker: {\n                            color: colors,\n                            size: 7,\n                            line: {\n                                color: '#000000',\n                                width: 1\n                            }\n                        },\n                        type: 'scatter',\n                        hovertemplate: '<b>Decision maker\\'s utility</b>: %{y:.2f}' +\n                        '<br><b>Fairness score</b>: %{x:.4f}<br>' +\n                        '<b>Thresholds</b>: %{text}',\n                        text: thresholdTuples,\n                        name: 'Decision rule'\n                    },\n                    {\n                        x: [evaluationOfD[0]],\n                        y: [evaluationOfD[1]],\n                        mode: 'markers',\n                        visible: evaluationOfD.length !== 0,\n                        marker: {\n                            color: colorOfD,\n                            size: 15,\n                            symbol: 'diamond',\n                            line: {\n                                color: '#000000',\n                                width: 1\n                            }\n                        },\n                        type: 'scatter',\n                        hovertemplate: '<b>Decisions from dataset</b>' +\n                        '<br><b>Decision maker\\'s utility</b>: %{y:.2f}' +\n                        '<br><b>Fairness score</b>: %{x:.4f}<br>',\n                        name: 'Decisions from dataset'\n                    },\n                    ]}\n\n                    layout={ {\n                        width: 1000,\n                        height: 800,\n                        xaxis: { title: xAxisLabel},\n                        yaxis: { title: `Decision maker's utility (in ${decisionMakerCurrency.replace('*', '')})` },\n                        hovermode:'closest',\n                    } }\n\n                    onClick={(data) => {\n                        var newColors = [...colors];\n                        // Orange point (from D) gets index -1, every other points gets their regular index\n                        let selectedPoint = -1\n                        if (data.points[0].data.x.length > 1) {\n                            selectedPoint = data.points[0].pointIndex\n                        }\n                        var indexOfSelectedPoint = selectedPoints.indexOf(selectedPoint)\n                        if (indexOfSelectedPoint > -1) {\n                            // deselect point and remove from list\n                            selectedPoints.splice(indexOfSelectedPoint, 1)\n                            delete idOfSelectedPoints[selectedPoint]\n                            if (selectedPoint === -1) {\n                                setColorOfD('#fff')\n                            } else {\n                                newColors[selectedPoint] = '#ffffff'\n                            }\n                        } else {\n                            // select point and add to list\n                            selectedPoints.push(selectedPoint)\n\n                            if (selectedPoint === -1) {\n                                idOfSelectedPoints[selectedPoint] = {\n                                    id: incrementalSelectionId,\n                                    decisionMakerUtility: evaluationOfD[1],\n                                    fairnessScore: evaluationOfD[0]\n                                }\n                                setColorOfD('orange')\n                            } else {\n                                idOfSelectedPoints[selectedPoint] = {\n                                    id: incrementalSelectionId,\n                                    thresholdGroup0: thresholdTuples[selectedPoint][0],\n                                    thresholdGroup1: thresholdTuples[selectedPoint][1],\n                                    decisionMakerUtility: decisionMakerUtility[selectedPoint],\n                                    fairnessScore: fairnessScores[selectedPoint]\n                                }\n                                newColors[selectedPoint] = getRandomColor()\n                            }\n                            \n                            setIncrementalSelectionId(incrementalSelectionId + 1)\n                        }\n                        setColors(newColors)\n                        setSelectedPoints([...selectedPoints]);\n                        setIdOfSelectedPoints(idOfSelectedPoints);\n                      }}\n                />\n            </div>\n        </div>\n      );\n}\n\nfunction UtilityQuantifier({value, setSliderValue, label, unit, disabled}) {\n    var numberRegex = /[-+]?[0-9]+\\.?[0-9]+/\n    var unitRegex = /[^\\d+]+$/;\n    var multiplierRegex = /^\\*\\s*\\d+/;\n    const [currentSliderValue, setCurrentSliderValue] = useState(Number(value))\n    return (\n        <div>\n            <label>{label}</label>\n            <br/>\n            <input className=\"Slider\" disabled={disabled} type=\"range\" min=\"-10\" max=\"10\" step=\"0.1\" value={currentSliderValue} onChange={(e) => setCurrentSliderValue(Number(e.target.value))} onMouseUp={(e) => setSliderValue(Number(e.target.value))} list=\"ticks\" />\n            <datalist id=\"ticks\">\n                <option>-10</option>\n                <option>-9</option>\n                <option>-8</option>\n                <option>-7</option>\n                <option>-6</option>\n                <option>-5</option>\n                <option>-4</option>\n                <option>-3</option>\n                <option>-2</option>\n                <option>-1</option>\n                <option>0</option>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n                <option>7</option>\n                <option>8</option>\n                <option>9</option>\n                <option>10</option>\n            </datalist>\n            <span className=\"sliderSpan\">{currentSliderValue} {unit}</span>\n            {unit.match(multiplierRegex) !== null && \n            <span> = {Math.round(currentSliderValue * unit.match(numberRegex) * 100) / 100}{unit.match(unitRegex)}</span>}\n        </div>\n      );\n}\n\nfunction ThresholdInput({numThresholds, setNumThresholds}) {\n    const [currentNumThresholds, setCurrentNumThresholds] = useState(numThresholds)\n    return (\n        <>\n        <label>Number of thresholds: How many thresholds do you want to test for each group? (min: 2, max: 101)</label>\n        <input type=\"text\" min=\"2\" max=\"101\" value={currentNumThresholds} onChange={(e) => setCurrentNumThresholds(e.target.value)} onBlur={(e) => {\n            if (e.target.value < 2) {\n                setCurrentNumThresholds(2)\n            }\n            if (e.target.value > 101) {\n                setCurrentNumThresholds(101)\n            }\n            setNumThresholds(currentNumThresholds)\n        }}/>\n        </>\n      );\n}\n\nexport default ParetoPlot;","module.exports = global.config = {\n    datasets: {\n        'COMPAS': {\n            'group1': 'Black',\n            'group2': 'white',\n            'd0': 'released (D=0)',\n            'd1': 'detained (D=1)',\n            'y0': 'an innocent individual (Y=0)',\n            'y1': 'a recidivist (Y=1)'\n            \n        },\n        'German': {\n            'group1': 'female',\n            'group2': 'male',\n            'd0': 'rejected (D=0)',\n            'd1': 'a loan (D=1)',\n            'y0': 'an individual who defaulted on the loan (Y=0)',\n            'y1': 'an individual who repaid the loan (Y=1)'\n            \n        },\n        'ACSEmploymentCA': {\n            'group1': 'Black',\n            'group2': 'white',\n            'd0': 'predicted to be unemployed (D=0)',\n            'd1': 'predicted to be employed (D=1)',\n            'y0': 'an unemployed individual (Y=0)',\n            'y1': 'an employed individual (Y=1)'\n        },\n        'Own': {\n            'group1': 'group 1',\n            'group2': 'group 2',\n            'd0': 'negative decision (D=0)',\n            'd1': 'positive decision (D=1)',\n            'y0': 'an individual of type Y=0',\n            'y1': 'an individual of type Y=1'\n        }\n    }\n};"],"sourceRoot":""}