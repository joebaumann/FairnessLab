{"version":3,"sources":["store/decisionMaker.js","store/paretoPlot.js","store/store.js","Components/Navbar/logo.ico","Components/Hamburger/index.js","Components/Navbar/index.js","Components/Header/index.js","Components/Home/Home.js","Components/DatasetSelector/index.js","Components/ParetoPlot/index.js","Components/SelectedPointsTable/index.js","Components/ScoreDistribution/index.js","Components/SubjectsUtility/index.js","Components/Audit/index.js","Components/OtherPages/COMPAS.js","Components/OtherPages/pareto_explanation.png","Components/OtherPages/FAQ.js","Components/OtherPages/Contact.js","Components/OtherPages/ErrorPages.js","App.js","reportWebVitals.js","index.js","store/dataset.js","store/terminology.js","store/fairnessScore.js","config.js","Components/Terminology/index.js","Components/Configuration/index.js"],"names":["decisionMakerSlice","createSlice","name","initialState","currency","dmuTP","dmuFP","dmuFN","dmuTN","reducers","changeDecisionMakerCurrency","state","action","payload","changeDmuTP","changeDmuFP","changeDmuFN","changeDmuTN","actions","reducer","getDecisionMakerCurrency","decisionMaker","getDmuTP","getDmuFP","getDmuFN","getDmuTN","paretoPlotSlice","numThresholds","thresholdTuples","subjectsUtility","fairnessScores","decisionMakerUtility","evaluationOfD","selectedPoints","idOfSelectedPoints","incrementalSelectionId","colorOfD","changeNumThresholds","changeThresholdTuples","changeSubjectsUtility","changeFairnessScores","changeDecisionMakerUtility","changeEvaluationOfD","changeSelectedPoints","deleteSelectedPoint","splice","index","selectedPoint","addSelectedPoint","push","deselectAllPoints","selectEvaluationOfD","getNumThresholds","paretoPlot","getThresholdTuples","getSubjectsUtility","getFairnessScores","getDecisionMakerUtility","getEvaluationOfD","getSelectedPoints","getIdOfSelectedPoints","getColorOfD","store","configureStore","dataset","datasetReducer","terminology","terminologyReducer","decisionMakerReducer","fairnessScore","fairnessScoreReducer","paretoPlotReducer","Hamburger","isOpen","className","Navbar","useState","hamburgerOpen","setHamburgerOpen","closeHamburger","onClick","to","alt","src","logo","exact","activeClassName","Header","title","Home","href","target","rel","DatasetSelector","datasets","compas_file","german_file","ACSEmploymentCA_file","datasetSelection","useSelector","getDatasetSelection","justifier","getJustifier","dispatch","useDispatch","setDatasetSelection","selection","changeDatasetSelection","setFilteredData","data","changeFilteredData","setUnfilteredData","changeUnfilteredData","uploadedData","setUploadedData","fileError","setFileError","handleFileJson","e","text","result","jsonFile","JSON","parse","handleFileCSV","csv","newLineCharacter","indexOf","lines","split","headers","i","length","obj","currentline","j","value","parseInt","parseFloat","csvToJSON","selectFile","a","files","preventDefault","reader","FileReader","type","onload","readAsText","processData","file","processedData","filteredData","unfilteredData","forEach","row","attribute","hasOwnProperty","applyJustifierToRow","splitFileBySensitiveAttributeAndJustifier","isValid","checkDataValidity","error","useEffect","onChange","checked","ThresholdInput","setNumThresholds","currentNumThresholds","setCurrentNumThresholds","min","max","onBlur","ParetoPlot","colors","setColors","setThresholdTuples","setSubjectsUtility","setFairnessScores","setDecisionMakerUtility","decisionMakerCurrency","suTP1","getSuTP1","suFP1","getSuFP1","suFN1","getSuFN1","suTN1","getSuTN1","suTP2","getSuTP2","suFP2","getSuFP2","suFN2","getSuFN2","suTN2","getSuTN2","group1","getGroup1","group2","getGroup2","pattern","getPattern","sufficientarianismThreshold","getSufficientarianismThreshold","prioritarianismWeight","getPrioritarianismWeight","getFilteredData","getUnfilteredData","fairnessScoreDescription","getFairnessScoreDescription","paretoOptimalPointsX","setParetoOptimalPointsX","paretoOptimalPointsY","setParetoOptimalPointsY","deselectAllPointsAndD","Array","fill","patternMapper","combination","absoluteDifference","Math","prioritarianSum","aboveThreshold","countConfusion","decisions_array","decisions_value","y_array","y_value","count","utility","scores","threshold","y","parameter_calculation","decisions","calculateUtilityFromDecisions","tp","fp","fn","tn","averageUtility","sum","value_A","value_B","abs","groups_above_threshold","tuple","calculateValues","calculate_group_value","values","r","toThreshold","combineThresholds","scores_A","scores_B","y_A","y_B","combine_group_values","parameter_calculation_1","parameter_calculation_2","values_A","values_B","r_A","r_B","round","Number","EPSILON","updateThresholdCalculations","combineFunction","map","s","updateEvaluationOfD","fairnessValue_A","fairnessValue_B","updateParetoFront","points","f","paretoOptimalPoints","pf","getParetoFrontier","paretoX","p","paretoY","x","mode","marker","color","visible","size","line","width","hovertemplate","symbol","layout","height","xaxis","yaxis","replace","hovermode","responsive","newColors","pointIndex","indexOfSelectedPoint","hue","random","getRandomColor","SelectedPointsTable","id","thresholdGroup0","undefined","thresholdGroup1","toFixed","ScoreDistribution","indices_of_Y0_for_group1","indices_of_Y1_for_group1","group1_Y1","group1_Y0","dataGroup1","indices_of_Y0_for_group2","indices_of_Y1_for_group2","group2_Y1","group2_Y0","dataGroup2","threshold_lines1","threshold_lines2","linelength","threshold1","xref","y0","x0","y1","x1","dash","threshold2","layoutGroup1","margin","l","b","t","pad","barmode","shapes","autorange","range","showlegend","legend","layoutGroup2","SubjectsUtility","tracesUtilities","tracesFairnessScores","traceUtilities","traceFairnessScores","automargin","Audit","props","Terminology","Configuration","COMPAS","compasaudit","changeSuTP1","changeSuFP1","changeSuFN1","changeSuTN1","changeSuTP2","changeSuFP2","changeSuFN2","changeSuTN2","changeJustifier","changePattern","Button","component","Link","FAQ","pareto_explanation","Contact","Error404","location","useLocation","pathname","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","datasetSlice","y0description","y1description","d0description","d1description","changeY0Description","changeY1Description","changeD0Description","changeD1Description","getY0Description","getY1Description","getD0Description","getD1Description","fairnessScoreSlice","changeSubjectsCurrency","changeGroup1","changeGroup2","changeSufficientarianismThreshold","changePrioritarianismWeight","updateFairnessScoreDescription","getSubjectsCurrency","module","exports","global","config","sety0description","sety1description","setd0description","setd1description","htmlFor","style","UtilityQuantifier","setSliderValue","label","unit","disabled","currentSliderValue","setCurrentSliderValue","step","onMouseUp","list","match","setDecisionMakerCurrency","setSubjectsCurrency","setGroup1","setGroup2","setJustifier","subjectsCurrency","correspondingFairnessMetric","setCorrespondingFairnessMetric","correspondingWeightedFairnessMetric","setCorrespondingWeightedFairnessMetric","React","open","setOpen","handleClose","event","reason","updateCorrespondsToExistingMetric","anchorOrigin","horizontal","vertical","autoHideDuration","message","onClose","Fragment","fontSize"],"mappings":"qGAAA,gWAEMA,EAAqBC,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVC,SAAU,MACVC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,GAEXC,SAAU,CACNC,4BADM,SACsBC,EAAOC,GAC/BD,EAAMP,SAAWQ,EAAOC,OAC3B,EACDC,YAJM,SAIMH,EAAOC,GACfD,EAAMN,MAAQO,EAAOC,OACxB,EACDE,YAPM,SAOMJ,EAAOC,GACfD,EAAML,MAAQM,EAAOC,OACxB,EACDG,YAVM,SAUML,EAAOC,GACfD,EAAMJ,MAAQK,EAAOC,OACxB,EACDI,YAbM,SAaMN,EAAOC,GACfD,EAAMH,MAAQI,EAAOC,OACxB,KAIDK,EAAqBlB,EAArBkB,QAASC,EAAYnB,EAAZmB,QAEFT,EAAoFQ,EAApFR,4BAA6BI,EAAuDI,EAAvDJ,YAAaC,EAA0CG,EAA1CH,YAAaC,EAA6BE,EAA7BF,YAAaC,EAAgBC,EAAhBD,YAEpEE,MAGR,IAAMC,EAA2B,SAAAT,GAAK,OAAIA,EAAMU,cAAcjB,QAAxB,EAChCkB,EAAW,SAAAX,GAAK,OAAIA,EAAMU,cAAchB,KAAxB,EAChBkB,EAAW,SAAAZ,GAAK,OAAIA,EAAMU,cAAcf,KAAxB,EAChBkB,EAAW,SAAAb,GAAK,OAAIA,EAAMU,cAAcd,KAAxB,EAChBkB,EAAW,SAAAd,GAAK,OAAIA,EAAMU,cAAcb,KAAxB,C,2ZCvCvBkB,EAAkBzB,YAAY,CAChCC,KAAM,aACNC,aAAc,CACVwB,cAAe,GACfC,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,qBAAsB,GACtBC,cAAe,GACfC,eAAgB,GAChBC,mBAAoB,CAAC,EACrBC,uBAAwB,EACxBC,SAAU,QAEd3B,SAAU,CACN4B,oBADM,SACc1B,EAAOC,GACvBD,EAAMgB,cAAgBf,EAAOC,OAChC,EACDyB,sBAJM,SAIgB3B,EAAOC,GACzBD,EAAMiB,gBAAkBhB,EAAOC,OAClC,EACD0B,sBAPM,SAOgB5B,EAAOC,GACzBD,EAAMkB,gBAAkBjB,EAAOC,OAClC,EACD2B,qBAVM,SAUe7B,EAAOC,GACxBD,EAAMmB,eAAiBlB,EAAOC,OACjC,EACD4B,2BAbM,SAaqB9B,EAAOC,GAC9BD,EAAMoB,qBAAuBnB,EAAOC,OACvC,EACD6B,oBAhBM,SAgBc/B,EAAOC,GACvBD,EAAMqB,cAAgBpB,EAAOC,OAChC,EACD8B,qBAnBM,SAmBehC,EAAOC,GACxBD,EAAMsB,eAAiBrB,EAAOC,OACjC,EACD+B,oBAtBM,SAsBcjC,EAAOC,GACvBD,EAAMsB,eAAeY,OAAOjC,EAAOC,QAAQiC,MAAO,UAC3CnC,EAAMuB,mBAAmBtB,EAAOC,QAAQkC,gBACT,IAAlCnC,EAAOC,QAAQkC,gBACfpC,EAAMyB,SAAW,OAExB,EACDY,iBA7BM,SA6BWrC,EAAOC,GACpBD,EAAMsB,eAAegB,KAAKrC,EAAOC,UAET,IAApBD,EAAOC,UACPF,EAAMyB,SAAW,UAErBzB,EAAMuB,mBAAmBtB,EAAOC,SAAWF,EAAMwB,uBACjDxB,EAAMwB,wBAA0B,CACnC,EACDe,kBAtCM,SAsCYvC,EAAOC,GACrBD,EAAMsB,eAAiB,GACvBtB,EAAMuB,mBAAqB,CAAC,EAC5BvB,EAAMwB,uBAAyB,EAC/BxB,EAAMyB,SAAW,MACpB,EACDe,oBA5CM,SA4CcxC,EAAOC,GACvBD,EAAMsB,eAAiB,EAAE,GACzBtB,EAAMuB,oBAAoB,GAAK,EAC/BvB,EAAMwB,uBAAyB,EAC/BxB,EAAMyB,SAAW,QACpB,KAIDlB,EAAqBQ,EAArBR,QAASC,EAAYO,EAAZP,QAEFkB,EAAkPnB,EAAlPmB,oBAAqBC,EAA6NpB,EAA7NoB,sBAAuBC,EAAsMrB,EAAtMqB,sBAAuBC,EAA+KtB,EAA/KsB,qBAAsBC,EAAyJvB,EAAzJuB,2BAA4BC,EAA6HxB,EAA7HwB,oBAA2CE,GAAkF1B,EAAxGyB,qBAAwGzB,EAAlF0B,qBAAqBI,EAA6D9B,EAA7D8B,iBAAkBE,EAA2ChC,EAA3CgC,kBAAmBC,EAAwBjC,EAAxBiC,oBAE1NhC,IAGFiC,EAAmB,SAAAzC,GAAK,OAAIA,EAAM0C,WAAW1B,aAArB,EACxB2B,EAAqB,SAAA3C,GAAK,OAAIA,EAAM0C,WAAWzB,eAArB,EAC1B2B,EAAqB,SAAA5C,GAAK,OAAIA,EAAM0C,WAAWxB,eAArB,EAC1B2B,EAAoB,SAAA7C,GAAK,OAAIA,EAAM0C,WAAWvB,cAArB,EACzB2B,EAA0B,SAAA9C,GAAK,OAAIA,EAAM0C,WAAWtB,oBAArB,EAC/B2B,EAAmB,SAAA/C,GAAK,OAAIA,EAAM0C,WAAWrB,aAArB,EACxB2B,EAAoB,SAAAhD,GAAK,OAAIA,EAAM0C,WAAWpB,cAArB,EACzB2B,EAAwB,SAAAjD,GAAK,OAAIA,EAAM0C,WAAWnB,kBAArB,EAC7B2B,EAAc,SAAAlD,GAAK,OAAIA,EAAM0C,WAAWjB,QAArB,EC7EnB0B,EAAQC,YAAe,CAChC5C,QAAS,CACL6C,QAASC,IACTC,YAAaC,IACb9C,cAAe+C,IACfC,cAAeC,IACfjB,WAAYkB,K,sCCbL,G,OAAA,IAA0B,kC,gBCa1BC,EAVG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACE,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAWD,EAAQ,sBAAwB,0BAChD,qBAAKC,UAAWD,EAAQ,sBAAwB,0BAChD,qBAAKC,UAAWD,EAAQ,sBAAwB,4BAGvD,EC6BcE,EAlCA,WACb,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAIMC,EAAiB,WACrBD,GAAiB,EAClB,EACD,OACE,sBAAKJ,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAmBM,QARd,WACtBF,GAAkBD,EACnB,EAMG,SACE,cAAC,EAAD,CAAWJ,OAAQI,MAErB,cAAC,IAAD,CAAMI,GAAG,IAAT,SACE,qBAAKC,IAAI,OAAOR,UAAU,cAAcS,IAAKC,MAE/C,qBAAIV,UAAWG,EAAgB,OAAS,SAAxC,UACE,6BACE,cAAC,IAAD,CAAqBH,UAAU,cAAcW,OAAK,EAACJ,GAAG,SAASK,gBAAgB,SAASN,QAASD,EAAjG,kBAAa,WAEf,6BACE,cAAC,IAAD,CAAsBL,UAAU,cAAcW,OAAK,EAACJ,GAAG,UAAUK,gBAAgB,SAASN,QAASD,EAAnG,8BAAa,YAEf,6BACE,cAAC,IAAD,CAAmBL,UAAU,cAAcW,OAAK,EAACJ,GAAG,OAAOK,gBAAgB,SAASN,QAASD,EAA7F,gBAAa,SAEf,6BACE,cAAC,IAAD,CAAuBL,UAAU,cAAcW,OAAK,EAACJ,GAAG,WAAWK,gBAAgB,SAASN,QAASD,EAArG,oBAAa,kBAKtB,EC3BcQ,G,OARA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACI,wBAAQd,UAAU,SAAlB,SACE,6BAAKc,KAGd,G,OCyCcC,MA9Cf,WACE,OACE,sBAAKf,UAAU,OAAf,UACE,cAAC,EAAD,CAAQc,MAAM,gBACd,sBAAKd,UAAU,UAAf,UACE,wFACA,i/BAO8L,mBAAGgB,KAAK,qBAAR,yDAE9L,kDACA,qhBAMA,wEACA,uGACwE,mBAAGA,KAAK,wBAAR,+BADxE,+DAE4D,mBAAGA,KAAK,0FAA0FC,OAAO,SAASC,IAAI,aAAtH,4BAF5D,woBAOA,uDACA,gFACiD,mBAAGF,KAAK,uBAAR,mBADjD,uNAIA,wDACA,qOAE2C,mBAAGA,KAAK,qBAAqBC,OAAO,SAASC,IAAI,aAAjD,4BAF3C,kNAG+M,mBAAGF,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,kCAH/M,gGAGgZ,mBAAGF,KAAK,mCAAmCC,OAAO,SAASC,IAAI,aAA/D,kCAHhZ,YAQP,E,2ECqOcC,MA3Qf,YAA8B,eAC1B,IAAMC,EAAW,CACb,OAAU,CACN,KAAQC,GAEZ,OAAU,CACN,KAAQC,GAEZ,gBAAmB,CACf,KAAQC,GAEZ,IAAO,CACH,KAAQ,KAIVC,EAAmBC,YAAYC,KAC/BC,EAAYF,YAAYG,KACxBC,EAAWC,cACjB,SAASC,EAAoBC,GAAYH,EAASI,YAAuBD,GAAY,CACrF,SAASE,EAAgBC,GAAON,EAASO,YAAmBD,GAAO,CACnE,SAASE,EAAkBF,GAAON,EAASS,YAAqBH,GAAO,CAEvE,MAAwCjC,mBAAS,IAAjD,mBAAOqC,EAAP,KAAqBC,EAArB,KACA,EAAkCtC,oBAAS,GAA3C,mBAAOuC,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAeC,GACpB,IAAMC,EAAQD,EAAE3B,OAAO6B,OACjBC,EAAWC,KAAKC,MAAMJ,GAC5BL,EAAgBO,EACnB,CAED,SAASG,EAAcN,GACnB,IACMG,EAKV,SAAmBI,GAEf,IAAIC,EAAmB,MACM,IAAzBD,EAAIE,QAAQ,QACZD,EAAmB,QACW,IAAvBD,EAAIE,QAAQ,QACnBD,EAAmB,MAQvB,IANA,IAAIE,EAAQH,EAAII,MAAMH,GAElBN,EAAS,GAETU,EAAUF,EAAM,GAAGC,MAAM,KAErBE,EAAE,EAAEA,EAAEH,EAAMI,OAAO,EAAED,IAAI,CAK7B,IAHA,IAAIE,EAAM,CAAC,EACPC,EAAYN,EAAMG,GAAGF,MAAM,KAEtBM,EAAE,EAAEA,EAAEL,EAAQE,OAAOG,IAAI,CAC9B,IAAIC,EAAQF,EAAYC,GACL,MAAfL,EAAQK,IAA6B,MAAfL,EAAQK,IAA6B,wBAAfL,EAAQK,GACpDC,EAAQC,SAASD,GACK,WAAfN,EAAQK,KACfC,EAAQE,WAAWF,IAEvBH,EAAIH,EAAQK,IAAMC,CACrB,CAEDhB,EAAOvE,KAAKoF,EAEf,CAED,OAAOb,CACV,CAvCoBmB,CADHrB,EAAE3B,OAAO6B,QAEvBN,EAAgBO,EACnB,CAwCD,IAAMmB,EAAU,uCAAG,WAAOtB,GAAP,iBAAAuB,EAAA,qEAEN,OAADvB,QAAC,IAADA,GAAA,UAAAA,EAAG3B,cAAH,eAAWmD,MAAMV,QAAS,GAFnB,oBAGPd,EAAEyB,iBACIC,EAAS,IAAIC,WACY,qBAA3B3B,EAAE3B,OAAOmD,MAAM,GAAGI,KALf,gBAMHF,EAAOG,OAAS9B,EANb,0BAO+B,aAA3BC,EAAE3B,OAAOmD,MAAM,GAAGI,KAPtB,iBAQHF,EAAOG,OAASvB,EARb,6BAUG,kBAVH,QAYPoB,EAAOI,WAAW9B,EAAE3B,OAAOmD,MAAM,IAZ1B,QAcX1B,GAAa,GAdF,kDAgBXR,EAAgB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,MAC3DG,EAAkB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,MAC7DK,GAAa,GAlBF,0DAAH,sDAsBhB,SAASiC,IACL,IAAIC,EAEAA,EADqB,QAArBpD,EACOe,EAEAnB,EAASI,GAAT,KAEX,IACI,IAAIqD,EA6BZ,SAAmDD,EAAMjD,GACrD,IAAImD,EAAe,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,KAC1DC,EAAiB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,KAoBhE,OAnBAH,EAAKI,SAAQ,SAAUC,EAAK7G,GACxB,IAAI8G,EAAYD,EAAI,uBACpBF,EAAc,EAAMG,GAAW3G,KAAK0G,EAAG,GACnCA,EAAIE,eAAe,WACnBJ,EAAc,OAAWG,GAAW3G,KAAK0G,EAAG,QAE5CA,EAAIE,eAAe,MACnBJ,EAAc,EAAMG,GAAW3G,KAAK0G,EAAG,GAzBnD,SAA6BA,EAAKtD,GAC9B,OAAOA,GACH,IAAK,eACD,OAAO,EACX,IAAK,MACD,OAAoB,IAAbsD,EAAG,EACd,IAAK,MACD,OAAoB,IAAbA,EAAG,EACd,IAAK,MACD,OAAoB,IAAbA,EAAG,EACd,IAAK,MACD,OAAoB,IAAbA,EAAG,EAErB,CAcWG,CAAoBH,EAAKtD,KACzBmD,EAAY,EAAMI,GAAW3G,KAAK0G,EAAG,GACjCA,EAAIE,eAAe,WACnBL,EAAY,OAAWI,GAAW3G,KAAK0G,EAAG,QAE1CA,EAAIE,eAAe,MACnBL,EAAY,EAAMI,GAAW3G,KAAK0G,EAAG,GAGhD,IACM,CAAC,aAAgBH,EAAc,eAAkBC,EAC3D,CApD2BM,CAA0CT,EAAMjD,GAChEmD,EAAeD,EAAa,aAC5BE,EAAiBF,EAAa,gBAoD1C,SAA2BC,EAAcC,GACrC,IAAIO,GAAU,GACsB,IAAhCR,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,OAAW,GAAGpB,QAAUoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,EAAM,GAAGpB,QAC3H,IAAhCoB,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,OAAW,GAAGpB,QAAUoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,EAAM,GAAGpB,QAC5H,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,OAAW,GAAGrB,QAAUqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,EAAM,GAAGrB,QACtI,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,OAAW,GAAGrB,QAAUqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,EAAM,GAAGrB,QAEpI,IAAhCoB,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,OAAW,GAAGpB,QAA0C,IAAhCoB,EAAY,EAAM,GAAGpB,QAClG,IAAhCoB,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,OAAW,GAAGpB,QAA0C,IAAhCoB,EAAY,EAAM,GAAGpB,QAC5F,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,OAAW,GAAGrB,QAA4C,IAAlCqB,EAAc,EAAM,GAAGrB,QACpG,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,OAAW,GAAGrB,QAA4C,IAAlCqB,EAAc,EAAM,GAAGrB,QAElG,IAAhCoB,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,EAAM,GAAGpB,QAA+C,IAArCoB,EAAY,OAAW,GAAGpB,QAClG,IAAhCoB,EAAY,EAAM,GAAGpB,QAAgBoB,EAAY,EAAM,GAAGpB,SAAWoB,EAAY,EAAM,GAAGpB,QAA+C,IAArCoB,EAAY,OAAW,GAAGpB,QAC5F,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,EAAM,GAAGrB,QAAiD,IAAvCqB,EAAc,OAAW,GAAGrB,QACpG,IAAlCqB,EAAc,EAAM,GAAGrB,QAAgBqB,EAAc,EAAM,GAAGrB,SAAWqB,EAAc,EAAM,GAAGrB,QAAiD,IAAvCqB,EAAc,OAAW,GAAGrB,UATzI4B,GAAU,GAYd,IAAKA,EACD,KAAM,mBAEb,CAxEOC,CAAkBT,EAAcC,GAChC7C,EAAgB4C,GAChBzC,EAAkB0C,GAClBrC,GAAa,EAKhB,CAJC,MAAO8C,GACLtD,EAAgB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,MAC3DG,EAAkB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,MAC7DK,GAAa,EAChB,CACJ,CA+ED,OAdA+C,qBAAU,WACNd,GACH,GAAE,IAEHc,qBAAU,WACNd,GACH,GAAE,CAACnD,EAAkBG,EAAWY,IAEjCkD,qBAAU,WACsB,IAAxBlD,EAAamB,QACb3B,EAAoB,MAE3B,GAAE,CAACQ,IAGA,sBAAKvC,UAAU,kBAAf,UACA,yCACA,2EACA,uBACA,uBAAM8D,MAAOtC,EAAb,UACI,uBAAOhG,KAAK,mBAAmBgJ,KAAK,QAAQV,MAAM,SAAS4B,SAAU,SAAC9C,GAAD,OAAOb,EAAoBa,EAAE3B,OAAO6C,MAApC,EAA4C6B,QAA8B,WAArBnE,IAD9H,IACgK,uCAC5J,sBAAKxB,UAAU,qBAAf,8NAEI,+BACI,oEACA,wEACA,iEACA,qEACA,gDACA,mDAEJ,mBAAGgB,KAAK,yIAAyIC,OAAO,SAASC,IAAI,aAArK,gFAEJ,uBACA,uBAAO1F,KAAK,mBAAmBgJ,KAAK,QAAQV,MAAM,SAAS4B,SAAU,SAAC9C,GAAD,OAAOb,EAAoBa,EAAE3B,OAAO6C,MAApC,EAA4C6B,QAA8B,WAArBnE,IAf9H,IAegK,mEAC5J,sBAAKxB,UAAU,qBAAf,0MAEI,+BACI,4DACA,sDACA,2DACA,yDACA,iDACA,kDAEJ,mBAAGgB,KAAK,0HAA0HC,OAAO,SAASC,IAAI,aAAtJ,gFAEJ,uBACA,uBAAO1F,KAAK,mBAAmBgJ,KAAK,QAAQV,MAAM,kBAAkB4B,SAAU,SAAC9C,GAAD,OAAOb,EAAoBa,EAAE3B,OAAO6C,MAApC,EAA4C6B,QAA8B,oBAArBnE,IA7BvI,IA6BkL,2DAC9K,sBAAKxB,UAAU,qBAAf,iTAEI,+BACI,sDACA,kDACA,iEACA,+DACA,gDACA,mDAEJ,mBAAGgB,KAAK,wFAAwFC,OAAO,SAASC,IAAI,aAApH,gFAEJ,uBACA,uBAAO1F,KAAK,mBAAmBgJ,KAAK,QAAQV,MAAM,MAAM4B,SAAU,SAAC9C,GAAD,OAAOb,EAAoBa,EAAE3B,OAAO6C,MAApC,EAA4C6B,QAA8B,QAArBnE,IA3C3H,IA2C0J,4DAE1J,uBAAOgD,KAAK,OAAOhJ,KAAK,OAAOkK,SAAUxB,IACzC,sBAAKlE,UAAU,qBAAf,gGACuF,+BACnF,2EACA,6FACA,iJAJJ,+GAQA,uBACsB,QAArBwB,GAAsD,IAAxBe,EAAamB,QAAgBjB,GACxD,qBAAKzC,UAAU,qBAAf,+FAEkB,QAArBwB,GAAsD,IAAxBe,EAAamB,QAAgBjB,GACxD,qBAAKzC,UAAU,qBAAf,+IAIX,E,gFCuGD,SAAS4F,GAAT,GAA4D,IAAnC3I,EAAkC,EAAlCA,cAAe4I,EAAmB,EAAnBA,iBACpC,EAAwD3F,mBAASjD,GAAjE,mBAAO6I,EAAP,KAA6BC,EAA7B,KACA,OACI,qCACA,qIACA,uBAAOvB,KAAK,OAAOwB,IAAI,IAAIC,IAAI,MAAMnC,MAAOgC,EAAsBJ,SAAU,SAAC9C,GAAD,OAAOmD,EAAwBnD,EAAE3B,OAAO6C,MAAxC,EAAgDoC,OAAQ,SAACtD,GAC7HA,EAAE3B,OAAO6C,MAAQ,GACjBiC,EAAwB,GAExBnD,EAAE3B,OAAO6C,MAAQ,KACjBiC,EAAwB,KAE5BF,EAAiBC,EACpB,MAGR,CAEcK,OAhYf,YAA0C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,UAEnBxE,EAAWC,cACjB,SAAS+D,EAAiB/B,GAAQjC,EAASlE,EAAoBmG,GAAQ,CACvE,SAASwC,EAAmBxC,GAAQjC,EAASjE,EAAsBkG,GAAQ,CAC3E,SAASyC,EAAmBzC,GAAQjC,EAAShE,EAAsBiG,GAAQ,CAC3E,SAAS0C,EAAkB1C,GAAQjC,EAAS/D,EAAqBgG,GAAQ,CACzE,SAAS2C,EAAwB3C,GAAQjC,EAAS9D,EAA2B+F,GAAQ,CAGrF,IAAMtC,EAAmBC,YAAYC,KAC/BgF,EAAwBjF,YAAY/E,KACpCf,EAAQ8F,YAAY7E,KACpBhB,EAAQ6F,YAAY5E,KACpBhB,EAAQ4F,YAAY3E,KACpBhB,EAAQ2F,YAAY1E,KACpB4J,EAAQlF,YAAYmF,KACpBC,EAAQpF,YAAYqF,KACpBC,EAAQtF,YAAYuF,KACpBC,EAAQxF,YAAYyF,KACpBC,EAAQ1F,YAAY2F,KACpBC,EAAQ5F,YAAY6F,KACpBC,EAAQ9F,YAAY+F,KACpBC,EAAQhG,YAAYiG,KACpBC,EAASlG,YAAYmG,KACrBC,EAASpG,YAAYqG,KACrBC,EAAUtG,YAAYuG,KACtB/K,EAAgBwE,YAAY/C,GAC5BuJ,EAA8BxG,YAAYyG,KAC1CC,EAAwB1G,YAAY2G,KACpCtD,EAAerD,YAAY4G,KAC3BtD,GAAiBtD,YAAY6G,KAC7BC,GAA2B9G,YAAY+G,KAEvCpL,GAAiBqE,YAAY3C,GAC7BzB,GAAuBoE,YAAY1C,GACnC7B,GAAkBuE,YAAY7C,GAC9BtB,GAAgBmE,YAAYzC,GAC5BzB,GAAiBkE,YAAYxC,GAC7BvB,GAAW+D,YAAYtC,GAE7B,GAAwDe,mBAAS,IAAjE,qBAAOuI,GAAP,MAA6BC,GAA7B,MACA,GAAwDxI,mBAAS,IAAjE,qBAAOyI,GAAP,MAA6BC,GAA7B,MACA,GAAoC1I,mBAAS,MAA7C,qBAWA,SAAS2I,KACLhH,EAASrD,KACT6H,EAAUyC,MAAM7L,EAAgBA,GAAe8L,KAAK,WACvD,CAED,SAASC,GAAcjB,GACnB,IAAIkB,EAAc,KAalB,MAZgB,mBAAZlB,IACAkB,EAAcC,IAEF,YAAZnB,IACAkB,EAAcE,KAAKnD,KAEP,oBAAZ+B,IACAkB,EAAcG,IAEF,uBAAZrB,IACAkB,EAAcI,IAEXJ,CACV,CAED,SAASK,GAAeC,EAAiBC,EAAiBC,EAASC,GAE/D,IADA,IAAIC,EAAQ,EACJlG,EAAI,EAAGA,EAAI8F,EAAgB7F,OAAQD,IACpC8F,EAAgB9F,KAAO+F,GAAmBC,EAAQhG,KAAOiG,GACxDC,IAER,OAAOA,CACV,CAED,SAASC,GAAQC,EAAQC,EAAWC,EAAGC,GAEnC,IADA,IAAIC,EAAY,GACRxG,EAAI,EAAGA,EAAIoG,EAAOnG,OAAQD,IAC3BoG,EAAOpG,IAAMqG,EACZG,EAAU1L,KAAK,GAEf0L,EAAU1L,KAAK,GAEvB,OAAO2L,GAA8BD,EAAWF,EAAGC,EACtD,CAED,SAASE,GAA8BD,EAAWF,EAAGC,GACjD,IAAIG,EAAKb,GAAeW,EAAW,EAAGF,EAAG,GACrCK,EAAKd,GAAeW,EAAW,EAAGF,EAAG,GACrCM,EAAKf,GAAeW,EAAW,EAAGF,EAAG,GACrCO,EAAKhB,GAAeW,EAAW,EAAGF,EAAG,GAEzC,cAA+BC,EAA/B,GAGA,OAHA,KACmBG,EADnB,KAC+BC,EAD/B,KAC2CC,EAD3C,KACuDC,CAG1D,CAED,SAASC,GAAeV,EAAQC,EAAWC,EAAGC,GAC1C,IAAIlG,EAAQ8F,GAAQC,EAAQC,EAAWC,EAAGC,GAE1C,OADAlG,GAAgB+F,EAAOnG,MAE1B,CAED,SAASoG,GAAUD,EAAQC,EAAWC,EAAGC,GACrC,OAAOF,CACV,CAED,SAASU,GAAIC,EAASC,GAElB,OADUD,EAAUC,CAEvB,CAED,SAASxB,GAAmBuB,EAASC,GAEjC,OADWvB,KAAKwB,IAAIF,EAAUC,EAEjC,CAED,SAAStB,GAAgBqB,EAASC,GAC9B,OAAID,GAAWC,EACJD,EAAUtC,EAAwBuC,EAEtCD,EAAUC,EAAUvC,CAC9B,CAED,SAASkB,GAAeoB,EAASC,GAC7B,IAAIE,EAAyB,EAK7B,OAJIH,GAAWxC,GACX2C,IACAF,GAAWzC,GACX2C,IACGA,CACV,CAED,SAASC,GAAMJ,EAASC,GACpB,MAAO,CAACD,EAASC,EACpB,CAED,SAASI,GAAgB7N,EAAe4M,EAAQE,EAAGgB,EAAuBf,GAEtE,IADA,IAAIgB,EAAS,GACJC,EAAI,EAAGA,EAAIhO,EAAegO,IAAK,CACpC,IACInH,EAAQiH,EAAsBlB,EAD1BqB,GAAYD,EAAGhO,GACsB8M,EAAGC,GAChDgB,EAAOzM,KAAKuF,EACf,CACD,OAAOkH,CACV,CAED,SAASG,GAAkBlO,EAAemO,EAAUC,EAAUC,EAAKC,EAAKR,EAAuBS,EAAsBC,EAAyBC,GAI1I,IAHA,IAAIC,EAAWb,GAAgB7N,EAAemO,EAAUE,EAAKP,EAAuBU,GAChFG,EAAWd,GAAgB7N,EAAeoO,EAAUE,EAAKR,EAAuBW,GAChFV,EAAS,GACJa,EAAM,EAAGA,EAAM5O,EAAe4O,IACnC,IAAK,IAAIC,EAAM,EAAGA,EAAM7O,EAAe6O,IAAO,CAC1C,IAAIhI,EAAQ0H,EAAqBG,EAASE,GAAMD,EAASE,IACzDd,EAAOzM,KAAKuF,EACf,CAEL,OAAOkH,CACV,CAED,SAASE,GAAYD,EAAGhO,GACpB,IAAI6M,EAAa,GAAG7M,EAAc,GAAMgO,EACxC,OAAO9B,KAAK4C,MAAqC,KAA9BjC,EAAYkC,OAAOC,UAAkB,GAC3D,CAED,SAASC,KACL,GAAyC,IAArCpH,EAAY,OAAW,GAAGpB,QAAqD,IAArCoB,EAAY,OAAW,GAAGpB,OAKpE,OAJA4C,EAAmB,IACnBG,EAAwB,IACxBD,EAAkB,IAClBD,EAAmB,IACZ,EAEPD,EAAmB6E,GAAkBlO,EAAe6H,EAAY,OAAW,GAAIA,EAAY,OAAW,GAAIA,EAAY,EAAM,GAAIA,EAAY,EAAM,GAAIgF,GAAWe,KACjKpE,EAAwB0E,GAAkBlO,EAAe8H,GAAc,OAAW,GAAIA,GAAc,OAAW,GAAIA,GAAc,EAAM,GAAIA,GAAc,EAAM,GAAI6E,GAASY,GAAK,CAAC7O,EAAOC,EAAOC,EAAOC,GAAQ,CAACH,EAAOC,EAAOC,EAAOC,KACrO,IAAIqQ,EAAkBnD,GAAcjB,GAChC3K,EAAiB+N,GAAkBlO,EAAe6H,EAAY,OAAW,GAAIA,EAAY,OAAW,GAAIA,EAAY,EAAM,GAAIA,EAAY,EAAM,GAAIyF,GAAgB4B,EAAiB,CAACxF,EAAOE,EAAOE,EAAOE,GAAQ,CAACE,EAAOE,EAAOE,EAAOE,IAC7N,mBAAZM,IACA3K,EAAiBA,EAAegP,KAAI,SAASC,EAAG5I,GAC5C,OAAQ4I,CACX,KAEL7F,EAAkBpJ,GAClBmJ,EAAmB4E,GAAkBlO,EAAe6H,EAAY,OAAW,GAAIA,EAAY,OAAW,GAAIA,EAAY,EAAM,GAAIA,EAAY,EAAM,GAAIyF,GAAgBM,GAAO,CAAClE,EAAOE,EAAOE,EAAOE,GAAQ,CAACE,EAAOE,EAAOE,EAAOE,IAExO,CAED,SAAS6E,KACL,IAAIhP,EAAgB,GACpB,GAAoC,IAAhCwH,EAAY,EAAM,GAAGpB,QAAgD,IAAhCoB,EAAY,EAAM,GAAGpB,OAAc,CACxE,IAEIrG,EAAuBmN,GAFEN,GAA8BnF,GAAc,EAAM,GAAIA,GAAc,EAAM,GAAI,CAACpJ,EAAOC,EAAOC,EAAOC,IACpGoO,GAA8BnF,GAAc,EAAM,GAAIA,GAAc,EAAM,GAAI,CAACpJ,EAAOC,EAAOC,EAAOC,KAE7HyQ,EAAkBrC,GAA8BpF,EAAY,EAAM,GAAIA,EAAY,EAAM,GAAI,CAAC6B,EAAOE,EAAOE,EAAOE,IAAUnC,EAAY,EAAM,GAAGpB,OACjJ8I,EAAkBtC,GAA8BpF,EAAY,EAAM,GAAIA,EAAY,EAAM,GAAI,CAACqC,EAAOE,EAAOE,EAAOE,IAAU3C,EAAY,EAAM,GAAGpB,OAEjJ/D,EADkBqJ,GAAcjB,EAChBoE,CAAgBI,EAAiBC,GACrC,mBAAZzE,IACApI,GAAiBA,GAErBrC,EAAgB,CAACqC,EAAetC,EAAsB,CAACkP,EAAiBC,GAC3E,CA5M6B3K,EAAS7D,EA6MtBV,GACpB,CAED,SAASmP,KACL,IAAIC,EAAStP,GAAegP,KAAI,SAASO,EAAGlJ,GACxC,MAAO,CAACkJ,EAAGtP,GAAqBoG,GACnC,IACGmJ,EAAsBC,KAAGC,kBAAkBJ,GAC3CK,EAAUH,EAAoBR,KAAI,SAASY,EAAGvJ,GAC9C,OAAOuJ,EAAE,EACZ,IACDtE,GAAwBqE,GACxB,IAAIE,EAAUL,EAAoBR,KAAI,SAASY,EAAGvJ,GAC9C,OAAOuJ,EAAE,EACZ,IACDpE,GAAwBqE,EAC3B,CA6BD,OAvNA,YA4LAxH,qBAAU,WACNoD,KACAhD,EAAiB,IACjBqG,KACAI,KACoC,IAAhCxH,EAAY,EAAM,GAAGpB,QAAgD,IAAhCoB,EAAY,EAAM,GAAGpB,QAC1D7B,EAASpD,IAEhB,GAAE,CAAC+C,EAAkBsD,EAAcC,KAEpCU,qBAAU,WACNyG,KACAI,IACH,GAAE,CAAC3F,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAO9L,EAAOC,EAAOC,EAAOC,EAAOiM,EAASE,EAA6BE,EAAuBlL,IAErJwI,qBAAU,WACNgH,IACH,GAAE,CAACrP,GAAgBC,KAEpBoI,qBAAU,WACNoD,IACH,GAAE,CAAC5L,IAEJwI,qBAAU,WACNgH,IACH,GAAE,IAGC,sBAAKzM,UAAU,aAAf,UACI,6CADJ,uiBAGI,uBAAK,uBACL,yDAJJ,6CAI8E+E,GAAc,EAAM,GAAGrB,OAASqB,GAAc,EAAM,GAAGrB,OAJrI,+BAKI,uBACA,+CANJ,qBASI,uBAAK,uBACiC,IAArCoB,EAAY,OAAW,GAAGpB,QAAqD,IAArCoB,EAAY,OAAW,GAAGpB,QACjE,cAACkC,GAAD,CAAgB3I,cAAeA,EAAe4I,iBAAkBA,IAEpE,uBAAK,uBACL,8BACI,wBAAQvF,QAASuI,GAAjB,mCAKJ,cAAC,KAAD,CACI1G,KAAM,CACN,CACI+K,EAAGzE,GACHsB,EAAGpB,GACHwE,KAAM,QACN3R,KAAM,eACN4R,OAAQ,CAACC,MAAO,YAEpB,CACIH,EAAG9P,GACH2M,EAAG1M,GACH8P,KAAM,UACNG,QAA8C,IAArCxI,EAAY,OAAW,GAAGpB,QAAqD,IAArCoB,EAAY,OAAW,GAAGpB,OAC7E0J,OAAQ,CACJC,MAAOjH,EACPmH,KAAM,EACNC,KAAM,CACFH,MAAO,UACPI,MAAO,IAGfjJ,KAAM,UACNkJ,cAAe,gHAEO/F,EAFP,yBAE8BE,EAF9B,gBAGfhF,KAAM3F,GACN1B,KAAM,iBAEV,CACI0R,EAAG,CAAC5P,GAAc,IAClByM,EAAG,CAACzM,GAAc,IAClB6P,KAAM,UACNG,QAAkC,IAAzBhQ,GAAcoG,OACvB0J,OAAQ,CACJC,MAAO3P,GACP6P,KAAM,GACNI,OAAQ,UACRH,KAAM,CACFH,MAAO,UACPI,MAAO,IAGfjJ,KAAM,UACNkJ,cAAe,+HAGflS,KAAM,sCAIVoS,OAAS,CACLH,MAAO,IACPI,OAAQ,IACRC,MAAO,CAAEhN,MAAM,qBAAD,OAAuByH,KACrCwF,MAAO,CAAEjN,MAAM,gCAAD,OAAkC4F,EAAsBsH,QAAQ,IAAK,IAArE,MACdC,UAAU,UACVC,YAAY,GAGhB5N,QAAS,SAAC6B,GACN,IAAIgM,EAAS,aAAO/H,GAEhB/H,GAAiB,EACjB8D,EAAKuK,OAAO,GAAGvK,KAAK+K,EAAExJ,OAAS,IAC/BrF,EAAgB8D,EAAKuK,OAAO,GAAG0B,YAEnC,IAAIC,EAAuB9Q,GAAe8F,QAAQhF,GAC9CgQ,GAAwB,GACxBxM,EAAS3D,EAAoB,CAAC,MAASmQ,EAAsB,cAAiBhQ,MACvD,IAAnBA,IACA8P,EAAU9P,GAAiB,UAI/BwD,EAASvD,EAAiBD,KACH,IAAnBA,IACA8P,EAAU9P,GAvTlC,WAGI,IADA,IAAIiQ,KAAS,IAAMnF,KAAKoF,UACjBD,GAAO,IAAMA,GAAO,IACvBA,KAAS,IAAMnF,KAAKoF,UAExB,MAAM,QAAN,OAAeD,EAAf,gBACH,CAgTkDE,KAGnCnI,EAAU8H,EACb,MAIhB,E,OC3TcM,OArDf,YAAkC,eAChC,IAAM9G,EAASlG,YAAYmG,KACrBC,EAASpG,YAAYqG,KACrBpB,EAAwBjF,YAAY/E,KACpCU,EAAiBqE,YAAY3C,GAC7BzB,EAAuBoE,YAAY1C,GACnC7B,EAAkBuE,YAAY7C,GAC9BtB,EAAgBmE,YAAYzC,GAC5BzB,EAAiBkE,YAAYxC,GAC7BzB,EAAqBiE,YAAYvC,GAwBvC,OACE,gCACI,oBAAIwP,GAAG,QAAP,qCACA,uBAAOA,GAAG,iBAAV,SACA,kCACE,+BACE,2CACA,4CACA,0DACA,mDA7BDnR,EAAe6O,KAAI,SAAA3I,GACxB,IAAMiL,EAAKlR,EAAmBiG,GACxBkL,GAAuB,IAALlL,OAAQmL,EAAY1R,EAAgBuG,GAAG,GACzDoL,GAAuB,IAALpL,OAAQmL,EAAY1R,EAAgBuG,GAAG,GACzD9G,GAAqB,IAAL8G,EAAQnG,EAAc,GAAKD,EAAqBoG,GAChE9D,GAAqB,IAAL8D,EAAQnG,EAAc,GAAKF,EAAeqG,GAChE,OACE,+BACE,6BAAKiL,SACgBE,IAApBD,EACC,+BAAKhH,EAAL,KAAegH,EAAgBG,QAAQ,GAAvC,KAA6CjH,EAA7C,KAAuDgH,EAAgBC,QAAQ,MAC7E,4DAEJ,+BAAKnS,EAAL,IAAqB+J,KACrB,oCAAK/G,QAAL,IAAKA,OAAL,EAAKA,EAAemP,QAAQ,OAPrBJ,EAUZ,WAmBJ,EC2JcK,I,OA5MW,SAAC,GASzB,IATuC,IAAb3I,EAAY,EAAZA,OACpBuB,EAASlG,YAAYmG,KACrBC,EAASpG,YAAYqG,KACrB5K,EAAkBuE,YAAY7C,GAC9BmG,EAAiBtD,YAAY6G,KAC7B/K,EAAiBkE,YAAYxC,GAE/B+P,EAA2B,GAC3BC,EAA2B,GACvBxL,EAAI,EAAGA,EAAIsB,EAAc,EAAM,GAAGrB,OAAQD,IACZ,IAA9BsB,EAAc,EAAM,GAAGtB,GACzBuL,EAAyBzQ,KAAKkF,GAE9BwL,EAAyB1Q,KAAKkF,GACpC,IAAMyL,EAAY,GAClBD,EAAyBjK,SAAQ,SAAAvB,GAAC,OAAIyL,EAAU3Q,KAAKwG,EAAc,OAAW,GAAGtB,GAA/C,IAClC,IAAM0L,EAAY,GAClBH,EAAyBhK,SAAQ,SAAAvB,GAAC,OAAI0L,EAAU5Q,KAAKwG,EAAc,OAAW,GAAGtB,GAA/C,IA8BlC,IA7BA,IAwBM2L,EAAa,CAxBK,CACtBrF,EAAGmF,EACH1K,KAAM,YACNhJ,KAAM,MACN4R,OAAQ,CACNC,MAAO,yBACPG,KAAM,CACJH,MAAO,uBACPI,MAAO,KAIW,CACtB1D,EAAGoF,EACH3K,KAAM,YACNhJ,KAAM,MACN4R,OAAQ,CACJC,MAAO,0BACPG,KAAM,CACJH,MAAO,wBACPI,MAAO,MAOX4B,EAA2B,GAC3BC,EAA2B,GACvB7L,EAAI,EAAGA,EAAIsB,EAAc,EAAM,GAAGrB,OAAQD,IACZ,IAA9BsB,EAAc,EAAM,GAAGtB,GACzB4L,EAAyB9Q,KAAKkF,GAE9B6L,EAAyB/Q,KAAKkF,GACpC,IAAM8L,EAAY,GAClBD,EAAyBtK,SAAQ,SAAAvB,GAAC,OAAI8L,EAAUhR,KAAKwG,EAAc,OAAW,GAAGtB,GAA/C,IAClC,IAAM+L,EAAY,GAClBH,EAAyBrK,SAAQ,SAAAvB,GAAC,OAAI+L,EAAUjR,KAAKwG,EAAc,OAAW,GAAGtB,GAA/C,IA+BlC,IA9BA,IAwBMgM,EAAa,CAxBK,CACpB1F,EAAGwF,EACH/K,KAAM,YACNhJ,KAAM,MACN4R,OAAQ,CACJC,MAAO,wBACPG,KAAM,CACJH,MAAO,sBACPI,MAAO,KAIO,CACtB1D,EAAGyF,EACHhL,KAAM,YACNhJ,KAAM,MACN4R,OAAQ,CACJC,MAAO,2BACPG,KAAM,CACJH,MAAO,wBACPI,MAAO,MAMXiC,EAAmB,GACnBC,EAAmB,GAEnBC,EAAa,EACRvD,EAAE,EAAGA,EAAI9O,EAAemG,OAAQ2I,IAAK,CAC5C,IAAIhO,EAAgBd,EAAe8O,GACnC,IAAuB,IAAnBhO,EAAsB,CACxB,IAAIgP,EAAQjH,EAAO/H,GACfwR,EAAa,CACfrL,KAAM,OACNsL,KAAM,QACNC,GAAI7S,EAAgBmB,GAAe,GACnC2R,GAAI,IACJC,GAAI/S,EAAgBmB,GAAe,GACnC6R,GAAI,EACJ1C,KAAM,CACJH,MAAOA,EACPI,MAAO,EACP0C,KAAMP,EAAa,YAGvBF,EAAiBnR,KAAKsR,GAEtB,IAAIO,EAAa,CACf5L,KAAM,OACNsL,KAAM,QACNC,GAAI7S,EAAgBmB,GAAe,GACnC2R,GAAI,EACJC,GAAI/S,EAAgBmB,GAAe,GACnC6R,GAAI,IACJ1C,KAAM,CACJH,MAAOA,EACPI,MAAO,EACP0C,KAAMP,EAAa,YAGvBD,EAAiBpR,KAAK6R,GACtBR,GAAc,CACf,CAEF,CAED,IAAMS,EAAe,CACnB5C,MAAO,IACPI,OAAQ,IACRyC,OAAQ,CACNC,EAAG,GACHtF,EAAG,EACHuF,EAAG,GACHC,EAAG,GACHC,IAAK,GAEP5P,MAAO6G,EACPgJ,QAAS,UACTC,OAAQlB,EACR5B,MAAO,CACHtJ,KAAM,YACN1D,MAAO,YACP+P,UAAW,YAEf9C,MAAO,CACLjN,MAAO,oBACPgQ,MAAO,EAAE,IAAM,OAEjBC,YAAY,EACZC,OAAQ,CACN9D,EAAG,EACHnD,EAAG,IAIDkH,EAAe,CACnBxD,MAAO,IACPI,OAAQ,IACRyC,OAAQ,CACNC,EAAG,EACHtF,EAAG,GACHuF,EAAG,GACHC,EAAG,GACHC,IAAK,GAEP5P,MAAO+G,EACP8I,QAAS,UACTC,OAAQjB,EACR7B,MAAO,CACHtJ,KAAM,YACN1D,MAAO,aAEXiN,MAAO,CACL+C,MAAO,EAAE,IAAM,OAEjBC,YAAY,EACZC,OAAQ,CACN9D,EAAG,EACHnD,EAAG,IAIP,OACE,sBAAK/J,UAAU,oBAAf,UACE,oDACwC,IAAvC+E,EAAc,OAAW,GAAGrB,QAAuD,IAAvCqB,EAAc,OAAW,GAAGrB,OACvE,gLAEA,iKAEE,uBACA,cAAC,KAAD,CAAM1D,UAAU,WACZmC,KAAMiN,EACNxB,OAAQyC,IAEZ,cAAC,KAAD,CAAMrQ,UAAU,YACZmC,KAAMsN,EACN7B,OAAQqD,SAOrB,GC/HcC,I,OA3ES,SAAC,GAAc,IAAb9K,EAAY,EAAZA,OAChBuB,EAASlG,YAAYmG,KACrBC,EAASpG,YAAYqG,KACrB3K,EAAkBsE,YAAY5C,GAC9BzB,EAAiBqE,YAAY3C,GAC7BxB,EAAgBmE,YAAYzC,GAC5BzB,EAAiBkE,YAAYxC,GAC7BzB,EAAqBiE,YAAYvC,GAEnCiS,EAAkB,GAClBC,EAAuB,GAyB3B,OAxBA7T,EAAeyH,SAAQ,SAAAvB,GACnB,IAAI4N,EAAiB,CACjBnE,EAAG,CAAC,GAAD,OAAIvF,EAAJ,aAAenK,EAAmBiG,GAAlC,eAA4CoE,EAA5C,aAAuDrK,EAAmBiG,GAA1E,MACHsG,GAAQ,IAALtG,EAAQnG,EAAc,GAAKH,EAAgBsG,GAC9C2J,OAAO,CACLC,OAAY,IAAL5J,EAAQ,CAAC,SAAU,UAAY,CAAC2C,EAAO3C,GAAI2C,EAAO3C,KAE3De,KAAM,MACNhJ,KAAM,aAAegC,EAAmBiG,IAE5C0N,EAAgB5S,KAAK8S,GACrB,IAAIC,EAAsB,CACtBpE,EAAG,CAAC,mBAAD,OAAoB1P,EAAmBiG,GAAvC,MACHsG,GAAQ,IAALtG,EAAQ,CAACnG,EAAc,IAAM,CAACF,EAAeqG,IAChD2J,OAAO,CACLC,OAAY,IAAL5J,EAAQ,CAAC,UAAY,CAAC2C,EAAO3C,KAEtCe,KAAM,MACNhJ,KAAM,aAAegC,EAAmBiG,IAE5C2N,EAAqB7S,KAAK+S,EAC7B,IAIG,sBAAKtR,UAAU,kBAAf,UACI,gDAC2B,IAA1BzC,EAAemG,QAChB,qGAAuE,uBAAK,0BAE5E,6TACA,cAAC,KAAD,CACIvB,KAAMiP,EAENxD,OACI,CACI9M,MAAM,iBACNgN,MAAO,CACHyD,YAAY,MAM5B,8DACA,wKACA,uBACA,cAAC,KAAD,CACIpP,KAAMgP,EAENvD,OACI,CACI9M,MAAO,+BACPgN,MAAO,CACHyD,YAAY,QAQvC,GC1CcC,OA1Bf,SAAeC,GAGb,MAA4BvR,mBAAS4I,MAAM,KAASC,KAAK,YAAzD,mBAAO3C,EAAP,KAAeC,EAAf,KACMkC,EAA2B9G,YAAY+G,KAE7C,OACE,sBAAKxI,UAAU,QAAf,UACE,cAAC,EAAD,CAAQc,MAAM,UACd,sBAAKd,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC0R,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,uCACA,2DALF,sJAOE,8BAAK,4BAAIpJ,MACT,cAAC,GAAD,CAAiBnC,OAAQA,IACzB,cAAC,GAAD,CAAYA,OAAQA,EAAQC,UAAWA,IACvC,cAAC,GAAD,IACA,cAAC,GAAD,CAAmBD,OAAQA,SAIlC,E,gBC0BcwL,OArDf,WAEE,IAAM/P,EAAWC,cAEjB,SAAS+P,IACPhQ,EAASI,YAAuB,WAChCJ,EAASzF,YAAY,IACrByF,EAASxF,aAAa,IACtBwF,EAASvF,aAAa,IACtBuF,EAAStF,YAAY,IACrBsF,EAASiQ,YAAY,IACrBjQ,EAASkQ,aAAa,IACtBlQ,EAASmQ,YAAY,IACrBnQ,EAASoQ,YAAY,IACrBpQ,EAASqQ,YAAY,IACrBrQ,EAASsQ,aAAa,IACtBtQ,EAASuQ,YAAY,IACrBvQ,EAASwQ,YAAY,IACrBxQ,EAASyQ,YAAgB,QACzBzQ,EAAS0Q,YAAc,kBACxB,CAYD,OACE,gCACE,cAAC,EAAD,CAAQzR,MAAM,sBACd,sBAAKd,UAAU,UAAf,UACE,uFADF,kBAIiB,mBAAGgB,KAAK,0FAA2FC,OAAO,SAA1G,gCAJjB,IAKE,cAACuR,GAAA,EAAD,CAAQC,UAAWC,IAAMnS,GAAG,SAASD,QAlB3C,WACEuR,IACAhQ,EAASkQ,aAAa,GACvB,EAeK,wCAGA,uBARF,gBAUE,cAACS,GAAA,EAAD,CAAQC,UAAWC,IAAMnS,GAAG,SAASD,QAlB3C,WACEuR,IACAhQ,EAASkQ,aAAa,GACvB,EAeK,6CAMP,EC7Dc,OAA0B,+CCkG1BY,OA7Ff,WACI,OACI,gCACA,cAAC,EAAD,CAAQ7R,MAAM,QAEd,sBAAKd,UAAU,UAAf,UACI,gFACA,oIAIA,+BACI,+BAAI,oDAAJ,KAAgC,gDAAhC,yJACA,+BAAI,kCAAJ,KAAc,gDAAd,4DACA,+BAAI,uCAAJ,KAAmB,sEAAnB,+EACA,+BAAI,kCAAJ,KAAc,gDAAd,oCAEJ,oNAGA,yEACwC,oCADxC,6FAGA,kCACI,gCACI,+BACI,qDACA,mCACA,wCACA,wCAGR,kCACI,+BACI,mCACA,mCACA,qCACA,sCAEJ,+BACI,mCACA,mCACA,qCACA,sCAEJ,+BACI,mCACA,mCACA,qCACA,4CAIZ,yDAC4B,qCAD5B,kFAGA,mBAAGA,UAAU,OAAb,+LAIA,oBAAI0O,GAAG,oBAAP,0FACA,wYAKA,4JACA,uWAKA,iEACA,6FAGA,keACqc,kCADrc,oCAC8e,kCAD9e,kCACqhB,kCADrhB,oGAC8nB,oCAD9nB,mhBAGA,yXAGA,qBAAKjO,IAAKmS,GAAoBpS,IAAI,+OAA0OiN,MAAM,MAAMI,OAAO,QAE/R,qHACA,qwBAMX,EC9EcgF,OAdR,WACL,OACE,gCACE,cAAC,EAAD,CAAQ/R,MAAM,YACZ,sBAAKd,UAAU,UAAf,UACA,oIACqG,mBAAGgB,KAAK,iCAAR,qCADrG,0BACgM,mBAAGA,KAAK,4BAAR,gCADhM,QAGA,iFAAmD,mBAAGA,KAAK,4CAA4CC,OAAO,SAA3D,oBAAnD,YAIP,ECZM,SAAS6R,KACd,IAAIC,EAAWC,cACf,OACE,gCACE,wDAA2BD,EAASE,YACpC,4BACE,cAAC,IAAD,CAAM1S,GAAG,IAAT,yBAIP,CCwBc2S,OAxBf,WAEE,OACE,8BACE,eAAC,IAAD,WAEE,cAAC,EAAD,IAEA,qBAAKlT,UAAU,OAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,OAAK,EAACwS,KAAK,IAAIV,UAAW1R,IACjC,cAAC,IAAD,CAAOoS,KAAK,SAASV,UAAWjB,KAChC,cAAC,IAAD,CAAO2B,KAAK,UAAUV,UAAWb,KACjC,cAAC,IAAD,CAAOuB,KAAK,OAAOV,UAAWE,KAC9B,cAAC,IAAD,CAAOQ,KAAK,WAAWV,UAAWI,KAClC,cAAC,IAAD,CAAOM,KAAK,IAAIV,UAAWK,cAOtC,ECxBcM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECFDQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3U,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJ4U,SAASC,eAAe,SAM1Bb,I,kCCpBA,wNAEMc,EAAe3Y,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACV+F,iBAAkB,SAClBsD,aAAc,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,KACzDC,eAAgB,CAAC,EAAK,CAAC,GAAG,IAAK,OAAU,CAAC,GAAG,IAAK,EAAK,CAAC,GAAG,MAE/DhJ,SAAU,CACNkG,uBADM,SACiBhG,EAAOC,GAC1BD,EAAMuF,iBAAmBtF,EAAOC,OACnC,EACDiG,mBAJM,SAIanG,EAAOC,GACtBD,EAAM6I,aAAe5I,EAAOC,OAC/B,EACDmG,qBAPM,SAOerG,EAAOC,GACxBD,EAAM8I,eAAiB7I,EAAOC,OACjC,KAIDK,EAAqB0X,EAArB1X,QAASC,EAAYyX,EAAZzX,QAEFwF,EAAqEzF,EAArEyF,uBAAwBG,EAA6C5F,EAA7C4F,mBAAoBE,EAAyB9F,EAAzB8F,qBAE5C7F,MAGR,IAAMiF,EAAsB,SAAAzF,GAAK,OAAIA,EAAMqD,QAAQkC,gBAAlB,EAC3B6G,EAAkB,SAAApM,GAAK,OAAIA,EAAMqD,QAAQwF,YAAlB,EACvBwD,EAAoB,SAAArM,GAAK,OAAIA,EAAMqD,QAAQyF,cAAlB,C,kCC/BtC,4RAEM/H,EAAkBzB,YAAY,CAChCC,KAAM,cACNC,aAAc,CACV0Y,cAAe,MACfC,cAAe,MACfC,cAAe,MACfC,cAAe,OAEnBvY,SAAU,CACNwY,oBADM,SACctY,EAAOC,GACvBD,EAAMkY,cAAgBjY,EAAOC,OAChC,EACDqY,oBAJM,SAIcvY,EAAOC,GACvBD,EAAMmY,cAAgBlY,EAAOC,OAChC,EACDsY,oBAPM,SAOcxY,EAAOC,GACvBD,EAAMoY,cAAgBnY,EAAOC,OAChC,EACDuY,oBAVM,SAUczY,EAAOC,GACvBD,EAAMqY,cAAgBpY,EAAOC,OAChC,KAIDK,EAAqBQ,EAArBR,QAASC,EAAYO,EAAZP,QAEF8X,EAAuF/X,EAAvF+X,oBAAqBC,EAAkEhY,EAAlEgY,oBAAqBC,EAA6CjY,EAA7CiY,oBAAqBC,EAAwBlY,EAAxBkY,oBAE/DjY,MAGR,IAAMkY,EAAmB,SAAA1Y,GAAK,OAAIA,EAAMuD,YAAY2U,aAAtB,EACxBS,EAAmB,SAAA3Y,GAAK,OAAIA,EAAMuD,YAAY4U,aAAtB,EACxBS,EAAmB,SAAA5Y,GAAK,OAAIA,EAAMuD,YAAY6U,aAAtB,EACxBS,EAAmB,SAAA7Y,GAAK,OAAIA,EAAMuD,YAAY8U,aAAtB,C,iCCpCrC,4kCAEMS,EAAqBxZ,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVC,SAAU,MACViL,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,MAAO,EACPE,OAAQ,UACRE,OAAQ,UACRlG,UAAW,eACXoG,QAAS,iBACTE,4BAA6B,GAC7BE,sBAAuB,EACvBI,yBAA0B,IAE9BxM,SAAU,CACNiZ,uBADM,SACiB/Y,EAAOC,GAC1BD,EAAMP,SAAWQ,EAAOC,OAC3B,EACD2V,YAJM,SAIM7V,EAAOC,GACfD,EAAM0K,MAAQzK,EAAOC,OACxB,EACD4V,YAPM,SAOM9V,EAAOC,GACfD,EAAM4K,MAAQ3K,EAAOC,OACxB,EACD6V,YAVM,SAUM/V,EAAOC,GACfD,EAAM8K,MAAQ7K,EAAOC,OACxB,EACD8V,YAbM,SAaMhW,EAAOC,GACfD,EAAMgL,MAAQ/K,EAAOC,OACxB,EACD+V,YAhBM,SAgBMjW,EAAOC,GACfD,EAAMkL,MAAQjL,EAAOC,OACxB,EACDgW,YAnBM,SAmBMlW,EAAOC,GACfD,EAAMoL,MAAQnL,EAAOC,OACxB,EACDiW,YAtBM,SAsBMnW,EAAOC,GACfD,EAAMsL,MAAQrL,EAAOC,OACxB,EACDkW,YAzBM,SAyBMpW,EAAOC,GACfD,EAAMwL,MAAQvL,EAAOC,OACxB,EACD8Y,aA5BM,SA4BOhZ,EAAOC,GAChBD,EAAM0L,OAASzL,EAAOC,OACzB,EACD+Y,aA/BM,SA+BOjZ,EAAOC,GAChBD,EAAM4L,OAAS3L,EAAOC,OACzB,EACDmW,gBAlCM,SAkCUrW,EAAOC,GACnBD,EAAM0F,UAAYzF,EAAOC,OAC5B,EACDoW,cArCM,SAqCQtW,EAAOC,GACjBD,EAAM8L,QAAU7L,EAAOC,OAC1B,EACDgZ,kCAxCM,SAwC4BlZ,EAAOC,GACrCD,EAAMgM,4BAA8B/L,EAAOC,OAC9C,EACDiZ,4BA3CM,SA2CsBnZ,EAAOC,GAC/BD,EAAMkM,sBAAwBjM,EAAOC,OACxC,EACDkZ,+BA9CM,SA8CyBpZ,EAAOC,GACZ,mBAAlBD,EAAM8L,QACN9L,EAAMsM,yBAAN,6DAAuFtM,EAAM0L,OAA7F,gBAA2G1L,EAAM4L,OAAjH,+BACyB,YAAlB5L,EAAM8L,QACb9L,EAAMsM,yBAAN,qCAA+DtM,EAAM0L,OAArE,gBAAmF1L,EAAM4L,OAAzF,gBAAuG5L,EAAMP,SAASsS,QAAQ,IAAK,IAAnI,KACyB,uBAAlB/R,EAAM8L,QACb9L,EAAMsM,0BAAN,uFACyB,oBAAlBtM,EAAM8L,UACb9L,EAAMsM,yBAAN,+CAAyEtM,EAAM0L,OAA/E,gBAA6F1L,EAAM4L,OAAnG,gBAAiH5L,EAAMP,SAASsS,QAAQ,IAAK,IAA7I,KAEP,KAIDxR,EAAqBuY,EAArBvY,QAASC,EAAYsY,EAAZtY,QAEFuY,EAA+RxY,EAA/RwY,uBAAwBlD,EAAuQtV,EAAvQsV,YAAaC,EAA0PvV,EAA1PuV,YAAaC,EAA6OxV,EAA7OwV,YAAaC,EAAgOzV,EAAhOyV,YAAaC,EAAmN1V,EAAnN0V,YAAaC,EAAsM3V,EAAtM2V,YAAaC,EAAyL5V,EAAzL4V,YAAaC,EAA4K7V,EAA5K6V,YAAa4C,EAA+JzY,EAA/JyY,aAAcC,EAAiJ1Y,EAAjJ0Y,aAAc5C,EAAmI9V,EAAnI8V,gBAAiBC,EAAkH/V,EAAlH+V,cAAe4C,EAAmG3Y,EAAnG2Y,kCAAmCC,EAAgE5Y,EAAhE4Y,4BAA6BC,EAAmC7Y,EAAnC6Y,+BAE5P5Y,MAGR,IAAM6Y,EAAsB,SAAArZ,GAAK,OAAIA,EAAM0D,cAAcjE,QAAxB,EAC3BkL,EAAW,SAAA3K,GAAK,OAAIA,EAAM0D,cAAcgH,KAAxB,EAChBG,EAAW,SAAA7K,GAAK,OAAIA,EAAM0D,cAAckH,KAAxB,EAChBG,EAAW,SAAA/K,GAAK,OAAIA,EAAM0D,cAAcoH,KAAxB,EAChBG,EAAW,SAAAjL,GAAK,OAAIA,EAAM0D,cAAcsH,KAAxB,EAChBG,EAAW,SAAAnL,GAAK,OAAIA,EAAM0D,cAAcwH,KAAxB,EAChBG,EAAW,SAAArL,GAAK,OAAIA,EAAM0D,cAAc0H,KAAxB,EAChBG,EAAW,SAAAvL,GAAK,OAAIA,EAAM0D,cAAc4H,KAAxB,EAChBG,EAAW,SAAAzL,GAAK,OAAIA,EAAM0D,cAAc8H,KAAxB,EAChBG,EAAY,SAAA3L,GAAK,OAAIA,EAAM0D,cAAcgI,MAAxB,EACjBG,EAAY,SAAA7L,GAAK,OAAIA,EAAM0D,cAAckI,MAAxB,EACjBjG,EAAe,SAAA3F,GAAK,OAAIA,EAAM0D,cAAcgC,SAAxB,EACpBqG,EAAa,SAAA/L,GAAK,OAAIA,EAAM0D,cAAcoI,OAAxB,EAClBG,EAAiC,SAAAjM,GAAK,OAAIA,EAAM0D,cAAcsI,2BAAxB,EACtCG,EAA2B,SAAAnM,GAAK,OAAIA,EAAM0D,cAAcwI,qBAAxB,EAChCK,EAA8B,SAAAvM,GAAK,OAAIA,EAAM0D,cAAc4I,wBAAxB,C,2CCxGhDgN,cAAOC,QAAUC,EAAOC,OAAS,CAC7BtU,SAAU,CACN,OAAU,CACN,OAAU,QACV,OAAU,QACV,GAAM,iBACN,GAAM,iBACN,GAAM,+BACN,GAAM,qBACN,QAAW,GACX,QAAW,sBAGf,OAAU,CACN,OAAU,SACV,OAAU,OACV,GAAM,iBACN,GAAM,eACN,GAAM,gDACN,GAAM,0CACN,QAAW,MACX,QAAW,OAEf,gBAAmB,CACf,OAAU,QACV,OAAU,QACV,GAAM,mCACN,GAAM,iCACN,GAAM,iCACN,GAAM,+BACN,QAAW,GACX,QAAW,IAEf,IAAO,CACH,OAAU,UACV,OAAU,UACV,GAAM,0BACN,GAAM,0BACN,GAAM,4BACN,GAAM,4BACN,QAAW,MACX,QAAW,Q,6t+lOCkBRsQ,IAnDf,YAA0B,eACtB,IAAMlQ,EAAmBC,YAAYC,KAC/ByS,EAAgB1S,YAAYkT,KAC5BP,EAAgB3S,YAAYmT,KAC5BP,EAAgB5S,YAAYoT,KAC5BP,EAAgB7S,YAAYqT,KAE5BjT,EAAWC,cACjB,SAAS6T,EAAiBja,GAAWmG,EAAS0S,YAAoB7Y,GAAW,CAC7E,SAASka,EAAiBla,GAAWmG,EAAS2S,YAAoB9Y,GAAW,CAC7E,SAASma,EAAiBna,GAAWmG,EAAS4S,YAAoB/Y,GAAW,CAC7E,SAASoa,EAAiBpa,GAAWmG,EAAS6S,YAAoBhZ,GAAW,CAS7E,OAPA+J,qBAAU,WACNoQ,EAAiBJ,EAAOC,OAAOtU,SAASI,GAAvB,IACjBsU,EAAiBL,EAAOC,OAAOtU,SAASI,GAAvB,IACjBmU,EAAiBF,EAAOC,OAAOtU,SAASI,GAAvB,IACjBoU,EAAiBH,EAAOC,OAAOtU,SAASI,GAAvB,GACpB,GAAE,CAACA,IAGA,sBAAKxB,UAAU,aAAf,UACI,6CACA,kCAFJ,wFAGI,uBAAK,uBACL,iEACA,uBACA,uBAAO+V,QAAQ,gBAAf,iBACA,uBAAOvR,KAAK,OAAOkK,GAAG,gBAAgB5K,MAAOsQ,EAAe1O,SAAU,SAAC9C,GAAD,OAAOgT,EAAiBhT,EAAE3B,OAAO6C,MAAjC,EAAyCkS,MAAO,CAACvI,MAAO,WAC9H,uBACA,uBAAOsI,QAAQ,gBAAf,iBACA,uBAAOvR,KAAK,OAAOkK,GAAG,gBAAgB5K,MAAOqQ,EAAezO,SAAU,SAAC9C,GAAD,OAAO+S,EAAiB/S,EAAE3B,OAAO6C,MAAjC,EAAyCkS,MAAO,CAACvI,MAAO,WAC9H,uBAAK,uBACL,kCAZJ,sDAaI,uBAAK,uBACL,kEACA,uBACA,uBAAOsI,QAAQ,gBAAf,iBACA,uBAAOvR,KAAK,OAAOkK,GAAG,gBAAgB5K,MAAOwQ,EAAe5O,SAAU,SAAC9C,GAAD,OAAOkT,EAAiBlT,EAAE3B,OAAO6C,MAAjC,EAAyCkS,MAAO,CAACvI,MAAO,WAC9H,uBACA,uBAAOsI,QAAQ,gBAAf,iBACA,uBAAOvR,KAAK,OAAOkK,GAAG,gBAAgB5K,MAAOuQ,EAAe3O,SAAU,SAAC9C,GAAD,OAAOiT,EAAiBjT,EAAE3B,OAAO6C,MAAjC,EAAyCkS,MAAO,CAACvI,MAAO,WAC9H,uBAAK,uBAEL,+CAvBJ,wIAwBI,uBACA,kDAzBJ,wKA4BP,C,oMCsPD,SAASwI,EAAT,GAA4E,IAAhDnS,EAA+C,EAA/CA,MAAOoS,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAI5D,EAAoDnW,mBAAS8L,OAAOlI,IAApE,mBAAOwS,EAAP,KAA2BC,EAA3B,KACA,OACI,gCACI,gCAAQJ,IACR,uBACA,uBAAOnW,UAAU,SAASqW,SAAUA,EAAU7R,KAAK,QAAQwB,IAAI,MAAMC,IAAI,KAAKuQ,KAAK,MAAM1S,MAAOwS,EAAoB5Q,SAAU,SAAC9C,GAAD,OAAO2T,EAAsBvK,OAAOpJ,EAAE3B,OAAO6C,OAA7C,EAAsD2S,UAAW,SAAC7T,GAAD,OAAOsT,EAAelK,OAAOpJ,EAAE3B,OAAO6C,OAAtC,EAA+C4S,KAAK,UACnP,2BAAUhI,GAAG,QAAb,UACI,yCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,wCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,2CAEJ,uBAAM1O,UAAU,aAAhB,UAA8BsW,EAA9B,IAAmDF,KAClB,OAAhCA,EAAKO,MA/BQ,cAgCd,uCAAUxN,KAAK4C,MAAMuK,EAAqBF,EAAKO,MAlCrC,wBAkC0D,KAAO,IAAKP,EAAKO,MAjC7E,iBAoCnB,CAEchF,IAzUf,YAA4B,eAExB,IAAM9P,EAAWC,cACjB,SAAS8U,EAAyBlb,GAAWmG,EAAS7F,YAA4BN,GAAW,CAK7F,SAASmb,EAAoBnb,GAAWmG,EAASmT,YAAuBtZ,GAAW,CASnF,SAASob,EAAUhT,GAAQjC,EAASoT,YAAanR,GAAQ,CACzD,SAASiT,EAAUjT,GAAQjC,EAASqT,YAAapR,GAAQ,CACzD,SAASkT,EAAalT,GAAQjC,EAASyQ,YAAgBxO,GAAQ,CAK/D,IAAMtC,EAAmBC,YAAYC,KAC/BgF,EAAwBjF,YAAY/E,KACpCua,EAAmBxV,YAAY6T,KAC/BnB,EAAgB1S,YAAYkT,KAC5BP,EAAgB3S,YAAYmT,KAC5BP,EAAgB5S,YAAYoT,KAC5BP,EAAgB7S,YAAYqT,KAC5BnZ,EAAQ8F,YAAY7E,KACpBhB,EAAQ6F,YAAY5E,KACpBhB,EAAQ4F,YAAY3E,KACpBhB,EAAQ2F,YAAY1E,KACpB4J,EAAQlF,YAAYmF,KACpBC,EAAQpF,YAAYqF,KACpBC,EAAQtF,YAAYuF,KACpBC,EAAQxF,YAAYyF,KACpBC,EAAQ1F,YAAY2F,KACpBC,EAAQ5F,YAAY6F,KACpBC,EAAQ9F,YAAY+F,KACpBC,EAAQhG,YAAYiG,KACpBC,EAASlG,YAAYmG,KACrBC,EAASpG,YAAYqG,KACrBnG,EAAYF,YAAYG,KACxBmG,EAAUtG,YAAYuG,KACtBC,EAA8BxG,YAAYyG,KAC1CC,EAAwB1G,YAAY2G,KAE1C,EAAsElI,wBAAS0O,GAA/E,mBAAOsI,EAAP,KAAoCC,EAApC,KACA,EAAsFjX,wBAAS0O,GAA/F,mBAAOwI,EAAP,KAA4CC,GAA5C,KACA,GAAwBC,IAAMpX,UAAS,GAAvC,qBAAOqX,GAAP,MAAaC,GAAb,MAEMC,GAAc,SAACC,EAAOC,GACpB,cAAgBA,GACpBH,IAAQ,EACX,EA+FD,OAxBA/R,qBAAU,WACNqR,EAAUrB,EAAOC,OAAOtU,SAASI,GAAvB,QACVuV,EAAUtB,EAAOC,OAAOtU,SAASI,GAAvB,QACVoV,EAAyBnB,EAAOC,OAAOtU,SAASI,GAAvB,SACzBqV,EAAoBpB,EAAOC,OAAOtU,SAASI,GAAvB,QACvB,GAAE,CAACA,IAEJiE,qBAAU,YAxEV,WACI,GAAgB,mBAAZsC,EAA8B,CAC9B,GAAkB,iBAAdpG,GAAgCgF,IAAUE,GAAqC,IAA5BsC,KAAKwB,IAAI9D,EAAQE,IAAgBA,IAAUE,GAASN,IAAUQ,GAASF,IAAUQ,GAASZ,IAAUQ,GAASN,IAAUQ,EAE1K,YADA4P,EAA+B,sBAGnC,GAAkB,QAAdxV,GAAmD,IAA5BwH,KAAKwB,IAAI9D,EAAQI,IAAgBJ,IAAUQ,GAASJ,IAAUQ,EAErF,YADA0P,EAA+B,8BAGnC,GAAkB,QAAdxV,GAAmD,IAA5BwH,KAAKwB,IAAIhE,EAAQI,IAAgBJ,IAAUQ,GAASJ,IAAUQ,EAErF,YADA4P,EAA+B,yDAGnC,GAAkB,QAAdxV,GAAmD,IAA5BwH,KAAKwB,IAAI5D,EAAQE,IAAgBA,IAAUQ,GAASV,IAAUQ,EAErF,YADA4P,EAA+B,oCAGnC,GAAkB,QAAdxV,GAAmD,IAA5BwH,KAAKwB,IAAIhE,EAAQE,IAAgBF,IAAUQ,GAASN,IAAUQ,EAErF,YADA8P,EAA+B,0DAKnC,GAAkB,iBAAdxV,GAAgCgF,IAAUE,GAASA,IAAUE,GAASA,IAAUE,GAASN,IAAUQ,GAASF,IAAUQ,GAASZ,IAAUQ,GAASN,IAAUQ,EAE5J,YADA8P,GAAuC,oCAAsClO,KAAKwB,IAAI9D,EAAQE,IAGlG,GAAkB,QAAdpF,GAAuBkF,IAAUI,GAASJ,IAAUQ,GAASJ,IAAUQ,EAEvE,YADA4P,GAAuC,4CAA8ClO,KAAKwB,IAAI9D,EAAQI,IAG1G,GAAkB,QAAdtF,GAAuBgF,IAAUI,GAASJ,IAAUQ,GAASJ,IAAUQ,EAEvE,YADA8P,GAAuC,uEAAyElO,KAAKwB,IAAIhE,EAAQI,IAGrI,GAAkB,QAAdpF,GAAuBoF,IAAUE,GAASA,IAAUQ,GAASV,IAAUQ,EAEvE,YADA8P,GAAuC,kDAAoDlO,KAAKwB,IAAI5D,EAAQE,IAGhH,GAAkB,QAAdtF,GAAuBgF,IAAUE,GAASF,IAAUQ,GAASN,IAAUQ,EAEvE,YADAgQ,GAAuC,wEAA0ElO,KAAKwB,IAAIhE,EAAQE,GAGzI,CACDsQ,OAA+BvI,GAC/ByI,QAAuCzI,EAC1C,CA0BGgJ,EACH,GAAE,CAACjR,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOE,EAAOM,EAASpG,IAErE8D,qBAAU,gBAC8BmJ,IAAhCsI,OAAoFtI,IAAxCwI,EAhFhDI,IAAQ,GAoFJC,IAEP,GAAE,CAACP,EAA6BE,IAEjC3R,qBAAU,WACN5D,EAASwT,cACZ,GAAE,CAACtN,EAASJ,EAAQE,EAAQoP,IAGzB,qBAAKjX,UAAU,aAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,+CAEA,0DACA,oGAEA,gEACA,kIACA,uBAAOwE,KAAK,OAAOV,MAAO4C,EAAuBhB,SAAU,SAAC9C,GAAD,OAAOgU,EAAyBhU,EAAE3B,OAAO6C,MAAzC,IAE3D,gFAEA,cAACmS,EAAD,CAAmBnS,MAAOnI,EAAOua,eAlK7C,SAAkBpS,GAAQjC,EAASzF,YAAY0H,GAAQ,EAkKgBsS,KAAM1P,EAAuByP,MAAO,wDAA0D/B,EAAgB,oBAAsBE,EAAgB,MAC/M,cAAC2B,EAAD,CAAmBnS,MAAOlI,EAAOsa,eAlK7C,SAAkBpS,GAAQjC,EAASxF,YAAYyH,GAAQ,EAkKgBsS,KAAM1P,EAAuByP,MAAO,wDAA0DhC,EAAgB,oBAAsBG,EAAgB,MAC/M,cAAC2B,EAAD,CAAmBnS,MAAOjI,EAAOqa,eAlK7C,SAAkBpS,GAAQjC,EAASvF,YAAYwH,GAAQ,EAkKgBsS,KAAM1P,EAAuByP,MAAO,wDAA0D/B,EAAgB,oBAAsBC,EAAgB,MAC/M,cAAC4B,EAAD,CAAmBnS,MAAOhI,EAAOoa,eAlK7C,SAAkBpS,GAAQjC,EAAStF,YAAYuH,GAAQ,EAkKgBsS,KAAM1P,EAAuByP,MAAO,wDAA0DhC,EAAgB,oBAAsBE,EAAgB,MAG/M,gDACA,gGAEA,qDACA,6IAEA,uBAAO0B,QAAQ,SAAf,6CACA,uBAAOvR,KAAK,OAAOkK,GAAG,SAAS5K,MAAO6D,EAAQjC,SAAU,SAAC9C,GAAD,OAAOkU,EAAUlU,EAAE3B,OAAO6C,MAA1B,IACxD,uBACA,uBAAOiS,QAAQ,SAAf,6CACA,uBAAOvR,KAAK,OAAOkK,GAAG,SAAS5K,MAAO+D,EAAQnC,SAAU,SAAC9C,GAAD,OAAOmU,EAAUnU,EAAE3B,OAAO6C,MAA1B,IAExD,sDACA,wQACA,mHAEA,gCACI,uBAAOU,KAAK,QAAQV,MAAM,eAAetI,KAAK,YAAYmK,QAAuB,iBAAdhE,EAA8B+D,SAAU,SAAC9C,GAAD,OAAOoU,EAAapU,EAAE3B,OAAO6C,MAA7B,IAD/G,sCAEI,uBACA,uBAAOU,KAAK,QAAQV,MAAM,MAAMtI,KAAK,YAAYmK,QAAuB,QAAdhE,EAAqB+D,SAAU,SAAC9C,GAAD,OAAOoU,EAAapU,EAAE3B,OAAO6C,MAA7B,IAH7F,4CAII,uBACA,uBAAOU,KAAK,QAAQV,MAAM,MAAMtI,KAAK,YAAYmK,QAAuB,QAAdhE,EAAqB+D,SAAU,SAAC9C,GAAD,OAAOoU,EAAapU,EAAE3B,OAAO6C,MAA7B,IAL7F,4CAMI,uBACA,uBAAOU,KAAK,QAAQV,MAAM,MAAMtI,KAAK,YAAYmK,QAAuB,QAAdhE,EAAqB+D,SAAU,SAAC9C,GAAD,OAAOoU,EAAapU,EAAE3B,OAAO6C,MAA7B,IAP7F,4CAQI,uBACA,uBAAOU,KAAK,QAAQV,MAAM,MAAMtI,KAAK,YAAYmK,QAAuB,QAAdhE,EAAqB+D,SAAU,SAAC9C,GAAD,OAAOoU,EAAapU,EAAE3B,OAAO6C,MAA7B,IAT7F,+CAYA,4DACA,uGAEA,+DACA,oIACA,uBAAOU,KAAK,OAAOV,MAAOmT,EAAkBvR,SAAU,SAAC9C,GAAD,OAAOiU,EAAoBjU,EAAE3B,OAAO6C,MAApC,IAEtD,kFAEe,iBAAdnC,GACG,uOAGJ,iDAAoBgG,KAEpB,cAACsO,EAAD,CAAmBnS,MAAO6C,EAAOuP,eA9M7C,SAAkBpS,GAAQjC,EAASiQ,YAAYhO,GAAQ,EA8MgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2B/B,EAAgB,wBAA0BE,EAAgB,MACjO,cAAC2B,EAAD,CAAmBnS,MAAO+C,EAAOqP,eA9M7C,SAAkBpS,GAAQjC,EAASkQ,YAAYjO,GAAQ,EA8MgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2BhC,EAAgB,wBAA0BG,EAAgB,MACjO,cAAC2B,EAAD,CAAmBnS,MAAOiD,EAAOmP,eA9M7C,SAAkBpS,GAAQjC,EAASmQ,YAAYlO,GAAQ,EA8MgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2B/B,EAAgB,wBAA0BC,EAAgB,MACjO,cAAC4B,EAAD,CAAmBnS,MAAOmD,EAAOiP,eA9M7C,SAAkBpS,GAAQjC,EAASoQ,YAAYnO,GAAQ,EA8MgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2BhC,EAAgB,wBAA0BE,EAAgB,MAEjO,iDAAoBxM,KAEpB,cAACoO,EAAD,CAAmBnS,MAAOqD,EAAO+O,eAjN7C,SAAkBpS,GAAQjC,EAASqQ,YAAYpO,GAAQ,EAiNgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2B/B,EAAgB,wBAA0BE,EAAgB,MACjO,cAAC2B,EAAD,CAAmBnS,MAAOuD,EAAO6O,eAjN7C,SAAkBpS,GAAQjC,EAASsQ,YAAYrO,GAAQ,EAiNgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2BhC,EAAgB,wBAA0BG,EAAgB,MACjO,cAAC2B,EAAD,CAAmBnS,MAAOyD,EAAO2O,eAjN7C,SAAkBpS,GAAQjC,EAASuQ,YAAYtO,GAAQ,EAiNgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2B/B,EAAgB,wBAA0BC,EAAgB,MACjO,cAAC4B,EAAD,CAAmBnS,MAAO2D,EAAOyO,eAjN7C,SAAkBpS,GAAQjC,EAASwQ,YAAYvO,GAAQ,EAiNgBuS,SAAsB,QAAZ1U,GAAiC,QAAZA,EAAmByU,KAAMa,EAAkBd,MAAO,yBAA2BhC,EAAgB,wBAA0BE,EAAgB,MAEjO,oDACA,qIAA6G,uBAC7G,gCAAK,+CAAL,+IACA,uDAAoB,uFACpB,gCAAK,wCAAL,+JACA,uDAAoB,2EACpB,gCAAK,gDAAL,8LACA,uDAAoB,uHACpB,gCAAK,mDAAL,oKACA,uDAAoB,oFACpB,uBAEA,uBAAO0B,QAAQ,UAAf,+BACA,yBAAQva,KAAK,UAAUkT,GAAG,UAAUhJ,SAAU,SAAC9C,GAAD,OA5NtCkB,EA4NwDlB,EAAE3B,OAAO6C,WA5NzDjC,EAAS0Q,YAAczO,IAAnD,IAAoBA,CA4NsC,EAA9C,UACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,qBAAd,mCAEA,uBACA,6HAEa,uBAAZiE,GACG,gCACI,uBAAOgO,QAAQ,8BAAf,2CACA,uBAAOvR,KAAK,SAASkK,GAAG,8BAA8B5K,MAAOmE,EAA6BvC,SAAU,SAAC9C,GAAD,OAvOhFkB,EAuOsHlB,EAAE3B,OAAO6C,WAvOvHjC,EAASsT,YAAkCrR,IAA3F,IAAwCA,CAuOgF,OAI/F,oBAAZiE,GACG,gCACI,uBAAOgO,QAAQ,wBAAf,wCACA,uBAAOvR,KAAK,SAASkK,GAAG,wBAAwB5K,MAAOqE,EAAuBzC,SAAU,SAAC9C,GAAD,OA7O1EkB,EA6O0GlB,EAAE3B,OAAO6C,WA7O3GjC,EAASuT,YAA4BtR,IAA/E,IAAkCA,CA6O0E,OAIhG,cAAC,IAAD,CACI+T,aAAc,CACdC,WAAY,OACZC,SAAU,UAEVR,KAAMA,GACNS,iBAAkB,IAClBC,QA5JR,wCACiCrJ,IAAhCsI,EACG,mFAAqD,4BAAG,4BAAIA,MAA5D,OAEA,wCACyCtI,IAAxCwI,GACG,yGAA2E,4BAAG,4BAAIA,MAAlF,WAuJAc,QAAST,GACTvb,OACA,cAAC,IAAMic,SAAP,UACI,cAAC,IAAD,CACA5K,KAAK,QACL,aAAW,QACXF,MAAM,UACN/M,QAASmX,GAJT,SAMA,cAAC,IAAD,CAAWW,SAAS,oBAO3C,C","file":"static/js/main.213a2ad6.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst decisionMakerSlice = createSlice({\n    name: 'decisionMaker',\n    initialState: {\n        currency: 'USD',\n        dmuTP: 1,\n        dmuFP: 0,\n        dmuFN: 0,\n        dmuTN: 1,\n    },\n    reducers: {\n        changeDecisionMakerCurrency(state, action) {\n            state.currency = action.payload\n        },\n        changeDmuTP(state, action) {\n            state.dmuTP = action.payload\n        },\n        changeDmuFP(state, action) {\n            state.dmuFP = action.payload\n        },\n        changeDmuFN(state, action) {\n            state.dmuFN = action.payload\n        },\n        changeDmuTN(state, action) {\n            state.dmuTN = action.payload\n        },\n    }\n})\n\nconst { actions, reducer } = decisionMakerSlice\n\nexport const { changeDecisionMakerCurrency, changeDmuTP, changeDmuFP, changeDmuFN, changeDmuTN } = actions\n\nexport default reducer\n\n// selectors\nexport const getDecisionMakerCurrency = state => state.decisionMaker.currency\nexport const getDmuTP = state => state.decisionMaker.dmuTP\nexport const getDmuFP = state => state.decisionMaker.dmuFP\nexport const getDmuFN = state => state.decisionMaker.dmuFN\nexport const getDmuTN = state => state.decisionMaker.dmuTN\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst paretoPlotSlice = createSlice({\n    name: 'paretoPlot',\n    initialState: {\n        numThresholds: 11,\n        thresholdTuples: [],\n        subjectsUtility: [],\n        fairnessScores: [],\n        decisionMakerUtility: [],\n        evaluationOfD: [],\n        selectedPoints: [],\n        idOfSelectedPoints: {},\n        incrementalSelectionId: 1,\n        colorOfD: '#fff',\n    },\n    reducers: {\n        changeNumThresholds(state, action) {\n            state.numThresholds = action.payload\n        },\n        changeThresholdTuples(state, action) {\n            state.thresholdTuples = action.payload\n        },\n        changeSubjectsUtility(state, action) {\n            state.subjectsUtility = action.payload\n        },\n        changeFairnessScores(state, action) {\n            state.fairnessScores = action.payload\n        },\n        changeDecisionMakerUtility(state, action) {\n            state.decisionMakerUtility = action.payload\n        },\n        changeEvaluationOfD(state, action) {\n            state.evaluationOfD = action.payload\n        },\n        changeSelectedPoints(state, action) {\n            state.selectedPoints = action.payload\n        },\n        deleteSelectedPoint(state, action) {\n            state.selectedPoints.splice(action.payload.index, 1)\n            delete state.idOfSelectedPoints[action.payload.selectedPoint]\n            if (action.payload.selectedPoint === -1) {\n                state.colorOfD = '#fff'\n            }\n        },\n        addSelectedPoint(state, action) {\n            state.selectedPoints.push(action.payload)\n\n            if (action.payload === -1) {\n                state.colorOfD = 'orange'\n            }\n            state.idOfSelectedPoints[action.payload] = state.incrementalSelectionId\n            state.incrementalSelectionId += 1\n        },\n        deselectAllPoints(state, action) {\n            state.selectedPoints = []\n            state.idOfSelectedPoints = {}\n            state.incrementalSelectionId = 1\n            state.colorOfD = '#fff'\n        },\n        selectEvaluationOfD(state, action) {\n            state.selectedPoints = [-1]\n            state.idOfSelectedPoints[-1] = 1\n            state.incrementalSelectionId = 2\n            state.colorOfD = 'orange'\n        },\n    }\n})\n\nconst { actions, reducer } = paretoPlotSlice\n\nexport const { changeNumThresholds, changeThresholdTuples, changeSubjectsUtility, changeFairnessScores, changeDecisionMakerUtility, changeEvaluationOfD, changeSelectedPoints, deleteSelectedPoint, addSelectedPoint, deselectAllPoints, selectEvaluationOfD } = actions\n\nexport default reducer\n\n// selectors\nexport const getNumThresholds = state => state.paretoPlot.numThresholds\nexport const getThresholdTuples = state => state.paretoPlot.thresholdTuples\nexport const getSubjectsUtility = state => state.paretoPlot.subjectsUtility\nexport const getFairnessScores = state => state.paretoPlot.fairnessScores\nexport const getDecisionMakerUtility = state => state.paretoPlot.decisionMakerUtility\nexport const getEvaluationOfD = state => state.paretoPlot.evaluationOfD\nexport const getSelectedPoints = state => state.paretoPlot.selectedPoints\nexport const getIdOfSelectedPoints = state => state.paretoPlot.idOfSelectedPoints\nexport const getColorOfD = state => state.paretoPlot.colorOfD","import { configureStore } from '@reduxjs/toolkit'\nimport datasetReducer from './dataset'\nimport terminologyReducer from './terminology'\nimport decisionMakerReducer from './decisionMaker'\nimport fairnessScoreReducer from './fairnessScore'\nimport paretoPlotReducer from './paretoPlot'\n\nexport const store = configureStore({\n    reducer: {\n        dataset: datasetReducer,\n        terminology: terminologyReducer,\n        decisionMaker: decisionMakerReducer,\n        fairnessScore: fairnessScoreReducer,\n        paretoPlot: paretoPlotReducer,\n    }\n})","export default __webpack_public_path__ + \"static/media/logo.672e0f8f.ico\";","import React from 'react';\nimport './Hamburger.css';\n\nconst Hamburger = ({isOpen}) => {\n  return (\n    <div className='hamburger'>\n        <div className={isOpen? 'burger burger1 open' : 'burger burger1 closed'}/>\n        <div className={isOpen? 'burger burger2 open' : 'burger burger2 closed'}/>\n        <div className={isOpen? 'burger burger3 open' : 'burger burger3 closed'}/>\n    </div>\n  );\n}\n\nexport default Hamburger;","import React, { useState } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport './Navbar.css';\nimport logo from \"./logo.ico\";\nimport Hamburger from \"../Hamburger\";\n\nconst Navbar = () => {\n  const [hamburgerOpen, setHamburgerOpen] = useState(false);\n  const toggleHamburger = () => {\n    setHamburgerOpen(!hamburgerOpen)\n  }\n  const closeHamburger = () => {\n    setHamburgerOpen(false)\n  }\n  return (\n    <nav className=\"Navbar\">\n      <div className='Navbar-hamburger' onClick={toggleHamburger}>\n        <Hamburger isOpen={hamburgerOpen}/>\n      </div>\n      <Link to=\"/\">\n        <img alt=\"Logo\" className=\"Navbar-logo\" src={logo}/>\n      </Link>\n      <ul className={hamburgerOpen ? 'open' : 'closed'}>\n        <li>\n          <NavLink key=\"audit\" className=\"Navbar-link\" exact to=\"/audit\" activeClassName=\"active\" onClick={closeHamburger}>Audit</NavLink>\n        </li>\n        <li>\n          <NavLink key=\"compas\" className=\"Navbar-link\" exact to=\"/compas\" activeClassName=\"active\" onClick={closeHamburger}>COMPAS Case Study</NavLink>\n        </li>\n        <li>\n          <NavLink key=\"faq\" className=\"Navbar-link\" exact to=\"/faq\" activeClassName=\"active\" onClick={closeHamburger}>FAQ</NavLink>\n        </li>\n        <li>\n          <NavLink key=\"contact\" className=\"Navbar-link\" exact to=\"/contact\" activeClassName=\"active\" onClick={closeHamburger}>Contact</NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from 'react';\nimport './Header.css';\n\nconst Header = ({title}) => {\n    return (\n        <header className=\"Header\">\n          <h1>{title}</h1>\n        </header>\n      );\n}\n\nexport default Header;","import React from \"react\";\nimport Header from '../Header';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <Header title=\"FairnessLab\"/>\n      <div className=\"Content\">\n        <h1>Don't just audit your decisions but their consequences</h1>\n        <p>\n          Welcome to the FairnessLab! This tool is intended to help you audit machine learning models.\n          It takes a group fairness approach, meaning it audits a tool across socio-demographic groups.\n          However, it is built to avoid some of the shortcomings of standard group fairness metrics.\n          Specifically, it aims to help domain experts translate their knowledge into fairness metrics that uniquely fit the context in which the machine learning model is deployed.\n          This sets it apart from existing tools for group fairness audits such as AIF360 or FairLearn.\n          The FairnessLab is fit for both internal audits as well as external audits, but it is currently limited to auditing binary classifiers, so to models that are used to make binary decisions (e.g, whether an applicant will receive a loan or not).\n          If your model is not a binary classifier, you might still be able to use this model if converting your data to a binary setting makes sense for your application or at least for its audit. <a href=\"/FairnessLab/#/faq\">You can read more about that in the FAQ.</a>\n        </p>\n        <h3>Who is this for?</h3>\n        <p>\n          The tool is meant to be accessible to people with limited technical knowledge. We highly encourage everyone to use this tool to audit publically accessible models.\n          What you need for your own audit is mainly domain knowledge:\n          You have to have a good understanding of the context in which the machine learning model is deployed to be able to define an appropriate way of measuring fairness in this context.\n          The FairnessLab will guide you through this process of defining an appropriate fairness metric.\n        </p>\n        <h3>Want to see the FairnessLab in action?</h3>\n        <p>\n          You can find an audit of the well-known COMPAS dataset in the section <a href=\"/FairnessLab/#/compas\">COMPAS Case Study</a>.\n          The dataset was published along with the ProPublica story <a href=\"https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing\" target=\"_blank\" rel=\"noreferrer\">\"Machine Bias\"</a> that started a debate about how to evaluate the fairness of machine learning models.\n          When you follow our audit of COMPAS in the FairnessLab, you will see that there are more ways to evaluate the fairness of the predictions than discussed by ProPublica (which audited COMPAS) and Northpointe (the company that developed COMPAS).\n          Importantly, instutional racism might imply that the consequences of the predictions should be evaluated differently than standard group fairness metrics do.\n          Going through this case study should thus both give you new insights into the COMPAS case and a better understanding of what the FairnessLab is capable of.\n        </p>\n        <h3>Ready to get started?</h3>\n        <p>\n          In the navigation bar you can find the section <a href=\"/FairnessLab/#/audit\">audit</a>. Choose a dataset to explore or upload your own dataset and then follow the instructions to derive a fairness metric that fits the context of the dataset.\n          You can then evaluate the model based on this metric.\n        </p>\n        <h3>Curious to learn more?</h3>\n        <p>\n          This tool has been built by a team of researchers at the Zurich University of Applied Sciences, the University of Zurich and the University of St. Gallen.\n          You can learn more about us and our work <a href=\"https://fair-ai.ch\" target=\"_blank\" rel=\"noreferrer\">on our website</a>.\n          The FairnessLab builds on our theoretical work on group fairness metrics: \"Distributive Justice as the Foundational Premise of Fair ML: Unification, Extension, and Interpretation of Group Fairness Metrics\"<a href=\"https://arxiv.org/abs/2206.02897\" target=\"_blank\" rel=\"noreferrer\">(available on arXiv)</a> and \"A Justice-Based Framework for the Analysis of Algorithmic Fairness-Utility Trade-Offs\" <a href=\"https://arxiv.org/abs/2206.02891\" target=\"_blank\" rel=\"noreferrer\">(available on arXiv)</a>.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import './DatasetSelector.css';\nimport React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport compas_file from '../../data_static/compas/compas.json';\nimport german_file from '../../data_static/credit_lending/german.json';\nimport ACSEmploymentCA_file from '../../data_static/ACS/ACSEmployment_CA.json';\n\nimport { getDatasetSelection, changeDatasetSelection, changeFilteredData, changeUnfilteredData } from '../../store/dataset';\nimport { getJustifier } from '../../store/fairnessScore';\n\nfunction DatasetSelector({}) {\n    const datasets = {\n        'COMPAS': {\n            'file': compas_file\n        },\n        'German': {\n            'file': german_file\n        },\n        'ACSEmploymentCA': {\n            'file': ACSEmploymentCA_file\n        },\n        'Own': {\n            'file': []\n        }\n    }\n\n    const datasetSelection = useSelector(getDatasetSelection)\n    const justifier = useSelector(getJustifier);\n    const dispatch = useDispatch ()\n    function setDatasetSelection(selection) {dispatch(changeDatasetSelection(selection))}\n    function setFilteredData(data) {dispatch(changeFilteredData(data))}\n    function setUnfilteredData(data) {dispatch(changeUnfilteredData(data))}\n\n    const [uploadedData, setUploadedData] = useState([]);\n    const [fileError, setFileError] = useState(false);\n\n    function handleFileJson(e) {\n        const text = (e.target.result)\n        const jsonFile = JSON.parse(text)\n        setUploadedData(jsonFile)\n    }\n\n    function handleFileCSV(e) {\n        const text = (e.target.result)\n        const jsonFile = csvToJSON(text)\n        setUploadedData(jsonFile)\n    }\n\n    // http://techslides.com/convert-csv-to-json-in-javascript\n    function csvToJSON(csv){\n\n        let newLineCharacter = '\\n'\n        if (csv.indexOf('\\r\\n') !== -1) {\n            newLineCharacter = '\\r\\n'\n        } else if (csv.indexOf('\\r') !== -1) {\n            newLineCharacter = '\\r'\n        }\n        let lines = csv.split(newLineCharacter);\n    \n        let result = [];\n    \n        let headers = lines[0].split(\",\");\n    \n        for(var i=1;i<lines.length-1;i++){\n    \n            let obj = {};\n            let currentline=lines[i].split(\",\");\n    \n            for (let j=0;j<headers.length;j++){\n                let value = currentline[j];\n                if (headers[j] === 'Y' || headers[j] === 'D' || headers[j] === 'sensitive-attribute') {\n                    value = parseInt(value)\n                } else if (headers[j] === 'scores') {\n                    value = parseFloat(value)\n                }\n                obj[headers[j]] = value\n            }\n    \n            result.push(obj);\n    \n        }\n    \n        return result;\n    }\n\n    // https://medium.com/@miniceo/front-end-shorts-how-to-read-content-from-the-file-input-in-react-17f49b293909\n    const selectFile = async (e) => {\n        try {\n            if (e?.target?.files.length > 0) {\n                e.preventDefault()\n                const reader = new FileReader()\n                if (e.target.files[0].type === \"application/json\") {\n                    reader.onload = handleFileJson\n                } else if (e.target.files[0].type === \"text/csv\") {\n                    reader.onload = handleFileCSV\n                } else {\n                    throw 'Wrong file type'\n                }\n                reader.readAsText(e.target.files[0])\n            }\n            setFileError(false)\n        } catch (error) {\n            setFilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setUnfilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setFileError(true)\n        }\n    }\n\n    function processData() {\n        let file\n        if (datasetSelection === 'Own') {\n            file = uploadedData\n        } else {\n            file = datasets[datasetSelection]['file']\n        }\n        try {\n            let processedData = splitFileBySensitiveAttributeAndJustifier(file, justifier)\n            let filteredData = processedData['filteredData']\n            let unfilteredData = processedData['unfilteredData']\n            checkDataValidity(filteredData, unfilteredData)\n            setFilteredData(filteredData)\n            setUnfilteredData(unfilteredData)\n            setFileError(false)\n        } catch (error) {\n            setFilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setUnfilteredData({'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]})\n            setFileError(true)\n        }\n    }\n\n    function applyJustifierToRow(row, justifier) {\n        switch(justifier) {\n            case 'no_justifier':\n                return true;\n            case 'y_0':\n                return row['Y'] === 0;\n            case 'y_1':\n                return row['Y'] === 1;\n            case 'd_0':\n                return row['D'] === 0;\n            case 'd_1':\n                return row['D'] === 1;\n        }\n    }\n\n    function splitFileBySensitiveAttributeAndJustifier(file, justifier) {\n        let filteredData = {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]}\n        let unfilteredData = {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]}\n        file.forEach(function (row, index) {\n            let attribute = row['sensitive-attribute']\n            unfilteredData['y'][attribute].push(row['Y'])\n            if (row.hasOwnProperty('scores')) {\n                unfilteredData['scores'][attribute].push(row['scores'])\n            }\n            if (row.hasOwnProperty('D')) {\n                unfilteredData['d'][attribute].push(row['D'])\n            }\n            if (applyJustifierToRow(row, justifier)) {\n                filteredData['y'][attribute].push(row['Y'])\n                if (row.hasOwnProperty('scores')) {\n                    filteredData['scores'][attribute].push(row['scores'])\n                }\n                if (row.hasOwnProperty('D')) {\n                    filteredData['d'][attribute].push(row['D'])\n                }\n            }\n        })\n        return {'filteredData': filteredData, 'unfilteredData': unfilteredData}\n    }\n\n    function checkDataValidity(filteredData, unfilteredData) {\n        let isValid = false;\n        if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['scores'][0].length && filteredData['y'][0].length === filteredData['d'][0].length\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['scores'][1].length && filteredData['y'][1].length === filteredData['d'][1].length\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['scores'][0].length && unfilteredData['y'][0].length === unfilteredData['d'][0].length\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['scores'][1].length && unfilteredData['y'][1].length === unfilteredData['d'][1].length) {\n            isValid = true;\n        } else if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['scores'][0].length && filteredData['d'][0].length === 0\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['scores'][1].length && filteredData['d'][1].length === 0\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['scores'][0].length && unfilteredData['d'][0].length === 0\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['scores'][1].length && unfilteredData['d'][1].length === 0) {\n            isValid = true;\n        } else if (filteredData['y'][0].length !== 0 && filteredData['y'][0].length === filteredData['d'][0].length && filteredData['scores'][0].length === 0\n            && filteredData['y'][1].length !== 0 && filteredData['y'][1].length === filteredData['d'][1].length && filteredData['scores'][1].length === 0\n            && unfilteredData['y'][0].length !== 0 && unfilteredData['y'][0].length === unfilteredData['d'][0].length && unfilteredData['scores'][0].length === 0\n            && unfilteredData['y'][1].length !== 0 && unfilteredData['y'][1].length === unfilteredData['d'][1].length && unfilteredData['scores'][1].length === 0) {\n            isValid = true;\n        }\n        if (!isValid) {\n            throw 'Incorrect format!';\n        }\n    }\n\n    useEffect(() => {\n        processData()\n    }, []);\n    \n    useEffect(() => {\n        processData()\n    }, [datasetSelection, justifier, uploadedData]);\n\n    useEffect(() => {\n        if (uploadedData.length !== 0) {\n            setDatasetSelection('Own')\n        }\n    }, [uploadedData]);\n\n    return(\n        <div className=\"DatasetSelector\">\n        <h1>Dataset</h1>\n        <div>Choose a dataset that you want to audit.</div>\n        <br/>\n        <span value={datasetSelection}>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"COMPAS\" onChange={(e) => setDatasetSelection(e.target.value)} checked={datasetSelection === \"COMPAS\"} /> <b>COMPAS</b>\n            <div className=\"datasetExplanation\">\n                The COMPAS dataset was collected by ProPublica for their article \"Machine Bias.\" We preprocessed the dataset to make it usable for this demo. The predicted scores are the original (decimal) scores from COMPAS.\n                <ul>\n                    <li>Y=0: Was arrested within two years</li>\n                    <li>Y=1: Was not arrested within two years</li>\n                    <li>D=0: Predicted to be rearrested</li>\n                    <li>D=1: Predicted not to be rearrested</li>\n                    <li>Group A: Black</li>\n                    <li>Group B: white</li>\n                </ul>\n                <a href=\"https://github.com/joebaumann/FairnessLab/blob/main/frontend/src/data_static/compas/Compas%20Analysis%20-%20Unifying%20framework.ipynb\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"German\" onChange={(e) => setDatasetSelection(e.target.value)} checked={datasetSelection === \"German\"} /> <b>Credit lending (UCI German Credit)</b>\n            <div className=\"datasetExplanation\">\n                The German Credit dataset is available in the UCI repository. It is a small dataset of German credit loans from the 1970s. The scores have been predicted with a vanilla logistic regression.\n                <ul>\n                    <li>Y=0: Defaulted on the loan</li>\n                    <li>Y=1: Repaid the loan</li>\n                    <li>D=0: Predicted to default</li>\n                    <li>D=1: Predicted to repay</li>\n                    <li>Group A: female</li>\n                    <li>Group B: male</li>\n                </ul>\n                <a href=\"https://github.com/joebaumann/FairnessLab/blob/main/frontend/src/data_static/credit_lending/UCI%20German%20Credit.ipynb\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"ACSEmploymentCA\" onChange={(e) => setDatasetSelection(e.target.value)} checked={datasetSelection === \"ACSEmploymentCA\"} /> <b>ACSEmployment (California)</b>\n            <div className=\"datasetExplanation\">\n                The ACSEmployment dataset is derived from US Census data and is available through the Folktables GitHub repository. It is a large dataset of US adults from California. The task is to predict whether an individual is employed. The scores have been predicted with a vanilla logistic regression.\n                <ul>\n                    <li>Y=0: Is not employed</li>\n                    <li>Y=1: Is employed</li>\n                    <li>D=0: Predicted to be unemployed</li>\n                    <li>D=1: Predicted to be employed</li>\n                    <li>Group A: Black</li>\n                    <li>Group B: white</li>\n                </ul>\n                <a href=\"https://colab.research.google.com/drive/1R_UgSktEOFPccktXDis8VakEFJwuEvmd?usp=sharing\" target=\"_blank\" rel=\"noreferrer\">You can find the notebook here to see how we prepared the data.</a>\n            </div>\n            <br/>\n            <input name=\"datasetSelection\" type=\"radio\" value=\"Own\" onChange={(e) => setDatasetSelection(e.target.value)} checked={datasetSelection === \"Own\"} /> <b>Choose your own dataset:</b>\n        </span>\n        <input type=\"file\" name=\"file\" onChange={selectFile} />\n        <div className=\"datasetExplanation\">\n            If you want to upload your own dataset as a CSV file, please make sure that it has <ul>\n            <li>a column named 'Y' (only 0 and 1 allowed)</li>\n            <li>a column named 'sensitive-attribute' (only 0 and 1 allowed)</li>\n            <li>a column named 'scores' (values have to be between 0 and 1) and/or a column named 'D' (only 0 and 1 allowed)</li>\n            </ul>\n            You can also upload a JSON file with an array of objects that contain the previously mentioned attributes\n        </div>\n        <br/>\n        {datasetSelection === 'Own' && uploadedData.length === 0 && fileError &&\n            <div className=\"datasetExplanation\">Error: Please upload a dataset to audit or choose one of the predefined datasets.</div>\n        }\n        {datasetSelection === 'Own' && uploadedData.length !== 0 && fileError &&\n            <div className=\"datasetExplanation\">Error: The feature labels of the selected file don't match the template. Please upload a dataset with the right feature labels.</div>\n        }\n        </div>\n    )\n}\n  \nexport default DatasetSelector;","import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport pf from 'pareto-frontier';\nimport Plot from 'react-plotly.js';\nimport './ParetoPlot.css';\nimport '../../config';\n\nimport { getDatasetSelection, getFilteredData, getUnfilteredData } from '../../store/dataset';\nimport { getDecisionMakerCurrency, getDmuFN, getDmuFP, getDmuTN, getDmuTP } from '../../store/decisionMaker';\nimport { getSubjectsCurrency, getSuTP1, getSuFP1, getSuFN1, getSuTN1, getSuTP2, getSuFP2, getSuFN2, getSuTN2, getGroup1, getGroup2, getPattern, getSufficientarianismThreshold, getPrioritarianismWeight, getFairnessScoreDescription } from '../../store/fairnessScore';\nimport { addSelectedPoint, changeDecisionMakerUtility, changeEvaluationOfD, changeFairnessScores, changeNumThresholds, changeSubjectsUtility, changeThresholdTuples, deleteSelectedPoint, deselectAllPoints, getColorOfD, getDecisionMakerUtility, getEvaluationOfD, getFairnessScores, getNumThresholds, getSelectedPoints, getThresholdTuples, selectEvaluationOfD } from '../../store/paretoPlot';\n\nfunction ParetoPlot({colors, setColors}) {\n    \n    const dispatch = useDispatch ()\n    function setNumThresholds(value) {dispatch(changeNumThresholds(value))}\n    function setThresholdTuples(value) {dispatch(changeThresholdTuples(value))}\n    function setSubjectsUtility(value) {dispatch(changeSubjectsUtility(value))}\n    function setFairnessScores(value) {dispatch(changeFairnessScores(value))}\n    function setDecisionMakerUtility(value) {dispatch(changeDecisionMakerUtility(value))}\n    function setEvaluationOfD(value) {dispatch(changeEvaluationOfD(value))}\n\n    const datasetSelection = useSelector(getDatasetSelection)\n    const decisionMakerCurrency = useSelector(getDecisionMakerCurrency)\n    const dmuTP = useSelector(getDmuTP);\n    const dmuFP = useSelector(getDmuFP);\n    const dmuFN = useSelector(getDmuFN);\n    const dmuTN = useSelector(getDmuTN);\n    const suTP1 = useSelector(getSuTP1)\n    const suFP1 = useSelector(getSuFP1);\n    const suFN1 = useSelector(getSuFN1);\n    const suTN1 = useSelector(getSuTN1);\n    const suTP2 = useSelector(getSuTP2);\n    const suFP2 = useSelector(getSuFP2);\n    const suFN2 = useSelector(getSuFN2);\n    const suTN2 = useSelector(getSuTN2);\n    const group1 = useSelector(getGroup1);\n    const group2 = useSelector(getGroup2);\n    const pattern = useSelector(getPattern);\n    const numThresholds = useSelector(getNumThresholds);\n    const sufficientarianismThreshold = useSelector(getSufficientarianismThreshold);\n    const prioritarianismWeight = useSelector(getPrioritarianismWeight);\n    const filteredData = useSelector(getFilteredData);\n    const unfilteredData = useSelector(getUnfilteredData);\n    const fairnessScoreDescription = useSelector(getFairnessScoreDescription)\n    \n    const fairnessScores = useSelector(getFairnessScores);\n    const decisionMakerUtility = useSelector(getDecisionMakerUtility);\n    const thresholdTuples = useSelector(getThresholdTuples);\n    const evaluationOfD = useSelector(getEvaluationOfD);\n    const selectedPoints = useSelector(getSelectedPoints);\n    const colorOfD = useSelector(getColorOfD)\n\n    const [paretoOptimalPointsX, setParetoOptimalPointsX] = useState([]);\n    const [paretoOptimalPointsY, setParetoOptimalPointsY] = useState([]);\n    const [xAxisLabel, setXAxisLabel] = useState(null);\n\n    function getRandomColor() {\n        // get a random color while avoiding yellow and colors that are too light\n        let hue = ~~(360 * Math.random())\n        while (hue >= 51 && hue <= 60) {\n            hue = ~~(360 * Math.random())\n        }\n        return `hsla(${hue},80%,50%,0.8)`\n    }\n\n    function deselectAllPointsAndD() {\n        dispatch(deselectAllPoints())\n        setColors(Array(numThresholds * numThresholds).fill('#ffffff'))\n    }\n\n    function patternMapper(pattern) {\n        let combination = null\n        if (pattern === 'egalitarianism') {\n            combination = absoluteDifference\n        }\n        if (pattern === 'maximin') {\n            combination = Math.min\n        } \n        if (pattern === 'prioritarianism') {\n            combination = prioritarianSum\n        }\n        if (pattern === 'sufficientarianism') {\n            combination = aboveThreshold\n        }\n        return combination\n    }\n\n    function countConfusion(decisions_array, decisions_value, y_array, y_value) {\n        let count = 0;\n        for(let i = 0; i < decisions_array.length; i++){\n            if(decisions_array[i] === decisions_value && y_array[i] === y_value)\n                count++;\n        }\n        return count\n    }\n\n    function utility(scores, threshold, y, parameter_calculation) {\n        let decisions = []\n        for(let i = 0; i < scores.length; i++){\n            if(scores[i] >= threshold)\n                decisions.push(1)\n            else\n                decisions.push(0)\n        }\n        return calculateUtilityFromDecisions(decisions, y, parameter_calculation);\n    }\n\n    function calculateUtilityFromDecisions(decisions, y, parameter_calculation) {\n        let tp = countConfusion(decisions, 1, y, 1);\n        let fp = countConfusion(decisions, 1, y, 0);\n        let fn = countConfusion(decisions, 0, y, 1);\n        let tn = countConfusion(decisions, 0, y, 0);\n    \n        let [w_tp, w_fp, w_fn, w_tn] = parameter_calculation;\n        let value = w_tp * tp + w_fp * fp + w_fn * fn + w_tn * tn;\n    \n        return value;\n    }\n\n    function averageUtility(scores, threshold, y, parameter_calculation) {\n        let value = utility(scores, threshold, y, parameter_calculation)\n        value = value / scores.length\n        return value\n    }\n\n    function threshold(scores, threshold, y, parameter_calculation) {\n        return threshold\n    }\n\n    function sum(value_A, value_B) {\n        let sum = value_A + value_B\n        return sum\n    }\n\n    function absoluteDifference(value_A, value_B) {\n        let diff = Math.abs(value_A - value_B)\n        return diff\n    }\n\n    function prioritarianSum(value_A, value_B) {\n        if (value_A <= value_B) {\n            return value_A * prioritarianismWeight + value_B\n        }\n        return value_A + value_B * prioritarianismWeight\n    }\n\n    function aboveThreshold(value_A, value_B) {\n        let groups_above_threshold = 0\n        if (value_A >= sufficientarianismThreshold)\n            groups_above_threshold++\n        if (value_B >= sufficientarianismThreshold)\n            groups_above_threshold++\n        return groups_above_threshold\n    }\n\n    function tuple(value_A, value_B) {\n        return [value_A, value_B]\n    }\n\n    function calculateValues(numThresholds, scores, y, calculate_group_value, parameter_calculation) {\n        let values = []\n        for (let r = 0; r < numThresholds; r++) {\n            let t = toThreshold(r, numThresholds)\n            let value = calculate_group_value(scores, t, y, parameter_calculation)\n            values.push(value)\n        }\n        return values\n    }\n\n    function combineThresholds(numThresholds, scores_A, scores_B, y_A, y_B, calculate_group_value, combine_group_values, parameter_calculation_1, parameter_calculation_2) {\n        let values_A = calculateValues(numThresholds, scores_A, y_A, calculate_group_value, parameter_calculation_1)\n        let values_B = calculateValues(numThresholds, scores_B, y_B, calculate_group_value, parameter_calculation_2)\n        let values = []\n        for (let r_A = 0; r_A < numThresholds; r_A++) {\n            for (let r_B = 0; r_B < numThresholds; r_B++) {\n                let value = combine_group_values(values_A[r_A], values_B[r_B])\n                values.push(value)\n            }\n        }\n        return values\n    }\n\n    function toThreshold(r, numThresholds) {\n        let threshold = (1/(numThresholds-1)) * r\n        return Math.round((threshold + Number.EPSILON) * 100) / 100\n    }\n\n    function updateThresholdCalculations() {\n        if (filteredData['scores'][0].length === 0 && filteredData['scores'][1].length === 0) {\n            setThresholdTuples([])\n            setDecisionMakerUtility([])\n            setFairnessScores([])\n            setSubjectsUtility([])\n            return 0\n        } else {\n            setThresholdTuples(combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], threshold, tuple))\n            setDecisionMakerUtility(combineThresholds(numThresholds, unfilteredData['scores'][0], unfilteredData['scores'][1], unfilteredData['y'][0], unfilteredData['y'][1], utility, sum, [dmuTP, dmuFP, dmuFN, dmuTN], [dmuTP, dmuFP, dmuFN, dmuTN]))\n            let combineFunction = patternMapper(pattern)\n            let fairnessScores = combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], averageUtility, combineFunction, [suTP1, suFP1, suFN1, suTN1], [suTP2, suFP2, suFN2, suTN2])\n            if (pattern === \"egalitarianism\") {\n                fairnessScores = fairnessScores.map(function(s, i) {\n                    return -s;\n                });\n            }\n            setFairnessScores(fairnessScores)\n            setSubjectsUtility(combineThresholds(numThresholds, filteredData['scores'][0], filteredData['scores'][1], filteredData['y'][0], filteredData['y'][1], averageUtility, tuple, [suTP1, suFP1, suFN1, suTN1], [suTP2, suFP2, suFN2, suTN2]))\n        }\n    }\n\n    function updateEvaluationOfD() {\n        let evaluationOfD = []\n        if (filteredData['d'][0].length !== 0 || filteredData['d'][1].length !== 0) {\n            let decisionMakerUtility_A = calculateUtilityFromDecisions(unfilteredData['d'][0], unfilteredData['y'][0], [dmuTP, dmuFP, dmuFN, dmuTN])\n            let decisionMakerUtility_B = calculateUtilityFromDecisions(unfilteredData['d'][1], unfilteredData['y'][1], [dmuTP, dmuFP, dmuFN, dmuTN])\n            let decisionMakerUtility = sum(decisionMakerUtility_A, decisionMakerUtility_B)\n            let fairnessValue_A = calculateUtilityFromDecisions(filteredData['d'][0], filteredData['y'][0], [suTP1, suFP1, suFN1, suTN1]) / filteredData['d'][0].length\n            let fairnessValue_B = calculateUtilityFromDecisions(filteredData['d'][1], filteredData['y'][1], [suTP2, suFP2, suFN2, suTN2]) / filteredData['d'][1].length\n            let combineFunction = patternMapper(pattern)\n            let fairnessScore = combineFunction(fairnessValue_A, fairnessValue_B)\n            if (pattern === \"egalitarianism\") {\n                fairnessScore = -fairnessScore\n            }\n            evaluationOfD = [fairnessScore, decisionMakerUtility, [fairnessValue_A, fairnessValue_B]]\n        }\n        setEvaluationOfD(evaluationOfD)\n    }\n   \n    function updateParetoFront() {\n        let points = fairnessScores.map(function(f, i) {\n            return [f, decisionMakerUtility[i]];\n        });\n        let paretoOptimalPoints = pf.getParetoFrontier(points)\n        let paretoX = paretoOptimalPoints.map(function(p, i) {\n            return p[0];\n        })\n        setParetoOptimalPointsX(paretoX)\n        let paretoY = paretoOptimalPoints.map(function(p, i) {\n            return p[1];\n        })\n        setParetoOptimalPointsY(paretoY)\n    }\n\n    useEffect(() => {\n        deselectAllPointsAndD()\n        setNumThresholds(11)\n        updateThresholdCalculations()\n        updateEvaluationOfD()\n        if (filteredData['d'][0].length !== 0 || filteredData['d'][1].length !== 0) {\n            dispatch(selectEvaluationOfD())\n        }\n    }, [datasetSelection, filteredData, unfilteredData]);\n\n    useEffect(() => {\n        updateThresholdCalculations()\n        updateEvaluationOfD()\n    }, [suTP1, suFP1, suFN1, suTN1, suTP2, suFP2, suFN2, suTN2, dmuTP, dmuFP, dmuFN, dmuTN, pattern, sufficientarianismThreshold, prioritarianismWeight, numThresholds]);\n\n    useEffect(() => {\n        updateParetoFront()\n    }, [fairnessScores, decisionMakerUtility]);\n\n    useEffect(() => {\n        deselectAllPointsAndD()\n    }, [numThresholds]);\n\n    useEffect(() => {\n        updateParetoFront()\n    }, []);\n\n    return (\n        <div className='ParetoPlot'>\n            <h2>Pareto plot</h2>\n            With the decision maker utility and a fairness metric specified, we can take a simple approach to show the trade-offs between these metrics: We go through different decision rules and calculate the metrics associated with each of them, i.e., the decision maker's utility and the fairness score. For each decision rule, we then plot the associated decision maker’s utility and fairness score in a 2D plot. We use group-specific thresholds as decision rules. Select threshold rules that you want to compare by clicking on the points in the plot.\n            <br/><br/>\n            <b>Decision maker's utility</b>: Higher is better (total utility for the {unfilteredData['y'][0].length + unfilteredData['y'][1].length} individuals in the dataset)\n            <br/>\n            <b>Fairness score</b>: Higher is better\n\n            \n            <br/><br/>\n            {filteredData['scores'][0].length !== 0 && filteredData['scores'][1].length !== 0 &&\n                <ThresholdInput numThresholds={numThresholds} setNumThresholds={setNumThresholds}/>\n            }\n            <br/><br/>\n            <div>\n                <button onClick={deselectAllPointsAndD}>\n                    Deselect all points\n                </button>\n            </div>\n\n            <Plot\n                data={[\n                {\n                    x: paretoOptimalPointsX,\n                    y: paretoOptimalPointsY,\n                    mode: 'lines',\n                    name: 'Pareto front',\n                    marker: {color: '#a61b62'}\n                },\n                {\n                    x: fairnessScores,\n                    y: decisionMakerUtility,\n                    mode: 'markers',\n                    visible: filteredData['scores'][0].length !== 0 && filteredData['scores'][1].length !== 0,\n                    marker: {\n                        color: colors,\n                        size: 7,\n                        line: {\n                            color: '#000000',\n                            width: 1\n                        }\n                    },\n                    type: 'scatter',\n                    hovertemplate: '<b>Decision maker\\'s utility</b>: %{y:.2f}' +\n                    '<br><b>Fairness score</b>: %{x:.4f}<br>' +\n                    `<b>Thresholds</b>: ${group1}: %{text[0]}, ${group2}: %{text[1]}`,\n                    text: thresholdTuples,\n                    name: 'Decision rule'\n                },\n                {\n                    x: [evaluationOfD[0]],\n                    y: [evaluationOfD[1]],\n                    mode: 'markers',\n                    visible: evaluationOfD.length !== 0,\n                    marker: {\n                        color: colorOfD,\n                        size: 15,\n                        symbol: 'diamond',\n                        line: {\n                            color: '#000000',\n                            width: 1\n                        }\n                    },\n                    type: 'scatter',\n                    hovertemplate: '<b>Decisions from dataset (column D)</b>' +\n                    '<br><b>Decision maker\\'s utility</b>: %{y:.2f}' +\n                    '<br><b>Fairness score</b>: %{x:.4f}<br>',\n                    name: 'Decisions from dataset (column D)'\n                },\n                ]}\n\n                layout={ {\n                    width: 1000,\n                    height: 800,\n                    xaxis: { title: `Fairness score<br>${fairnessScoreDescription}`},\n                    yaxis: { title: `Decision maker's utility (in ${decisionMakerCurrency.replace('*', '')})` },\n                    hovermode:'closest',\n                    responsive: true\n                } }\n\n                onClick={(data) => {\n                    var newColors = [...colors];\n                    // Orange point (from D) gets index -1, every other points gets their regular index\n                    let selectedPoint = -1\n                    if (data.points[0].data.x.length > 1) {\n                        selectedPoint = data.points[0].pointIndex\n                    }\n                    var indexOfSelectedPoint = selectedPoints.indexOf(selectedPoint)\n                    if (indexOfSelectedPoint > -1) {\n                        dispatch(deleteSelectedPoint({'index': indexOfSelectedPoint, 'selectedPoint': selectedPoint}))\n                        if (selectedPoint !== -1) {\n                            newColors[selectedPoint] = '#fff'\n                        }\n                    } else {\n                        // select point and add to list\n                        dispatch(addSelectedPoint(selectedPoint))\n                        if (selectedPoint !== -1) {\n                            newColors[selectedPoint] = getRandomColor()\n                        }\n                    }\n                    setColors(newColors)\n                }}\n            />\n        </div>\n      );\n}\n\nfunction ThresholdInput({numThresholds, setNumThresholds}) {\n    const [currentNumThresholds, setCurrentNumThresholds] = useState(numThresholds)\n    return (\n        <>\n        <label>Number of thresholds: How many thresholds do you want to test for each group? (min: 2, max: 101)</label>\n        <input type=\"text\" min=\"2\" max=\"101\" value={currentNumThresholds} onChange={(e) => setCurrentNumThresholds(e.target.value)} onBlur={(e) => {\n            if (e.target.value < 2) {\n                setCurrentNumThresholds(2)\n            }\n            if (e.target.value > 101) {\n                setCurrentNumThresholds(101)\n            }\n            setNumThresholds(currentNumThresholds)\n        }}/>\n        </>\n      );\n}\n\nexport default ParetoPlot;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './SelectedPointsTable.css';\nimport { getGroup1, getGroup2 } from '../../store/fairnessScore';\nimport { getDecisionMakerCurrency } from '../../store/decisionMaker';\nimport { getDecisionMakerUtility, getEvaluationOfD, getFairnessScores, getIdOfSelectedPoints, getSelectedPoints, getThresholdTuples } from '../../store/paretoPlot';\n\n\nfunction SelectedPointsTable({}) {\n  const group1 = useSelector(getGroup1);\n  const group2 = useSelector(getGroup2);\n  const decisionMakerCurrency = useSelector(getDecisionMakerCurrency);\n  const fairnessScores = useSelector(getFairnessScores);\n  const decisionMakerUtility = useSelector(getDecisionMakerUtility);\n  const thresholdTuples = useSelector(getThresholdTuples);\n  const evaluationOfD = useSelector(getEvaluationOfD);\n  const selectedPoints = useSelector(getSelectedPoints);\n  const idOfSelectedPoints = useSelector(getIdOfSelectedPoints);\n  \n  function renderTableData() {\n    \n    return selectedPoints.map(i => {\n      const id = idOfSelectedPoints[i]\n      const thresholdGroup0 = i===-1? undefined : thresholdTuples[i][0]\n      const thresholdGroup1 = i===-1? undefined : thresholdTuples[i][1]\n      const decisionMaker = i===-1? evaluationOfD[1] : decisionMakerUtility[i]\n      const fairnessScore = i===-1? evaluationOfD[0] : fairnessScores[i]\n      return (\n        <tr key={id}>\n          <td>{id}</td>\n          {thresholdGroup0 !== undefined ?\n            <td>{group1}: {thresholdGroup0.toFixed(2)}; {group2}: {thresholdGroup1.toFixed(2)}</td>\n            : <td>Decision rule from dataset</td>\n          }\n          <td>{decisionMaker} {decisionMakerCurrency}</td>\n          <td>{fairnessScore?.toFixed(4)}</td>\n        </tr>\n      )\n    })\n  }\n    \n  return (\n    <div>\n        <h2 id='title'>Selected Decision Rules</h2>\n        <table id='selectedPoints'>\n        <tbody>\n          <tr>\n            <th>Selection</th>\n            <th>Thresholds</th>\n            <th>Decision maker's utility</th>\n            <th>Fairness score</th>\n          </tr>\n          {renderTableData()}\n        </tbody>\n        </table>\n    </div>\n  )\n}\n\n\n\nexport default SelectedPointsTable;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport './ScoreDistribution.css';\nimport { getGroup1, getGroup2 } from '../../store/fairnessScore';\nimport { getSelectedPoints, getThresholdTuples } from '../../store/paretoPlot';\nimport { getUnfilteredData } from '../../store/dataset';\n\nconst ScoreDistribution = ({colors}) => {\n  const group1 = useSelector(getGroup1);\n  const group2 = useSelector(getGroup2);\n  const thresholdTuples = useSelector(getThresholdTuples)\n  const unfilteredData = useSelector(getUnfilteredData);\n  const selectedPoints = useSelector(getSelectedPoints);\n\n  var indices_of_Y0_for_group1 = [];\n  var indices_of_Y1_for_group1 = [];\n  for(let i = 0; i < unfilteredData['y'][0].length; i++)\n      if (unfilteredData['y'][0][i] === 0)\n        indices_of_Y0_for_group1.push(i);\n      else\n        indices_of_Y1_for_group1.push(i);\n  const group1_Y1 = [];\n  indices_of_Y1_for_group1.forEach(i => group1_Y1.push(unfilteredData['scores'][0][i]));\n  const group1_Y0 = [];\n  indices_of_Y0_for_group1.forEach(i => group1_Y0.push(unfilteredData['scores'][0][i]));\n  const trace_group1_Y1 = {\n    y: group1_Y1,\n    type: \"histogram\",\n    name: 'Y=1',\n    marker: {\n      color: \"rgba(4, 111, 184, 0.4)\",\n      line: {\n        color: 'rgba(4, 111, 184, 1)',\n        width: 1\n      }\n    },\n  };\n  const trace_group1_Y0 = {\n    y: group1_Y0,\n    type: \"histogram\",\n    name: 'Y=0',\n    marker: {\n        color: \"rgba(98, 182, 239, 0.4)\",\n        line: {\n          color: 'rgba(98, 182, 239, 1)',\n          width: 1\n        }\n    },\n  };\n  const dataGroup1 = [trace_group1_Y1, trace_group1_Y0]\n  \n\n  var indices_of_Y0_for_group2 = [];\n  var indices_of_Y1_for_group2 = [];\n  for(let i = 0; i < unfilteredData['y'][1].length; i++)\n      if (unfilteredData['y'][1][i] === 0)\n        indices_of_Y0_for_group2.push(i);\n      else\n        indices_of_Y1_for_group2.push(i);\n  const group2_Y1 = [];\n  indices_of_Y1_for_group2.forEach(i => group2_Y1.push(unfilteredData['scores'][1][i]));\n  const group2_Y0 = [];\n  indices_of_Y0_for_group2.forEach(i => group2_Y0.push(unfilteredData['scores'][1][i]));\n  const trace_group2_Y1 = {\n      y: group2_Y1,\n      type: \"histogram\",\n      name: 'Y=1',\n      marker: {\n          color: \"rgba(186, 94, 2, 0.4)\",\n          line: {\n            color: 'rgba(186, 94, 2, 1)',\n            width: 1\n          }\n      },\n  };\n  const trace_group2_Y0 = {\n    y: group2_Y0,\n    type: \"histogram\",\n    name: 'Y=0',\n    marker: {\n        color: \"rgba(255, 177, 101, 0.4)\",\n        line: {\n          color: 'rgba(255, 177, 10, 1)',\n          width: 1\n        }\n    },\n  };\n  const dataGroup2 = [trace_group2_Y1, trace_group2_Y0]\n\n  let threshold_lines1 = []\n  let threshold_lines2 = []\n\n  var linelength = 2\n  for (let s=0; s < selectedPoints.length; s++) {\n    var selectedPoint = selectedPoints[s]\n    if (selectedPoint !== -1) {\n      var color = colors[selectedPoint]\n      var threshold1 = {\n        type: 'line',\n        xref: 'paper',\n        y0: thresholdTuples[selectedPoint][0],\n        x0: 0.05,\n        y1: thresholdTuples[selectedPoint][0],\n        x1: 1,\n        line: {\n          color: color,\n          width: 3,\n          dash: linelength + \"px,20px\"\n        }\n      }\n      threshold_lines1.push(threshold1)\n      \n      var threshold2 = {\n        type: 'line',\n        xref: 'paper',\n        y0: thresholdTuples[selectedPoint][1],\n        x0: 0,\n        y1: thresholdTuples[selectedPoint][1],\n        x1: 0.95,\n        line: {\n          color: color,\n          width: 3,\n          dash: linelength + \"px,20px\"\n        }\n      }\n      threshold_lines2.push(threshold2)\n      linelength += 2\n    }\n\n  }\n\n  const layoutGroup1 = {\n    width: 400,\n    height: 400,\n    margin: {\n      l: 50,\n      r: 0,\n      b: 50,\n      t: 80,\n      pad: 4\n    },\n    title: group1,\n    barmode: \"overlay\",\n    shapes: threshold_lines1,\n    xaxis: {\n        type: 'histogram',\n        title: 'Frequency',\n        autorange: 'reversed',\n    },\n    yaxis: {\n      title: 'Probability score',\n      range: [-0.05, 1.05]\n    },\n    showlegend: true,\n    legend: {\n      x: 0,\n      y: 1\n    }\n  };\n\n  const layoutGroup2 = {\n    width: 400,\n    height: 400,\n    margin: {\n      l: 0,\n      r: 50,\n      b: 50,\n      t: 80,\n      pad: 4\n    },\n    title: group2,\n    barmode: \"overlay\",\n    shapes: threshold_lines2,\n    xaxis: {\n        type: 'histogram',\n        title: 'Frequency'\n    },\n    yaxis: {\n      range: [-0.05, 1.05]\n    },\n    showlegend: true,\n    legend: {\n      x: 1,\n      y: 1\n    }\n  };\n\n  return (\n    <div className='ScoreDistribution'>\n      <h2>Score distribution</h2>\n      {unfilteredData['scores'][0].length === 0 && unfilteredData['scores'][1].length === 0 ?\n        <>This plot is only available if the audited dataset contains predicted scores. The current dataset does not have a column named 'scores.'</>\n        :\n        <>\n          Individuals with probability scores above or equal to their group-specific threshold receive D=1. The others receive D=0.\n          <br/>\n          <Plot className='LeftPlot'\n              data={dataGroup1}\n              layout={layoutGroup1}\n          />\n          <Plot className='RightPlot'\n              data={dataGroup2}\n              layout={layoutGroup2}\n          />\n        </>\n      \n      }\n    </div>\n    );\n}\n\nexport default ScoreDistribution;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Plot from 'react-plotly.js';\nimport './SubjectsUtility.css';\nimport { getFairnessScoreDescription, getGroup1, getGroup2 } from '../../store/fairnessScore';\nimport { getEvaluationOfD, getFairnessScores, getIdOfSelectedPoints, getSelectedPoints, getSubjectsUtility } from '../../store/paretoPlot';\n\n\nconst SubjectsUtility = ({colors}) => {\n    const group1 = useSelector(getGroup1);\n    const group2 = useSelector(getGroup2);\n    const subjectsUtility = useSelector(getSubjectsUtility);\n    const fairnessScores = useSelector(getFairnessScores);\n    const evaluationOfD = useSelector(getEvaluationOfD);\n    const selectedPoints = useSelector(getSelectedPoints);\n    const idOfSelectedPoints = useSelector(getIdOfSelectedPoints);\n\n    let tracesUtilities = []\n    let tracesFairnessScores = []\n    selectedPoints.forEach(i => {\n        let traceUtilities = {\n            x: [`${group1} (${idOfSelectedPoints[i]})`, `${group2} (${idOfSelectedPoints[i]})`],\n            y: i===-1? evaluationOfD[2] : subjectsUtility[i],\n            marker:{\n              color: i===-1? ['orange', 'orange'] : [colors[i], colors[i]]\n            },\n            type: 'bar',\n            name: 'Selection ' + idOfSelectedPoints[i]\n        };\n        tracesUtilities.push(traceUtilities)\n        let traceFairnessScores = {\n            x: [`Fairness score (${idOfSelectedPoints[i]})`],\n            y: i===-1? [evaluationOfD[0]] : [fairnessScores[i]],\n            marker:{\n              color: i===-1? ['orange'] : [colors[i]]\n            },\n            type: 'bar',\n            name: 'Selection ' + idOfSelectedPoints[i]\n        };\n        tracesFairnessScores.push(traceFairnessScores)\n    })\n    \n    \n    return (\n        <div className='SubjectsUtility'>\n            <h2>Fairness score</h2>\n            {selectedPoints.length === 0 && \n            <b>Select at least one point in the Pareto plot below to see something.<br/><br/></b>\n            }\n            <span>Here, you can see a direct comparison of the fairness scores (for the points selected in the Pareto plot below). The higher the score, the better the decision rule aligns with the configured fairness metric. The lower the score, the worse its alignment with the fairness metric is.</span>\n            <Plot\n                data={tracesFairnessScores}\n\n                layout = {\n                    {\n                        title: `Fairness score`,\n                        xaxis: {\n                            automargin: true,\n                        }\n                    }\n\n                }\n            />\n            <h2>Decision subjects' utilities</h2>\n            <span>Here you can see a direct comparison of the decision subjects' average utilities (for the points selected in the Pareto plot below).</span>\n            <br/>\n            <Plot\n                data={tracesUtilities}\n\n                layout = {\n                    {\n                        title: 'Decision subjects\\' utilities',\n                        xaxis: {\n                            automargin: true,\n                        }\n                    }\n\n                }\n            />\n        </div>\n      );\n}\n\nexport default SubjectsUtility;","import './Audit.css';\nimport React, {useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from '../Header';\nimport DatasetSelector from '../DatasetSelector';\nimport Terminology from '../Terminology';\nimport Configuration from '../Configuration';\nimport ParetoPlot from '../ParetoPlot';\nimport SelectedPointsTable from '../SelectedPointsTable';\nimport ScoreDistribution from '../ScoreDistribution';\nimport SubjectsUtility from '../SubjectsUtility';\nimport { getFairnessScoreDescription } from '../../store/fairnessScore';\n\nfunction Audit(props) {\n  // the datasetSelectionCounter is incremented every time the datasetSelection or the justifier changes\n  // this makes sure that the decision subject utilities are recalculated after the justifier has been applied to the dataset\n  const [colors, setColors] = useState(Array(11 * 11).fill('#4e87ad'));\n  const fairnessScoreDescription = useSelector(getFairnessScoreDescription);\n\n  return(\n    <div className=\"Audit\">\n      <Header title=\"Audit\"/>\n      <div className=\"Content\">\n        <DatasetSelector/>\n        <Terminology/>\n        <Configuration/>\n        <h1>Audit</h1>\n        <h2>Resulting fairness metric</h2>\n        In the audit, we will use the fairness metric that you defined with your inputs above. Specifically, we will look at the following fairness metric:\n        <div><i>{fairnessScoreDescription}</i></div>\n        <SubjectsUtility colors={colors} />\n        <ParetoPlot colors={colors} setColors={setColors} />\n        <SelectedPointsTable />\n        <ScoreDistribution colors={colors} />\n      </div>\n    </div>\n  )\n}\n  \nexport default Audit;","import React from \"react\";\nimport { useDispatch } from 'react-redux';\nimport Header from '../Header';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport './Pages.css';\nimport { changeDmuFN, changeDmuFP, changeDmuTN, changeDmuTP } from \"../../store/decisionMaker\";\nimport { changeJustifier, changePattern, changeSuFN1, changeSuFN2, changeSuFP1, changeSuFP2, changeSuTN1, changeSuTN2, changeSuTP1, changeSuTP2 } from \"../../store/fairnessScore\";\nimport { changeDatasetSelection } from \"../../store/dataset\";\n\nfunction COMPAS() {\n\n  const dispatch = useDispatch ()\n\n  function compasaudit() {\n    dispatch(changeDatasetSelection('COMPAS'))\n    dispatch(changeDmuTP(1))\n    dispatch(changeDmuFP(-1))\n    dispatch(changeDmuFN(-1))\n    dispatch(changeDmuTN(1))\n    dispatch(changeSuTP1(0))\n    dispatch(changeSuFP1(-1))\n    dispatch(changeSuFN1(0))\n    dispatch(changeSuTN1(0))\n    dispatch(changeSuTP2(0))\n    dispatch(changeSuFP2(-1))\n    dispatch(changeSuFN2(0))\n    dispatch(changeSuTN2(0))\n    dispatch(changeJustifier('y_0'))\n    dispatch(changePattern('egalitarianism'))\n  }\n\n  function compasaudit1() {\n    compasaudit()\n    dispatch(changeSuFP1(-1))\n  }\n\n  function compasaudit2() {\n    compasaudit()\n    dispatch(changeSuFP1(-2))\n  }\n\n  return (\n    <div>\n      <Header title=\"COMPAS case study\"/>\n      <div className=\"Content\">\n        <p>\n          Use these buttons to follow our COMPAS use case study:\n        </p>\n        Replication of <a href='https://www.propublica.org/article/machine-bias-risk-assessments-in-criminal-sentencing'  target='_blank'>ProPublica's audit</a>:\n        <Button component={Link} to=\"/audit\" onClick={compasaudit1}>\n          Audit COMPAS \"the old way\"\n        </Button>\n        <br/>\n        New insights:\n        <Button component={Link} to=\"/audit\" onClick={compasaudit2}>\n          Audit COMPAS \"the new way\"\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default COMPAS;","export default __webpack_public_path__ + \"static/media/pareto_explanation.94c7707c.png\";","import React from \"react\";\nimport Header from '../Header';\nimport './Pages.css'\nimport pareto_explanation from './pareto_explanation.png';\n\nfunction FAQ() {\n    return (\n        <div>\n        <Header title=\"FAQ\"/>\n\n        <div className=\"Content\">\n            <h3>What format should the uploaded dataset be in?</h3>\n            <p>\n            You can upload your dataset as either a CSV or a JSON file.\n            You will need the following attributes:\n            </p>\n            <ul>\n                <li><b>sensitive-attribute</b>: <i>binary (0 or 1)</i>, defines the salient groups that you want to compare. These could be groups based on gender, race, age, disability status, sexual orientation etc.</li>\n                <li><b>Y</b>: <i>binary (0 or 1)</i>, the target variable, what the model tries to predict</li>\n                <li><b>scores</b>: <i>continuous variable (between 0 and 1)</i>, what the model predicts as the probability of the individual having Y=1</li>\n                <li><b>D</b>: <i>binary (0 or 1)</i>, the decision of the model</li>\n            </ul>\n            <p>\n            Whether you upload a CSV or JSON file, you can always add more attributes to your file, but only the ones listed above will be considered. The order of the columns doesn't matter.\n            </p>\n            <p>\n            If you want to upload your dataset as a <b>CSV</b> file, make sure to use a comma as the separator. The structure should look as follows:\n            </p>\n            <table>\n                <thead>\n                    <tr>\n                        <th>sensitive-attribute</th>\n                        <th>Y</th>\n                        <th>scores</th>\n                        <th>D</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>0.7</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>0</td>\n                        <td>1</td>\n                        <td>0.8</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>0</td>\n                        <td>0.6</td>\n                        <td>1</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>\n                If you want to upload a <b>JSON</b> file, make sure it looks like the following with one object per individual:\n            </p>\n            <p className=\"JSON\">\n                [&#123;'sensitive-attribute': 1, 'Y': 1, 'scores': 0.7, 'D': 1&#125;, &#123;'sensitive-attribute': 0, 'Y': 1, 'scores': 0.8, 'D': 1&#125;, &#123;'sensitive-attribute': 1, 'Y': 0, 'scores': 0.6, 'D': 1&#125;]\n            </p>\n\n            <h3 id=\"binary-classifier\">My data is not from a binary classifier. Can I still use this auditing tool?</h3>\n            <p>\n                Potentially, yes. You will have to you convert your to a binary dataset, then you can use the FairnessLab. However, you should only do this if this makes sense in the context of your application.\n                With ProPublica's COMPAS audit, for example, one could argue that it makes sense to audit the system through the lens of binary scores: high scores and low scores.\n            </p>\n\n            <h3>I don't have the scores that the model outputs ('scores'), only the final decisions ('D'). How does this affect the audit?</h3>\n            <p>\n                In that case, the Pareto plot only shows one point: the utility of the decision-maker and the fairness score for the decisions in the dataset (the column 'D').\n                In the future, we will add more points that you can compare your decisions to, such as a decision rule that assigns D=1 to everyone or a perfect predictor, where D=Y.\n            </p>\n\n            <h3>What does the Pareto plot show?</h3>\n            <p>\n                What the Pareto plot shows depends on what data you provide.\n            </p>\n            <p>\n                If 'scores' are available: the FairnessLab explores possible decision rules based on these scores, i.e., rules that turn a given score into a binary decision. It is known that decision rules that achieve the maximum possible utility for decision makers while leading to equal expected utilities across groups take the form of group-specific thresholds. Therefore, the FairnessLab tests different thresholds on the scores. Specifically, it goes over <i>n</i> thresholds for group 1 and over <i>n</i> thresholds for group 2, where <i>n</i> is the number of thresholds specified by the user. The combination of these thresholds leads to <i>n^2</i> threshold combinations. For each such threshold combination, the FairnessLab calculates the resulting fairness score and the utility of the decision maker. This is then plotted in a plot where the y-axis represents the decision-maker’s utility. The x-axis represents the fairness score, where fairness scores are adjusted in a way such that a higher scores mean the audited system is better aligned with the configured fairness metric. Each possible combination of thresholds is represented by a dot in the Pareto plot.\n            </p>\n            <p>\n                If 'D' is available: The decisions represented by 'D' are evaluated with respect to their fairness and their utility for the decision maker. This is then shown as a diamond in the Pareto plot. Together with the dots from the 'scores,' this allows for a comparison of the current decision rule with other possible threshold-based decision rules.\n            </p>\n            <img src={pareto_explanation} alt=\"Visualization of how the Pareto plot is created: For every group, n thresholds are tested. For each the resulting n*n threshold combinations, the FairnessLab calculates the resulting decision maker’s utility and the fairness score.\" width=\"500\" height=\"250\"/>\n\n            <h3>What makes the FairnessLab different from tools like Aequitas, AIF360 or FairLearn?</h3>\n            <p>\n                Compared to existing fairness audit tools (such as Fairlearn, AIF365, Aequitas), the overall structure of our tool is quite similar: It takes in a dataset, which represents previously taken decisions of the audited system. The tool evaluates the audited system’s fairness with respect to metrics which have been chosen by the user. The FairnessLab deviates from existing tools in the fairness metrics it offers to its users: We believe that fairness is highly contextual and so evaluating fairness is a context-specific task and there is no one size fits all solution. We developed a theoretical approach, which allows for the definition of context-specific fairness metrics. The FairnessLab is an implementation of this approach.\n            </p>\n        </div>\n    </div>\n  );\n}\n\nexport default FAQ;","import React from \"react\";\nimport Header from '../Header';\nimport './Pages.css'\n\nexport function Contact() {\n  return (\n    <div>\n      <Header title=\"Contact\"/>\n        <div className=\"Content\">\n        <p>\n          For questions, comments or feedback on this tool, please contact the developers: Corinna Hertweck [<a href=\"mailto:corinna.hertweck@uzh.ch\">corinna.hertweck@uzh.ch</a>] and Joachim Baumann [<a href=\"mailto:baumann@ifi.uzh.ch\">baumann@ifi.uzh.ch</a>].\n        </p>\n        <p>The code for this tool is publicly available on <a href=\"https://github.com/joebaumann/FairnessLab\" target=\"_blank\">GitHub</a>.</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;","import React from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport './Pages.css'\n\nexport function Error404() {\n  let location = useLocation();\n  return (\n    <div>\n      <h1>Resource not found at {location.pathname}</h1>\n      <p>\n        <Link to=\"/\">Go home</Link>\n      </p>\n    </div>\n  );\n}\n","import './App.css';\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home/Home\";\nimport Audit from \"./Components/Audit\";\nimport COMPAS from \"./Components/OtherPages/COMPAS\";\nimport FAQ from \"./Components/OtherPages/FAQ\";\nimport Contact from \"./Components/OtherPages/Contact\";\nimport { Error404 } from \"./Components/OtherPages/ErrorPages\";\n\nfunction App() {\n\n  return (\n    <div>\n      <HashRouter>\n\n        <Navbar/>\n\n        <div className=\"Page\">\n          <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route path=\"/audit\" component={Audit}/>\n            <Route path=\"/compas\" component={COMPAS}/>\n            <Route path=\"/faq\" component={FAQ}/>\n            <Route path=\"/contact\" component={Contact}/>\n            <Route path=\"*\" component={Error404}/>\n          </Switch>\n        </div>\n\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst datasetSlice = createSlice({\n    name: 'dataset',\n    initialState: {\n        datasetSelection: 'COMPAS',\n        filteredData: {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]},\n        unfilteredData: {'y': [[],[]], 'scores': [[],[]], 'd': [[],[]]},\n    },\n    reducers: {\n        changeDatasetSelection(state, action) {\n            state.datasetSelection = action.payload\n        },\n        changeFilteredData(state, action) {\n            state.filteredData = action.payload\n        },\n        changeUnfilteredData(state, action) {\n            state.unfilteredData = action.payload\n        },\n    }\n})\n\nconst { actions, reducer } = datasetSlice\n\nexport const { changeDatasetSelection, changeFilteredData, changeUnfilteredData } = actions\n\nexport default reducer\n\n// selectors\nexport const getDatasetSelection = state => state.dataset.datasetSelection\nexport const getFilteredData = state => state.dataset.filteredData\nexport const getUnfilteredData = state => state.dataset.unfilteredData","import { createSlice } from '@reduxjs/toolkit'\n\nconst paretoPlotSlice = createSlice({\n    name: 'terminology',\n    initialState: {\n        y0description: 'Y=0',\n        y1description: 'Y=1',\n        d0description: 'D=0',\n        d1description: 'D=1',\n    },\n    reducers: {\n        changeY0Description(state, action) {\n            state.y0description = action.payload\n        },\n        changeY1Description(state, action) {\n            state.y1description = action.payload\n        },\n        changeD0Description(state, action) {\n            state.d0description = action.payload\n        },\n        changeD1Description(state, action) {\n            state.d1description = action.payload\n        },\n    }\n})\n\nconst { actions, reducer } = paretoPlotSlice\n\nexport const { changeY0Description, changeY1Description, changeD0Description, changeD1Description } = actions\n\nexport default reducer\n\n// selectors\nexport const getY0Description = state => state.terminology.y0description\nexport const getY1Description = state => state.terminology.y1description\nexport const getD0Description = state => state.terminology.d0description\nexport const getD1Description = state => state.terminology.d1description","import { createSlice } from '@reduxjs/toolkit'\n\nconst fairnessScoreSlice = createSlice({\n    name: 'fairnessScore',\n    initialState: {\n        currency: 'USD',\n        suTP1: 1,\n        suFP1: 1,\n        suFN1: 0,\n        suTN1: 0,\n        suTP2: 1,\n        suFP2: 1,\n        suFN2: 0,\n        suTN2: 0,\n        group1: 'group 1',\n        group2: 'group 2',\n        justifier: 'no_justifier',\n        pattern: 'egalitarianism',\n        sufficientarianismThreshold: 0.5,\n        prioritarianismWeight: 2,\n        fairnessScoreDescription: '',\n    },\n    reducers: {\n        changeSubjectsCurrency(state, action) {\n            state.currency = action.payload\n        },\n        changeSuTP1(state, action) {\n            state.suTP1 = action.payload\n        },\n        changeSuFP1(state, action) {\n            state.suFP1 = action.payload\n        },\n        changeSuFN1(state, action) {\n            state.suFN1 = action.payload\n        },\n        changeSuTN1(state, action) {\n            state.suTN1 = action.payload\n        },\n        changeSuTP2(state, action) {\n            state.suTP2 = action.payload\n        },\n        changeSuFP2(state, action) {\n            state.suFP2 = action.payload\n        },\n        changeSuFN2(state, action) {\n            state.suFN2 = action.payload\n        },\n        changeSuTN2(state, action) {\n            state.suTN2 = action.payload\n        },\n        changeGroup1(state, action) {\n            state.group1 = action.payload\n        },\n        changeGroup2(state, action) {\n            state.group2 = action.payload\n        },\n        changeJustifier(state, action) {\n            state.justifier = action.payload\n        },\n        changePattern(state, action) {\n            state.pattern = action.payload\n        },\n        changeSufficientarianismThreshold(state, action) {\n            state.sufficientarianismThreshold = action.payload\n        },\n        changePrioritarianismWeight(state, action) {\n            state.prioritarianismWeight = action.payload\n        },\n        updateFairnessScoreDescription(state, action) {\n            if (state.pattern === 'egalitarianism') {\n                state.fairnessScoreDescription = `Negative absolute difference in average utility of ${state.group1} and ${state.group2} (so 0 is perfect equality)`\n            } else if (state.pattern === 'maximin') {\n                state.fairnessScoreDescription = `Minimum average utility of ${state.group1} and ${state.group2} (in ${state.currency.replace('*', '')})`\n            } else if (state.pattern === 'sufficientarianism') {\n                state.fairnessScoreDescription += `Number of groups with average utility above threshold (min: 0 groups, max: 2 groups)`\n            } else if (state.pattern === 'prioritarianism') {\n                state.fairnessScoreDescription = `Weighted sum of average utilities of ${state.group1} and ${state.group2} (in ${state.currency.replace('*', '')})`\n            }\n        }\n    }\n})\n\nconst { actions, reducer } = fairnessScoreSlice\n\nexport const { changeSubjectsCurrency, changeSuTP1, changeSuFP1, changeSuFN1, changeSuTN1, changeSuTP2, changeSuFP2, changeSuFN2, changeSuTN2, changeGroup1, changeGroup2, changeJustifier, changePattern, changeSufficientarianismThreshold, changePrioritarianismWeight, updateFairnessScoreDescription } = actions\n\nexport default reducer\n\n// selectors\nexport const getSubjectsCurrency = state => state.fairnessScore.currency\nexport const getSuTP1 = state => state.fairnessScore.suTP1\nexport const getSuFP1 = state => state.fairnessScore.suFP1\nexport const getSuFN1 = state => state.fairnessScore.suFN1\nexport const getSuTN1 = state => state.fairnessScore.suTN1\nexport const getSuTP2 = state => state.fairnessScore.suTP2\nexport const getSuFP2 = state => state.fairnessScore.suFP2\nexport const getSuFN2 = state => state.fairnessScore.suFN2\nexport const getSuTN2 = state => state.fairnessScore.suTN2\nexport const getGroup1 = state => state.fairnessScore.group1\nexport const getGroup2 = state => state.fairnessScore.group2\nexport const getJustifier = state => state.fairnessScore.justifier\nexport const getPattern = state => state.fairnessScore.pattern\nexport const getSufficientarianismThreshold = state => state.fairnessScore.sufficientarianismThreshold\nexport const getPrioritarianismWeight = state => state.fairnessScore.prioritarianismWeight\nexport const getFairnessScoreDescription = state => state.fairnessScore.fairnessScoreDescription\n","module.exports = global.config = {\n    datasets: {\n        'COMPAS': {\n            'group1': 'Black',\n            'group2': 'white',\n            'd0': 'released (D=0)',\n            'd1': 'detained (D=1)',\n            'y0': 'an innocent individual (Y=0)',\n            'y1': 'a recidivist (Y=1)',\n            'unit_DM': '',\n            'unit_DS': 'unit of well-being'\n            \n        },\n        'German': {\n            'group1': 'female',\n            'group2': 'male',\n            'd0': 'rejected (D=0)',\n            'd1': 'a loan (D=1)',\n            'y0': 'an individual who defaulted on the loan (Y=0)',\n            'y1': 'an individual who repaid the loan (Y=1)',\n            'unit_DM': 'CHF',\n            'unit_DS': 'CHF'\n        },\n        'ACSEmploymentCA': {\n            'group1': 'Black',\n            'group2': 'white',\n            'd0': 'predicted to be unemployed (D=0)',\n            'd1': 'predicted to be employed (D=1)',\n            'y0': 'an unemployed individual (Y=0)',\n            'y1': 'an employed individual (Y=1)',\n            'unit_DM': '',\n            'unit_DS': ''\n        },\n        'Own': {\n            'group1': 'group A',\n            'group2': 'group B',\n            'd0': 'negative decision (D=0)',\n            'd1': 'positive decision (D=1)',\n            'y0': 'an individual of type Y=0',\n            'y1': 'an individual of type Y=1',\n            'unit_DM': 'USD',\n            'unit_DS': 'USD'\n        }\n    }\n};","import React, {useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Terminology.css';\nimport '../../config';\n\nimport { getDatasetSelection } from '../../store/dataset';\nimport { changeD0Description, changeD1Description, changeY0Description, changeY1Description, getD0Description, getD1Description, getY0Description, getY1Description } from '../../store/terminology';\n\nfunction Terminology({}) {\n    const datasetSelection = useSelector(getDatasetSelection)\n    const y0description = useSelector(getY0Description)\n    const y1description = useSelector(getY1Description)\n    const d0description = useSelector(getD0Description)\n    const d1description = useSelector(getD1Description)\n\n    const dispatch = useDispatch ()\n    function sety0description(currency) {dispatch(changeY0Description(currency))}\n    function sety1description(currency) {dispatch(changeY1Description(currency))}\n    function setd0description(currency) {dispatch(changeD0Description(currency))}\n    function setd1description(currency) {dispatch(changeD1Description(currency))}\n    \n    useEffect(() => {\n        setd0description(global.config.datasets[datasetSelection]['d0']);\n        setd1description(global.config.datasets[datasetSelection]['d1']);\n        sety0description(global.config.datasets[datasetSelection]['y0']);\n        sety1description(global.config.datasets[datasetSelection]['y1']);\n    }, [datasetSelection]);\n    \n    return (\n        <div className='ParetoPlot'>\n            <h1>Terminology</h1>\n            <b>Y</b>: The actual outcome, also known as the \"ground truth\"; not known at prediction time.\n            <br/><br/>\n            <b>Label the two possible outcomes:</b>\n            <br/>\n            <label htmlFor=\"y1description\">Y=1</label>\n            <input type=\"text\" id=\"y1description\" value={y1description} onChange={(e) => sety1description(e.target.value)} style={{width: \"500px\"}}/>\n            <br/>\n            <label htmlFor=\"y0description\">Y=0</label>\n            <input type=\"text\" id=\"y0description\" value={y0description} onChange={(e) => sety0description(e.target.value)} style={{width: \"500px\"}}/>\n            <br/><br/>\n            <b>D</b>: The decision in question; is trying to predict Y.\n            <br/><br/>\n            <b>Label the two possible decisions:</b>\n            <br/>\n            <label htmlFor=\"d1description\">D=1</label>\n            <input type=\"text\" id=\"d1description\" value={d1description} onChange={(e) => setd1description(e.target.value)} style={{width: \"500px\"}}/>\n            <br/>\n            <label htmlFor=\"d0description\">D=0</label>\n            <input type=\"text\" id=\"d0description\" value={d0description} onChange={(e) => setd0description(e.target.value)} style={{width: \"500px\"}}/>\n            <br/><br/>\n            \n            <b>Decision maker</b>: The people or organization designing the algorithm, deciding on its design and thereby ultimately taking the decisions in question.\n            <br/>\n            <b>Decision subjects</b>: The people subjected to the decisions of the algorithm. They may or may not be aware that this algorithm is being deployed and used to make decisions about them.\n        </div>\n      );\n}\n\nexport default Terminology;","import React, {useState, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Configuration.css';\nimport '../../config';\n\nimport Snackbar from '@mui/material/Snackbar';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { getDatasetSelection } from '../../store/dataset';\nimport { getDecisionMakerCurrency, changeDecisionMakerCurrency, changeDmuTP, changeDmuFP, changeDmuFN, changeDmuTN, getDmuTP, getDmuFP, getDmuFN, getDmuTN } from '../../store/decisionMaker';\nimport { getSubjectsCurrency, changeSubjectsCurrency, getSuTP1, changeSuTP1, getSuFP1, changeSuFP1, getSuFN1, changeSuFN1, getSuTN1, changeSuTN1, getSuTP2, changeSuTP2, getSuFP2, changeSuFP2, getSuFN2, changeSuFN2, getSuTN2, changeSuTN2, getGroup1, changeGroup1, getGroup2, changeGroup2, getPattern, changePattern, changeJustifier, getJustifier, getSufficientarianismThreshold, getPrioritarianismWeight, changeSufficientarianismThreshold, changePrioritarianismWeight, updateFairnessScoreDescription, getFairnessScoreDescription } from '../../store/fairnessScore';\nimport { getD0Description, getD1Description, getY0Description, getY1Description } from '../../store/terminology';\n\nfunction Configuration({}) {\n\n    const dispatch = useDispatch ()\n    function setDecisionMakerCurrency(currency) {dispatch(changeDecisionMakerCurrency(currency))}\n    function setDmuTP(value) {dispatch(changeDmuTP(value))}\n    function setDmuFP(value) {dispatch(changeDmuFP(value))}\n    function setDmuFN(value) {dispatch(changeDmuFN(value))}\n    function setDmuTN(value) {dispatch(changeDmuTN(value))}\n    function setSubjectsCurrency(currency) {dispatch(changeSubjectsCurrency(currency))}\n    function setSuTP1(value) {dispatch(changeSuTP1(value))}\n    function setSuFP1(value) {dispatch(changeSuFP1(value))}\n    function setSuFN1(value) {dispatch(changeSuFN1(value))}\n    function setSuTN1(value) {dispatch(changeSuTN1(value))}\n    function setSuTP2(value) {dispatch(changeSuTP2(value))}\n    function setSuFP2(value) {dispatch(changeSuFP2(value))}\n    function setSuFN2(value) {dispatch(changeSuFN2(value))}\n    function setSuTN2(value) {dispatch(changeSuTN2(value))}\n    function setGroup1(value) {dispatch(changeGroup1(value))}\n    function setGroup2(value) {dispatch(changeGroup2(value))}\n    function setJustifier(value) {dispatch(changeJustifier(value))}\n    function setPattern(value) {dispatch(changePattern(value))}\n    function setSufficientarianismThreshold(value) {dispatch(changeSufficientarianismThreshold(value))}\n    function setPrioritarianismWeight(value) {dispatch(changePrioritarianismWeight(value))}\n\n    const datasetSelection = useSelector(getDatasetSelection)\n    const decisionMakerCurrency = useSelector(getDecisionMakerCurrency)\n    const subjectsCurrency = useSelector(getSubjectsCurrency)\n    const y0description = useSelector(getY0Description)\n    const y1description = useSelector(getY1Description)\n    const d0description = useSelector(getD0Description)\n    const d1description = useSelector(getD1Description)\n    const dmuTP = useSelector(getDmuTP);\n    const dmuFP = useSelector(getDmuFP);\n    const dmuFN = useSelector(getDmuFN);\n    const dmuTN = useSelector(getDmuTN);\n    const suTP1 = useSelector(getSuTP1)\n    const suFP1 = useSelector(getSuFP1);\n    const suFN1 = useSelector(getSuFN1);\n    const suTN1 = useSelector(getSuTN1);\n    const suTP2 = useSelector(getSuTP2);\n    const suFP2 = useSelector(getSuFP2);\n    const suFN2 = useSelector(getSuFN2);\n    const suTN2 = useSelector(getSuTN2);\n    const group1 = useSelector(getGroup1);\n    const group2 = useSelector(getGroup2);\n    const justifier = useSelector(getJustifier);\n    const pattern = useSelector(getPattern);\n    const sufficientarianismThreshold = useSelector(getSufficientarianismThreshold);\n    const prioritarianismWeight = useSelector(getPrioritarianismWeight);\n\n    const [correspondingFairnessMetric, setCorrespondingFairnessMetric] = useState(undefined);\n    const [correspondingWeightedFairnessMetric, setCorrespondingWeightedFairnessMetric] = useState(undefined);\n    const [open, setOpen] = React.useState(false);\n    \n    const handleClose = (event, reason) => {\n        if (\"clickaway\" === reason) return;\n        setOpen(false);\n    };\n    \n    const handleSnackbar = () => {\n        setOpen(true);\n    };\n\n    function updateCorrespondsToExistingMetric() {\n        if (pattern === 'egalitarianism') {\n            if (justifier === 'no_justifier' && suTP1 === suFP1 && Math.abs(suFP1 - suFN1) === 1 && suFN1 === suTN1 && suTP1 === suTP2 && suTN1 === suTN2 && suFP1 === suFP2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('statistical parity')\n                return\n            }\n            if (justifier === 'y_0' && Math.abs(suFP1 - suTN1) === 1 && suFP1 === suFP2 && suTN1 === suTN2) {\n                setCorrespondingFairnessMetric('false positive rate parity')\n                return\n            }\n            if (justifier === 'y_1' && Math.abs(suTP1 - suFN1) === 1 && suTP1 === suTP2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('true positive rate parity AKA equality of opportunity')\n                return\n            }\n            if (justifier === 'd_0' && Math.abs(suFN1 - suTN1) === 1 && suTN1 === suTN2 && suFN1 === suFN2) {\n                setCorrespondingFairnessMetric('negative predictive value parity')\n                return\n            }\n            if (justifier === 'd_1' && Math.abs(suTP1 - suFP1) === 1 && suTP1 === suTP2 && suFP1 === suFP2) {\n                setCorrespondingFairnessMetric('positive predictive value parity AKA predictive parity')\n                return\n            }\n            // config is not equivalent to any existing metric\n            // check if it is a weighted version of an existing metric\n            if (justifier === 'no_justifier' && suTP1 === suFP1 && suFP1 !== suFN1 && suFN1 === suTN1 && suTP1 === suTP2 && suTN1 === suTN2 && suFP1 === suFP2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('statistical parity multiplied by ' + Math.abs(suFP1 - suFN1));\n                return\n            }\n            if (justifier === 'y_0' && suFP1 !== suTN1 && suFP1 === suFP2 && suTN1 === suTN2) {\n                setCorrespondingWeightedFairnessMetric('false positive rate parity multiplied by ' + Math.abs(suFP1 - suTN1));\n                return\n            }\n            if (justifier === 'y_1' && suTP1 !== suFN1 && suTP1 === suTP2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('true positive rate parity AKA equality of opportunity multiplied by ' + Math.abs(suTP1 - suFN1));\n                return\n            }\n            if (justifier === 'd_0' && suFN1 !== suTN1 && suTN1 === suTN2 && suFN1 === suFN2) {\n                setCorrespondingWeightedFairnessMetric('negative predictive value parity multiplied by ' + Math.abs(suFN1 - suTN1));\n                return\n            }\n            if (justifier === 'd_1' && suTP1 !== suFP1 && suTP1 === suTP2 && suFP1 === suFP2) {\n                setCorrespondingWeightedFairnessMetric('positive predictive value parity AKA predictive parity multiplied by ' + Math.abs(suTP1 - suFP1));\n                return\n            }\n        }\n        setCorrespondingFairnessMetric(undefined)\n        setCorrespondingWeightedFairnessMetric(undefined)\n    }\n\n    function getSnackbarMessage() {\n        return (\n            <>\n            {correspondingFairnessMetric !== undefined ?\n                <div>The fairness metric you selected corresponds to <b><i>{correspondingFairnessMetric}</i></b>.</div>\n                :\n                <>\n                {correspondingWeightedFairnessMetric !== undefined &&\n                    <div>The fairness metric you selected corresponds to a weighted version of <b><i>{correspondingWeightedFairnessMetric}</i></b>.</div>\n                }\n                </>\n            }\n            </>\n        )\n    }\n\n    useEffect(() => {\n        setGroup1(global.config.datasets[datasetSelection]['group1'])\n        setGroup2(global.config.datasets[datasetSelection]['group2'])\n        setDecisionMakerCurrency(global.config.datasets[datasetSelection]['unit_DM'])\n        setSubjectsCurrency(global.config.datasets[datasetSelection]['unit_DS'])\n    }, [datasetSelection]);\n    \n    useEffect(() => {\n        updateCorrespondsToExistingMetric()\n    }, [suTP1, suFP1, suFN1, suTN1, suTP2, suFP2, suFN2, suTN2, pattern, justifier])\n\n    useEffect(() => {\n        if (correspondingFairnessMetric !== undefined | correspondingWeightedFairnessMetric !== undefined) {\n            handleSnackbar()\n        }\n        else {\n            handleClose()\n        }\n    }, [correspondingFairnessMetric, correspondingWeightedFairnessMetric]);\n\n    useEffect(() => {\n        dispatch(updateFairnessScoreDescription())\n    }, [pattern, group1, group2, subjectsCurrency]);\n\n    return (\n        <div className='ParetoPlot'>\n            <div className='ParetoConfiguration'>\n                <h1>Configuration</h1>\n\n                <h2>Decision maker's utility</h2>\n                <b>How much utility does the decision maker derive from the decisions?</b>\n\n                <h3>Currency of the decision maker</h3>\n                <span>In what unit do you want to measure the utility of the decision maker (e.g., USD, well-being)?</span>\n                <input type=\"text\" value={decisionMakerCurrency} onChange={(e) => setDecisionMakerCurrency(e.target.value)}/>\n\n                <h3>Quantification of the decision maker's utility</h3>\n\n                <UtilityQuantifier value={dmuTP} setSliderValue={setDmuTP} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y1description + \" that is getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={dmuFP} setSliderValue={setDmuFP} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y0description + \" that is getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={dmuFN} setSliderValue={setDmuFN} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y1description + \" that is getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={dmuTN} setSliderValue={setDmuTN} unit={decisionMakerCurrency} label={\"How much utility does the decision-maker derive from \" + y0description + \" that is getting \" + d0description + \"?\"}/>\n\n\n                <h2>Fairness score</h2>\n                <b>How should the utility of the decision subjects be distributed?</b>\n                \n                <h3>Sensitive attribute</h3>\n                <div>What are the two groups that you want to compare and that are defined by the 'sensitive-attribute' column?</div>\n\n                <label htmlFor=\"group1\">Group A (sensitive-attribute=0)</label>\n                <input type=\"text\" id=\"group1\" value={group1} onChange={(e) => setGroup1(e.target.value)}/>\n                <br/>\n                <label htmlFor=\"group2\">Group B (sensitive-attribute=1)</label>\n                <input type=\"text\" id=\"group2\" value={group2} onChange={(e) => setGroup2(e.target.value)}/>\n\n                <h3>Claim differentiator</h3>\n                <p>Do the socio-demographic groups have the same moral claims to utility or is it only a subgroup of them? For example, one could argue that the subgroup of people with Y=1 is deserves a higher (or lower) utility than people with Y=0.</p>\n                <div>Define the subgroup in which people are deserving of the same amount of utility:</div>\n\n                <div>\n                    <input type=\"radio\" value=\"no_justifier\" name=\"justifier\" checked={justifier === 'no_justifier'} onChange={(e) => setJustifier(e.target.value)} /> Everyone deserves the same utility\n                    <br/>\n                    <input type=\"radio\" value=\"y_0\" name=\"justifier\" checked={justifier === 'y_0'} onChange={(e) => setJustifier(e.target.value)} /> People with Y=0 deserve the same utility\n                    <br/>\n                    <input type=\"radio\" value=\"y_1\" name=\"justifier\" checked={justifier === 'y_1'} onChange={(e) => setJustifier(e.target.value)} /> People with Y=1 deserve the same utility\n                    <br/>\n                    <input type=\"radio\" value=\"d_0\" name=\"justifier\" checked={justifier === 'd_0'} onChange={(e) => setJustifier(e.target.value)} /> People with D=0 deserve the same utility\n                    <br/>\n                    <input type=\"radio\" value=\"d_1\" name=\"justifier\" checked={justifier === 'd_1'} onChange={(e) => setJustifier(e.target.value)} /> People with D=1 deserve the same utility\n                </div>\n\n                <h3>Decision subjects' utility</h3>\n                <div>How much utility do the decision subjects derive from the decisions?</div>\n\n                <h4>Currency of decision subjects</h4>\n                <span>In what unit do you want to measure the utility of the decision subject (e.g., USD, well-being)?</span>\n                <input type=\"text\" value={subjectsCurrency} onChange={(e) => setSubjectsCurrency(e.target.value)}/>\n\n                <h4>Quantification of the decision subjects' utility</h4>\n\n                {justifier !== 'no_justifier' &&\n                    <div>Having a justifier means that the utility of some individuals is not considered when evaluating the fairness of the model. Sliders are disabled if their value is not considered for the evaluation.</div>\n                }\n\n                <h5>For the group: {group1}</h5>\n\n                <UtilityQuantifier value={suTP1} setSliderValue={setSuTP1} disabled={justifier===\"y_0\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFP1} setSliderValue={setSuFP1} disabled={justifier===\"y_1\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFN1} setSliderValue={setSuFN1} disabled={justifier===\"y_0\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={suTN1} setSliderValue={setSuTN1} disabled={justifier===\"y_1\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d0description + \"?\"}/>\n\n                <h5>For the group: {group2}</h5>\n\n                <UtilityQuantifier value={suTP2} setSliderValue={setSuTP2} disabled={justifier===\"y_0\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFP2} setSliderValue={setSuFP2} disabled={justifier===\"y_1\" || justifier===\"d_0\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d1description + \"?\"}/>\n                <UtilityQuantifier value={suFN2} setSliderValue={setSuFN2} disabled={justifier===\"y_0\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y1description + \" derive from getting \" + d0description + \"?\"}/>\n                <UtilityQuantifier value={suTN2} setSliderValue={setSuTN2} disabled={justifier===\"y_1\" || justifier===\"d_1\"} unit={subjectsCurrency} label={\"How much utility does \" + y0description + \" derive from getting \" + d0description + \"?\"}/>\n                \n                <h3>Pattern of Justice</h3>\n                <div>How should the utility be distributed between the two groups (defined by the sensitive attribute)?</div><br/>\n                <div><b>Egalitarianism</b>: Fairness is if individuals in both groups are expected to derive the same utility from the decision rule. Equality in itself is valued.</div>\n                <div>→ Measured as: <i>How close are the average utilities to being equal?</i></div>\n                <div><b>Maximin</b>: Fairness is if the average utility of the worst-off group is maximized by the decision rule. Inequalities are okay if they benefit the worst-off group.</div>\n                <div>→ Measured as: <i>What’s the lowest average utility?</i></div>\n                <div><b>Prioritarianism</b>: Fairness is if the aggregated utility of the groups is maximized by the decision rule, with the utility of the worst-off group being weighted higher than the other groups' utilities.</div>\n                <div>→ Measured as: <i>What’s the aggregated utility with the worst-off group having a higher weight?</i></div>\n                <div><b>Sufficientarianism</b>: Fairness is if all groups' have an average utility that is above the defined threshold. Inequalities are okay if every group is above the defined threshold.</div>\n                <div>→ Measured as: <i>How many groups are above the defined threshold?</i></div>\n                <br/>\n\n                <label htmlFor=\"pattern\">Choose a pattern:</label>\n                <select name=\"pattern\" id=\"pattern\" onChange={(e) => setPattern(e.target.value)}>\n                <option value=\"egalitarianism\">egalitarianism</option>\n                <option value=\"maximin\">maximin</option>\n                <option value=\"prioritarianism\">prioritarianism</option>\n                <option value=\"sufficientarianism\">sufficientarianism</option>\n                </select>\n                <br/>\n                <i>If you're unsure what to choose here, we recommend egalitarianism for your first evaluation.</i>\n\n                {pattern === 'sufficientarianism' &&\n                    <div>\n                        <label htmlFor=\"sufficientarianismThreshold\">Minimum average group utility</label>\n                        <input type=\"number\" id=\"sufficientarianismThreshold\" value={sufficientarianismThreshold} onChange={(e) => setSufficientarianismThreshold(e.target.value)}/>\n                    </div>\n                }\n\n                {pattern === 'prioritarianism' &&\n                    <div>\n                        <label htmlFor=\"prioritarianismWeight\">Weight for worst-off group</label>\n                        <input type=\"number\" id=\"prioritarianismWeight\" value={prioritarianismWeight} onChange={(e) => setPrioritarianismWeight(e.target.value)}/>\n                    </div>\n                }\n\n                <Snackbar\n                    anchorOrigin={{\n                    horizontal: \"left\",\n                    vertical: \"bottom\",\n                    }}\n                    open={open}\n                    autoHideDuration={10000}\n                    message={getSnackbarMessage()}\n                    onClose={handleClose}\n                    action={\n                    <React.Fragment>\n                        <IconButton\n                        size=\"small\"\n                        aria-label=\"close\"\n                        color=\"inherit\"\n                        onClick={handleClose}\n                        >\n                        <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }/>\n            </div>\n        </div>\n      );\n}\n\nfunction UtilityQuantifier({value, setSliderValue, label, unit, disabled}) {\n    var numberRegex = /[-+]?[0-9]+\\.?[0-9]+/\n    var unitRegex = /[^\\d+]+$/;\n    var multiplierRegex = /^\\*\\s*\\d+/;\n    const [currentSliderValue, setCurrentSliderValue] = useState(Number(value))\n    return (\n        <div>\n            <label>{label}</label>\n            <br/>\n            <input className=\"Slider\" disabled={disabled} type=\"range\" min=\"-10\" max=\"10\" step=\"0.1\" value={currentSliderValue} onChange={(e) => setCurrentSliderValue(Number(e.target.value))} onMouseUp={(e) => setSliderValue(Number(e.target.value))} list=\"ticks\" />\n            <datalist id=\"ticks\">\n                <option>-10</option>\n                <option>-9</option>\n                <option>-8</option>\n                <option>-7</option>\n                <option>-6</option>\n                <option>-5</option>\n                <option>-4</option>\n                <option>-3</option>\n                <option>-2</option>\n                <option>-1</option>\n                <option>0</option>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n                <option>6</option>\n                <option>7</option>\n                <option>8</option>\n                <option>9</option>\n                <option>10</option>\n            </datalist>\n            <span className=\"sliderSpan\">{currentSliderValue} {unit}</span>\n            {unit.match(multiplierRegex) !== null && \n            <span> = {Math.round(currentSliderValue * unit.match(numberRegex) * 100) / 100}{unit.match(unitRegex)}</span>}\n        </div>\n      );\n}\n\nexport default Configuration;"],"sourceRoot":""}